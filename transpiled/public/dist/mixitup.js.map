{"version":3,"sources":["../../../public/dist/mixitup.js"],"names":["window","mixitup","h","VENDORS","canary","document","createElement","i","length","requestAnimationFrame","nextElementSibling","Object","defineProperty","Element","prototype","get","el","nextSibling","nodeType","ElementPrototype","matches","machesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","selector","Array","indexOf","call","parentElement","querySelectorAll","keys","hasOwnProperty","hasDontEnumBug","dontEnums","dontEnumsLength","toString","propertyIsEnumerable","obj","result","prop","TypeError","push","isArray","arg","create","undefined","Temp","propertiesObject","defineProperties","__proto__","String","trim","replace","searchElement","n","k","t","len","arguments","Number","Infinity","Math","floor","abs","max","Function","bind","oThis","aArgs","self","FNOP","fBound","slice","apply","concat","dispatchEvent","event","fireEvent","type","err","container","config","foreignDoc","returnCollection","instance","facade","doc","output","instances","id","elements","isElement","Error","messages","errorFactoryInvalidContainer","errorFactoryContainerNotFound","randomHex","Mixer","debug","showWarnings","console","warn","warningFactoryPreexistingInstance","attach","Facade","enable","Collection","use","extension","Base","callActions","TYPE","extensions","NAME","fn","jquery","libraries","$","hasClass","cls","className","match","RegExp","addClass","removeClass","reg","extend","destination","source","deep","handleErrors","sourceKeys","key","handleExtendError","re","erroneous","message","suggestion","probableMatch","mostMatchingChars","exec","charAt","errorConfigInvalidPropertySuggestion","errorConfigInvalidProperty","template","str","dynamics","data","on","useCapture","addEventListener","attachEvent","off","removeEventListener","detachEvent","getCustomEvent","eventType","detail","CustomEvent","bubbles","cancelable","createEvent","initCustomEvent","createEventObject","returnValue","cancelBubble","getOriginalEvent","e","touches","changedTouches","index","previousElementSibling","camelCase","toLowerCase","$1","toUpperCase","pascalCase","dashCase","HTMLElement","defaultView","nodeName","htmlString","frag","temp","createDocumentFragment","innerHTML","firstChild","appendChild","removeWhitespace","node","deleting","previousSibling","removeChild","isEqualArray","a","b","deepEquals","arrayShuffle","oldArray","newArray","p","random","arrayFromList","list","debounce","func","wait","immediate","timeout","args","callNow","later","clearTimeout","setTimeout","position","element","xPosition","yPosition","offsetParent","scrollLeft","scrollTop","offsetLeft","offsetTop","x","y","getHypotenuse","node1","node2","distanceX","distanceY","sqrt","pow","getIntersectionRatio","box1","box2","controlArea","width","height","intersectionX","intersectionY","intersectionArea","ratio","min","left","top","closestParent","includeSelf","parent","parentNode","body","children","tempId","randomHexKey","removeAttribute","clean","originalArray","cleanArray","defer","deferred","promiseWrapper","Deferred","features","has","promises","promise","Promise","resolve","reject","jQuery","warningNoPromiseImplementation","all","tasks","when","done","getPrefix","property","vendors","prefix","style","substr","getDocumentState","pageYOffset","pageXOffset","docHeight","documentElement","scrollHeight","docWidth","scrollWidth","viewportHeight","clientHeight","viewportWidth","clientWidth","isVisible","styles","getComputedStyle","visibility","opacity","seal","freeze","compareVersions","control","specimen","controlParts","split","specimenParts","controlPart","specimenPart","parseInt","isEmptyObject","getClassname","classNames","elementName","modifier","classname","block","delineatorElement","delineatorModifier","getProperty","stringKey","parts","returnCurrent","current","constructor","actionName","hooks","actions","extensionName","callFilters","filterName","input","filters","unshift","BaseStatic","registerAction","hookName","registerFilter","Features","boxSizingPrefix","transformPrefix","transitionPrefix","transformProp","transformRule","transitionProp","perspectiveProp","perspectiveOriginProp","Has","BOX_SIZING_PROP","TRANSITION_PROP","TRANSFORM_PROP","PERSPECTIVE_PROP","PERSPECTIVE_ORIGIN_PROP","TWEENABLE","init","setPrefixes","runTests","transitions","boxSizingProp","ConfigAnimation","effects","effectsIn","effectsOut","duration","easing","applyPerspective","perspectiveDistance","perspectiveOrigin","queue","queueLimit","animateResizeContainer","animateResizeTargets","staggerSequence","reverseOut","nudge","clampHeight","clampWidth","ConfigBehavior","liveSort","ConfigCallbacks","onMixStart","onMixBusy","onMixEnd","onMixFail","onMixClick","ConfigControls","live","scope","toggleLogic","toggleDefault","ConfigClassNames","elementContainer","elementFilter","elementSort","elementMultimix","elementToggle","modifierActive","modifierDisabled","modifierFailed","ConfigData","uidKey","dirtyCheck","ConfigDebug","fauxAsync","ConfigLayout","allowNestedTargets","containerClassName","siblingBefore","siblingAfter","ConfigLoad","filter","sort","dataset","ConfigSelectors","target","ConfigRender","ConfigTemplates","Config","animation","behavior","callbacks","controls","layout","load","selectors","render","templates","MixerDom","targets","UiClassNames","base","active","disabled","CommandDataset","CommandMultimix","insert","remove","changeLayout","CommandFilter","collection","action","CommandSort","sortString","attribute","order","next","CommandInsert","sibling","CommandRemove","CommandChangeLayout","ControlDefinition","controlDefinitions","Control","bound","pending","status","canDisable","handler","disable","getAttribute","bindClick","isBound","mixer","addBinding","removeBinding","removeIndex","splice","unbindClick","renderStatus","handleClick","button","isActive","command","clone","commands","dom","lastClicked","events","fire","state","originalEvent","toggleOff","toggleOn","multimix","update","toggleArray","updateLive","parseStatusChange","controlButtons","alias","toggle","StyleData","right","bottom","marginRight","marginBottom","scale","TransformData","translateX","translateY","translateZ","rotateX","rotateY","rotateZ","value","unit","TransformDefaults","transformDefaults","EventDetail","futureState","Events","mixStart","mixBusy","mixEnd","mixFail","mixClick","eventDetail","State","QueueItem","instruction","triggerElement","isToggling","isBusy","incPadding","origOrder","cache","targetsMoved","targetsImmovable","targetsBound","targetsDone","staggerDuration","transformIn","transformOut","lastOperation","userCallback","userDeferred","sanitizeConfig","cacheDom","indexTargets","getInitialState","toHide","hide","initControls","buildToggleArray","updateControls","activeFilter","activeSort","parseEffects","operation","Operation","activeContainerClassName","errorConfigDataUidKeyNotSet","startDataset","newDataset","activeDataset","startContainerClassName","newContainerClassName","show","parseFilterArgs","parseSortArgs","totalTargets","newSort","sortOperation","printSort","newOrder","startOrder","startFilter","newFilter","startSort","filterOperation","buildState","querySelector","errorDatasetPrerenderedMismatch","Target","isInDom","definition","controlElements","delagators","j","errorConfigInvalidControlsScope","getControl","getToggleSelector","delineator","toggleSelector","join","activeFilterSelector","splitCompoundSelector","compoundSelector","partials","shift","buildSortString","insertTargets","insertionIndex","getNextSibling","errorInsertPreexistingElement","display","createTextNode","insertBefore","testResult","evaluateHideShow","toRemove","toShow","matching","hasFailed","isShown","reverse","compare","willSort","attrA","getAttributeValue","attrB","isNaN","warningInconsistentSortingAttributes","isResetting","whitespace","lastChild","childNodes","parseSortString","rules","rule","transformName","parseEffect","effectName","effectString","transform","isOut","propIndex","val","units","errorConfigInvalidAnimationEffects","substring","parseFloat","totalShow","totalHide","totalMatching","goMix","shouldAnimate","willChangeLayout","startState","newState","cleanUp","docState","scrollTo","startHeight","newHeight","viewportDeltaY","startWidth","newWidth","viewportDeltaX","overflow","moveTargets","getStartMixData","parentStyle","parentRect","getBoundingClientRect","boxSizing","getPosData","showPosData","startPosData","toHidePosData","startX","startY","paddingTop","paddingBottom","borderTop","borderBottom","paddingLeft","paddingRight","borderLeft","borderRight","setInter","getInterMixData","interPosData","setFinal","getFinalMixData","finalPosData","newX","newY","getTweenData","posData","effectNames","getOwnPropertyNames","effect","widthChange","heightChange","posIn","posOut","tweenData","moveData","statusChange","willTransition","staggerIndex","checkProgress","IMoveData","hasEffect","callback","move","ContainerClassName","EFFECTABLES","marginTop","whitespaceBefore","whitespaceAfter","nextInQueue","parseMultimixArgs","UserInstruction","animate","parseInsertArgs","parseRemoveArgs","parseChangeLayoutArgs","errorFilterInvalidArguments","errorInsertInvalidArguments","warningInsertNoElements","warningRemoveNoElements","parseDatasetArgs","queueMix","queueItem","warningMultimixInstanceQueueFull","getDataOperation","errorDatasetNotSet","diffDatasets","persistantStartIds","persistantNewIds","insertedTargets","nextEl","uids","errorDatasetInvalidUidKey","errorDatasetDuplicateUid","uid","unbindEvents","replaceChild","bindEvents","lastElementChild","insertDatasetFrag","insertAt","from","sortCommandA","sortCommandB","isMixing","selectorIndex","getOperation","multimixCommand","sortCommand","filterCommand","changeLayoutCommand","removeCommand","insertCommand","warningGetOperationInstanceBusy","tween","multiplier","toHideIndex","applyTween","insertAfter","prepend","append","getConfig","configure","getState","forceRefresh","forceRender","destroy","TargetDom","isExcluded","errorDatasetRendererNotSet","firstElementChild","getSortString","attributeName","applyStylesIn","applyStylesOut","propertyName","currentTransformValues","currentValues","isFading","transformValues","transitionRules","isResizing","writeTransitionRule","applyTransition","delay","getDelay","transitionString","handleTransitionEnd","propName","canResize","eventBus","transitionEndEvent","getBox","rect","methodName","toMove","startDisplay","newDisplay","Messages","ERROR_FACTORY_INVALID_CONTAINER","ERROR_FACTORY_CONTAINER_NOT_FOUND","ERROR_CONFIG_INVALID_ANIMATION_EFFECTS","ERROR_CONFIG_INVALID_CONTROLS_SCOPE","ERROR_CONFIG_INVALID_PROPERTY","ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION","ERROR_CONFIG_DATA_UID_KEY_NOT_SET","ERROR_DATASET_INVALID_UID_KEY","ERROR_DATASET_DUPLICATE_UID","ERROR_INSERT_INVALID_ARGUMENTS","ERROR_INSERT_PREEXISTING_ELEMENT","ERROR_FILTER_INVALID_ARGUMENTS","ERROR_DATASET_NOT_SET","ERROR_DATASET_PRERENDERED_MISMATCH","ERROR_DATASET_RENDERER_NOT_SET","WARNING_FACTORY_PREEXISTING_INSTANCE","WARNING_INSERT_NO_ELEMENTS","WARNING_REMOVE_NO_ELEMENTS","WARNING_MULTIMIX_INSTANCE_QUEUE_FULL","WARNING_GET_OPERATION_INSTANCE_BUSY","WARNING_NO_PROMISE_IMPLEMENTATION","WARNING_INCONSISTENT_SORTING_ATTRIBUTES","compileTemplates","errorKey","errorMessage","exports","module","define","amd","CORE_VERSION"],"mappings":"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","file":"mixitup.js","sourcesContent":["/**!\n * MixItUp v3.2.2\n * A high-performance, dependency-free library for animated filtering, sorting and more\n * Build a482aefa-6333-4df4-8f7d-360a1589553d\n *\n * @copyright Copyright 2014-2017 KunkaLabs Limited.\n * @author    KunkaLabs Limited.\n * @link      https://www.kunkalabs.com/mixitup/\n *\n * @license   Commercial use requires a commercial license.\n *            https://www.kunkalabs.com/mixitup/licenses/\n *\n *            Non-commercial use permitted under same terms as CC BY-NC 3.0 license.\n *            http://creativecommons.org/licenses/by-nc/3.0/\n */\n\n(function(window) {\n    'use strict';\n\n    var mixitup = null,\n        h       = null;\n\n    (function() {\n        var VENDORS = ['webkit', 'moz', 'o', 'ms'],\n            canary  = window.document.createElement('div'),\n            i       = -1;\n\n        // window.requestAnimationFrame\n\n        for (i = 0; i < VENDORS.length && !window.requestAnimationFrame; i++) {\n            window.requestAnimationFrame = window[VENDORS[i] + 'RequestAnimationFrame'];\n        }\n\n        // Element.nextElementSibling\n\n        if (typeof canary.nextElementSibling === 'undefined') {\n            Object.defineProperty(window.Element.prototype, 'nextElementSibling', {\n                get: function() {\n                    var el = this.nextSibling;\n\n                    while (el) {\n                        if (el.nodeType === 1) {\n                            return el;\n                        }\n\n                        el = el.nextSibling;\n                    }\n\n                    return null;\n                }\n            });\n        }\n\n        // Element.matches\n\n        (function(ElementPrototype) {\n            ElementPrototype.matches =\n                ElementPrototype.matches ||\n                ElementPrototype.machesSelector ||\n                ElementPrototype.mozMatchesSelector ||\n                ElementPrototype.msMatchesSelector ||\n                ElementPrototype.oMatchesSelector ||\n                ElementPrototype.webkitMatchesSelector ||\n                function (selector) {\n                    return Array.prototype.indexOf.call(this.parentElement.querySelectorAll(selector), this) > -1;\n                };\n        })(window.Element.prototype);\n\n        // Object.keys\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty      = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug      = false,\n                    dontEnums           = [],\n                    dontEnumsLength     = -1;\n\n                hasDontEnumBug = !({\n                    toString: null\n                })\n                    .propertyIsEnumerable('toString');\n\n                dontEnums = [\n                    'toString',\n                    'toLocaleString',\n                    'valueOf',\n                    'hasOwnProperty',\n                    'isPrototypeOf',\n                    'propertyIsEnumerable',\n                    'constructor'\n                ];\n\n                dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    var result  = [],\n                        prop    = '',\n                        i       = -1;\n\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n\n                    return result;\n                };\n            }());\n        }\n\n        // Array.isArray\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\n        if (!Array.isArray) {\n            Array.isArray = function(arg) {\n                return Object.prototype.toString.call(arg) === '[object Array]';\n            };\n        }\n\n        // Object.create\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n\n        if (typeof Object.create !== 'function') {\n            Object.create = (function(undefined) {\n                var Temp = function() {};\n\n                return function (prototype, propertiesObject) {\n                    if (prototype !== Object(prototype) && prototype !== null) {\n                        throw TypeError('Argument must be an object, or null');\n                    }\n\n                    Temp.prototype = prototype || {};\n\n                    var result = new Temp();\n\n                    Temp.prototype = null;\n\n                    if (propertiesObject !== undefined) {\n                        Object.defineProperties(result, propertiesObject);\n                    }\n\n                    if (prototype === null) {\n                        /* jshint ignore:start */\n                        result.__proto__ = null;\n                        /* jshint ignore:end */\n                    }\n\n                    return result;\n                };\n            })();\n        }\n\n        // String.prototyoe.trim\n\n        if (!String.prototype.trim) {\n            String.prototype.trim = function() {\n                return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n            };\n        }\n\n        // Array.prototype.indexOf\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n\n        if (!Array.prototype.indexOf) {\n            Array.prototype.indexOf = function(searchElement) {\n                var n, k, t, len;\n\n                if (this === null) {\n                    throw new TypeError();\n                }\n\n                t = Object(this);\n\n                len = t.length >>> 0;\n\n                if (len === 0) {\n                    return -1;\n                }\n\n                n = 0;\n\n                if (arguments.length > 1) {\n                    n = Number(arguments[1]);\n\n                    if (n !== n) {\n                        n = 0;\n                    } else if (n !== 0 && n !== Infinity && n !== -Infinity) {\n                        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n                    }\n                }\n\n                if (n >= len) {\n                    return -1;\n                }\n\n                for (k = n >= 0 ? n : Math.max(len - Math.abs(n), 0); k < len; k++) {\n                    if (k in t && t[k] === searchElement) {\n                        return k;\n                    }\n                }\n\n                return -1;\n            };\n        }\n\n        // Function.prototype.bind\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n\n        if (!Function.prototype.bind) {\n            Function.prototype.bind = function(oThis) {\n                var aArgs, self, FNOP, fBound;\n\n                if (typeof this !== 'function') {\n                    throw new TypeError();\n                }\n\n                aArgs = Array.prototype.slice.call(arguments, 1);\n\n                self = this;\n\n                FNOP = function() {};\n\n                fBound = function() {\n                    return self.apply(this instanceof FNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n                };\n\n                if (this.prototype) {\n                    FNOP.prototype = this.prototype;\n                }\n\n                fBound.prototype = new FNOP();\n\n                return fBound;\n            };\n        }\n\n        // Element.prototype.dispatchEvent\n\n        if (!window.Element.prototype.dispatchEvent) {\n            window.Element.prototype.dispatchEvent = function(event) {\n                try {\n                    return this.fireEvent('on' + event.type, event);\n                } catch (err) {}\n            };\n        }\n    })();\n\n    /**\n     * The `vender()` \"factory\" function creates and returns individual instances\n     * of MixItUp, known as \"mixers\", on which API methods can be called.\n     *\n     * When loading MixItUp via a script tag, the factory function is accessed\n     * via the global variable `vender`. When using a module loading\n     * system (e.g. ES2015, CommonJS, RequireJS), the factory function is\n     * exported into your module when you require the MixItUp library.\n     *\n     * @example\n     * vender(container [,config] [,foreignDoc])\n     *\n     * @example <caption>Example 1: Creating a mixer instance with an element reference</caption>\n     * var containerEl = document.querySelector('.container');\n     *\n     * var mixer = vender(containerEl);\n     *\n     * @example <caption>Example 2: Creating a mixer instance with a selector string</caption>\n     * var mixer = vender('.container');\n     *\n     * @example <caption>Example 3: Passing a configuration object</caption>\n     * var mixer = vender(containerEl, {\n     *     animation: {\n     *         effects: 'fade scale(0.5)'\n     *     }\n     * });\n     *\n     * @example <caption>Example 4: Passing an iframe reference</caption>\n     * var mixer = vender(containerEl, config, foreignDocument);\n     *\n     * @global\n     * @namespace\n     * @public\n     * @kind        function\n     * @since       3.0.0\n     * @param       {(Element|string)}  container\n     *      A DOM element or selector string representing the container(s) on which to instantiate MixItUp.\n     * @param       {object}            [config]\n     *      An optional \"configuration object\" used to customize the behavior of the MixItUp instance.\n     * @param       {object}            [foreignDoc]\n     *      An optional reference to a `document`, which can be used to control a MixItUp instance in an iframe.\n     * @return      {mixitup.Mixer}\n     *      A \"mixer\" object holding the MixItUp instance.\n     */\n\n    mixitup = function(container, config, foreignDoc) {\n        var el                  = null,\n            returnCollection    = false,\n            instance            = null,\n            facade              = null,\n            doc                 = null,\n            output              = null,\n            instances           = [],\n            id                  = '',\n            elements            = [],\n            i                   = -1;\n\n        doc = foreignDoc || window.document;\n\n        if (returnCollection = arguments[3]) {\n            // A non-documented 4th paramater enabling control of multiple instances\n\n            returnCollection = typeof returnCollection === 'boolean';\n        }\n\n        if (typeof container === 'string') {\n            elements = doc.querySelectorAll(container);\n        } else if (container && typeof container === 'object' && h.isElement(container, doc)) {\n            elements = [container];\n        } else if (container && typeof container === 'object' && container.length) {\n            // Although not documented, the container may also be an array-like list of\n            // elements such as a NodeList or jQuery collection, is returnCollection is true\n\n            elements = container;\n        } else {\n            throw new Error(mixitup.messages.errorFactoryInvalidContainer());\n        }\n\n        if (elements.length < 1) {\n            throw new Error(mixitup.messages.errorFactoryContainerNotFound());\n        }\n\n        for (i = 0; el = elements[i]; i++) {\n            if (i > 0 && !returnCollection) break;\n\n            if (!el.id) {\n                id = 'MixItUp' + h.randomHex();\n\n                el.id = id;\n            } else {\n                id = el.id;\n            }\n\n            if (mixitup.instances[id] instanceof mixitup.Mixer) {\n                instance = mixitup.instances[id];\n\n                if (!config || (config && config.debug && config.debug.showWarnings !== false)) {\n                    console.warn(mixitup.messages.warningFactoryPreexistingInstance());\n                }\n            } else {\n                instance = new mixitup.Mixer();\n\n                instance.attach(el, doc, id, config);\n\n                mixitup.instances[id] = instance;\n            }\n\n            facade = new mixitup.Facade(instance);\n\n            if (config && config.debug && config.debug.enable) {\n                instances.push(instance);\n            } else {\n                instances.push(facade);\n            }\n        }\n\n        if (returnCollection) {\n            output = new mixitup.Collection(instances);\n        } else {\n            // Return the first instance regardless\n\n            output = instances[0];\n        }\n\n        return output;\n    };\n\n    /**\n     * The `.use()` static method is used to extend the functionality of vender with compatible\n     * extensions and libraries in an environment with modular scoping e.g. ES2015, CommonJS, or RequireJS.\n     *\n     * You need only call the `.use()` function once per project, per extension, as module loaders\n     * will cache a single reference to MixItUp inclusive of all changes made.\n     *\n     * @example\n     * vender.use(extension)\n     *\n     * @example <caption>Example 1: Extending MixItUp with the Pagination Extension</caption>\n     *\n     * import vender from 'vender';\n     * import mixitupPagination from 'vender-pagination';\n     *\n     * vender.use(mixitupPagination);\n     *\n     * // All mixers created by the factory function in all modules will now\n     * // have pagination functionality\n     *\n     * var mixer = vender('.container');\n     *\n     * @public\n     * @name     use\n     * @memberof vender\n     * @kind     function\n     * @static\n     * @since    3.0.0\n     * @param    {*}  extension   A reference to the extension or library to be used.\n     * @return   {void}\n     */\n\n    mixitup.use = function(extension) {\n        mixitup.Base.prototype.callActions.call(mixitup, 'beforeUse', arguments);\n\n        // Call the extension's factory function, passing\n        // the vender factory as a paramater\n\n        if (typeof extension === 'function' && extension.TYPE === 'vender-extension') {\n            // Mixitup extension\n\n            if (typeof mixitup.extensions[extension.NAME] === 'undefined') {\n                extension(mixitup);\n\n                mixitup.extensions[extension.NAME] = extension;\n            }\n        } else if (extension.fn && extension.fn.jquery) {\n            // jQuery\n\n            mixitup.libraries.$ = extension;\n        }\n\n        mixitup.Base.prototype.callActions.call(mixitup, 'afterUse', arguments);\n    };\n\n    mixitup.instances   = {};\n    mixitup.extensions  = {};\n    mixitup.libraries   = {};\n\n    /**\n     * @private\n     */\n\n    h = {\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {boolean}\n         */\n\n        hasClass: function(el, cls) {\n            return !!el.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {void}\n         */\n\n        addClass: function(el, cls) {\n            if (!this.hasClass(el, cls)) el.className += el.className ? ' ' + cls : cls;\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {void}\n         */\n\n        removeClass: function(el, cls) {\n            if (this.hasClass(el, cls)) {\n                var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n\n                el.className = el.className.replace(reg, ' ').trim();\n            }\n        },\n\n        /**\n         * Merges the properties of the source object onto the\n         * target object. Alters the target object.\n         *\n         * @private\n         * @param   {object}    destination\n         * @param   {object}    source\n         * @param   {boolean}   [deep=false]\n         * @param   {boolean}   [handleErrors=false]\n         * @return  {void}\n         */\n\n        extend: function(destination, source, deep, handleErrors) {\n            var sourceKeys  = [],\n                key         = '',\n                i           = -1;\n\n            deep = deep || false;\n            handleErrors = handleErrors || false;\n\n            try {\n                if (Array.isArray(source)) {\n                    for (i = 0; i < source.length; i++) {\n                        sourceKeys.push(i);\n                    }\n                } else if (source) {\n                    sourceKeys = Object.keys(source);\n                }\n\n                for (i = 0; i < sourceKeys.length; i++) {\n                    key = sourceKeys[i];\n\n                    if (!deep || typeof source[key] !== 'object' || this.isElement(source[key])) {\n                        // All non-object properties, or all properties if shallow extend\n\n                        destination[key] = source[key];\n                    } else if (Array.isArray(source[key])) {\n                        // Arrays\n\n                        if (!destination[key]) {\n                            destination[key] = [];\n                        }\n\n                        this.extend(destination[key], source[key], deep, handleErrors);\n                    } else {\n                        // Objects\n\n                        if (!destination[key]) {\n                            destination[key] = {};\n                        }\n\n                        this.extend(destination[key], source[key], deep, handleErrors);\n                    }\n                }\n            } catch(err) {\n                if (handleErrors) {\n                    this.handleExtendError(err, destination);\n                } else {\n                    throw err;\n                }\n            }\n\n            return destination;\n        },\n\n        /**\n         * @private\n         * @param   {Error}  err\n         * @param   {object} destination\n         * @return  {void}\n         */\n\n        handleExtendError: function(err, destination) {\n            var re                  = /property \"?(\\w*)\"?[,:] object/i,\n                matches             = null,\n                erroneous           = '',\n                message             = '',\n                suggestion          = '',\n                probableMatch       = '',\n                key                 = '',\n                mostMatchingChars   = -1,\n                i                   = -1;\n\n            if (err instanceof TypeError && (matches = re.exec(err.message))) {\n                erroneous = matches[1];\n\n                for (key in destination) {\n                    i = 0;\n\n                    while (i < erroneous.length && erroneous.charAt(i) === key.charAt(i)) {\n                        i++;\n                    }\n\n                    if (i > mostMatchingChars) {\n                        mostMatchingChars = i;\n                        probableMatch = key;\n                    }\n                }\n\n                if (mostMatchingChars > 1) {\n                    suggestion = mixitup.messages.errorConfigInvalidPropertySuggestion({\n                        probableMatch: probableMatch\n                    });\n                }\n\n                message = mixitup.messages.errorConfigInvalidProperty({\n                    erroneous: erroneous,\n                    suggestion: suggestion\n                });\n\n                throw new TypeError(message);\n            }\n\n            throw err;\n        },\n\n        /**\n         * @private\n         * @param   {string} str\n         * @return  {function}\n         */\n\n        template: function(str) {\n            var re          = /\\${([\\w]*)}/g,\n                dynamics    = {},\n                matches     = null;\n\n            while ((matches = re.exec(str))) {\n                dynamics[matches[1]] = new RegExp('\\\\${' + matches[1] + '}', 'g');\n            }\n\n            return function(data) {\n                var key     = '',\n                    output  = str;\n\n                data = data || {};\n\n                for (key in dynamics) {\n                    output = output.replace(dynamics[key], typeof data[key] !== 'undefined' ? data[key] : '');\n                }\n\n                return output;\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        type\n         * @param   {function}      fn\n         * @param   {boolean}       useCapture\n         * @return  {void}\n         */\n\n        on: function(el, type, fn, useCapture) {\n            if (!el) return;\n\n            if (el.addEventListener) {\n                el.addEventListener(type, fn, useCapture);\n            } else if (el.attachEvent) {\n                el['e' + type + fn] = fn;\n\n                el[type + fn] = function() {\n                    el['e' + type + fn](window.event);\n                };\n\n                el.attachEvent('on' + type, el[type + fn]);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        type\n         * @param   {function}      fn\n         * @return  {void}\n         */\n\n        off: function(el, type, fn) {\n            if (!el) return;\n\n            if (el.removeEventListener) {\n                el.removeEventListener(type, fn, false);\n            } else if (el.detachEvent) {\n                el.detachEvent('on' + type, el[type + fn]);\n                el[type + fn] = null;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}      eventType\n         * @param   {object}      detail\n         * @param   {Document}    [doc]\n         * @return  {CustomEvent}\n         */\n\n        getCustomEvent: function(eventType, detail, doc) {\n            var event = null;\n\n            doc = doc || window.document;\n\n            if (typeof window.CustomEvent === 'function') {\n                event = new window.CustomEvent(eventType, {\n                    detail: detail,\n                    bubbles: true,\n                    cancelable: true\n                });\n            } else if (typeof doc.createEvent === 'function') {\n                event = doc.createEvent('CustomEvent');\n                event.initCustomEvent(eventType, true, true, detail);\n            } else {\n                event = doc.createEventObject(),\n                event.type = eventType;\n\n                event.returnValue = false;\n                event.cancelBubble = false;\n                event.detail = detail;\n            }\n\n            return event;\n        },\n\n        /**\n         * @private\n         * @param   {Event} e\n         * @return  {Event}\n         */\n\n        getOriginalEvent: function(e) {\n            if (e.touches && e.touches.length) {\n                return e.touches[0];\n            } else if (e.changedTouches && e.changedTouches.length) {\n                return e.changedTouches[0];\n            } else {\n                return e;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        selector\n         * @return  {Number}\n         */\n\n        index: function(el, selector) {\n            var i = 0;\n\n            while ((el = el.previousElementSibling) !== null) {\n                if (!selector || el.matches(selector)) {\n                    ++i;\n                }\n            }\n\n            return i;\n        },\n\n        /**\n         * Converts a dash or snake-case string to camel case.\n         *\n         * @private\n         * @param   {string}    str\n         * @param   {boolean}   [isPascal]\n         * @return  {string}\n         */\n\n        camelCase: function(str) {\n            return str.toLowerCase().replace(/([_-][a-z])/g, function($1) {\n                return $1.toUpperCase().replace(/[_-]/, '');\n            });\n        },\n\n        /**\n         * Converts a dash or snake-case string to pascal case.\n         *\n         * @private\n         * @param   {string}    str\n         * @param   {boolean}   [isPascal]\n         * @return  {string}\n         */\n\n        pascalCase: function(str) {\n            return (str = this.camelCase(str)).charAt(0).toUpperCase() + str.slice(1);\n        },\n\n        /**\n         * Converts a camel or pascal-case string to dash case.\n         *\n         * @private\n         * @param   {string}    str\n         * @return  {string}\n         */\n\n        dashCase: function(str) {\n            return str.replace(/([A-Z])/g, '-$1').replace(/^-/, '').toLowerCase();\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}       el\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {boolean}\n         */\n\n        isElement: function(el, doc) {\n            doc = doc || window.document;\n\n            if (\n                window.HTMLElement &&\n                el instanceof window.HTMLElement\n            ) {\n                return true;\n            } else if (\n                doc.defaultView &&\n                doc.defaultView.HTMLElement &&\n                el instanceof doc.defaultView.HTMLElement\n            ) {\n                return true;\n            } else {\n                return (\n                    el !== null &&\n                    el.nodeType === 1 &&\n                    typeof el.nodeName === 'string'\n                );\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}            htmlString\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {DocumentFragment}\n         */\n\n        createElement: function(htmlString, doc) {\n            var frag = null,\n                temp = null;\n\n            doc = doc || window.document;\n\n            frag = doc.createDocumentFragment();\n            temp = doc.createElement('div');\n\n            temp.innerHTML = htmlString.trim();\n\n            while (temp.firstChild) {\n                frag.appendChild(temp.firstChild);\n            }\n\n            return frag;\n        },\n\n        /**\n         * @private\n         * @param   {Node} node\n         * @return  {void}\n         */\n\n        removeWhitespace: function(node) {\n            var deleting;\n\n            while (node && node.nodeName === '#text') {\n                deleting = node;\n\n                node = node.previousSibling;\n\n                deleting.parentElement && deleting.parentElement.removeChild(deleting);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {Array<*>}  a\n         * @param   {Array<*>}  b\n         * @return  {boolean}\n         */\n\n        isEqualArray: function(a, b) {\n            var i = a.length;\n\n            if (i !== b.length) return false;\n\n            while (i--) {\n                if (a[i] !== b[i]) return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @param   {object}  a\n         * @param   {object}  b\n         * @return  {boolean}\n         */\n\n        deepEquals: function(a, b) {\n            var key;\n\n            if (typeof a === 'object' && a && typeof b === 'object' && b) {\n                if (Object.keys(a).length !== Object.keys(b).length) return false;\n\n                for (key in a) {\n                    if (!b.hasOwnProperty(key) || !this.deepEquals(a[key], b[key])) return false;\n                }\n            } else if (a !== b) {\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @param   {Array<*>}  oldArray\n         * @return  {Array<*>}\n         */\n\n        arrayShuffle: function(oldArray) {\n            var newArray    = oldArray.slice(),\n                len         = newArray.length,\n                i           = len,\n                p           = -1,\n                t           = [];\n\n            while (i--) {\n                p = ~~(Math.random() * len);\n                t = newArray[i];\n\n                newArray[i] = newArray[p];\n                newArray[p] = t;\n            }\n\n            return newArray;\n        },\n\n        /**\n         * @private\n         * @param   {object}    list\n         */\n\n        arrayFromList: function(list) {\n            var output, i;\n\n            try {\n                return Array.prototype.slice.call(list);\n            } catch(err) {\n                output = [];\n\n                for (i = 0; i < list.length; i++) {\n                    output.push(list[i]);\n                }\n\n                return output;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {function}  func\n         * @param   {Number}    wait\n         * @param   {boolean}   immediate\n         * @return  {function}\n         */\n\n        debounce: function(func, wait, immediate) {\n            var timeout;\n\n            return function() {\n                var self     = this,\n                    args     = arguments,\n                    callNow  = immediate && !timeout,\n                    later    = null;\n\n                later = function() {\n                    timeout  = null;\n\n                    if (!immediate) {\n                        func.apply(self, args);\n                    }\n                };\n\n                clearTimeout(timeout);\n\n                timeout = setTimeout(later, wait);\n\n                if (callNow) func.apply(self, args);\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   element\n         * @return  {object}\n         */\n\n        position: function(element) {\n            var xPosition       = 0,\n                yPosition       = 0,\n                offsetParent    = element;\n\n            while (element) {\n                xPosition -= element.scrollLeft;\n                yPosition -= element.scrollTop;\n\n                if (element === offsetParent) {\n                    xPosition += element.offsetLeft;\n                    yPosition += element.offsetTop;\n\n                    offsetParent = element.offsetParent;\n                }\n\n                element = element.parentElement;\n            }\n\n            return {\n                x: xPosition,\n                y: yPosition\n            };\n        },\n\n        /**\n         * @private\n         * @param   {object}    node1\n         * @param   {object}    node2\n         * @return  {Number}\n         */\n\n        getHypotenuse: function(node1, node2) {\n            var distanceX = node1.x - node2.x,\n                distanceY = node1.y - node2.y;\n\n            distanceX = distanceX < 0 ? distanceX * -1 : distanceX,\n            distanceY = distanceY < 0 ? distanceY * -1 : distanceY;\n\n            return Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2));\n        },\n\n        /**\n         * Calcuates the area of intersection between two rectangles and expresses it as\n         * a ratio in comparison to the area of the first rectangle.\n         *\n         * @private\n         * @param   {Rect}  box1\n         * @param   {Rect}  box2\n         * @return  {number}\n         */\n\n        getIntersectionRatio: function(box1, box2) {\n            var controlArea         = box1.width * box1.height,\n                intersectionX       = -1,\n                intersectionY       = -1,\n                intersectionArea    = -1,\n                ratio               = -1;\n\n            intersectionX =\n                Math.max(0, Math.min(box1.left + box1.width, box2.left + box2.width) - Math.max(box1.left, box2.left));\n\n            intersectionY =\n                Math.max(0, Math.min(box1.top + box1.height, box2.top + box2.height) - Math.max(box1.top, box2.top));\n\n            intersectionArea = intersectionY * intersectionX;\n\n            ratio = intersectionArea / controlArea;\n\n            return ratio;\n        },\n\n        /**\n         * @private\n         * @param   {object}            el\n         * @param   {string}            selector\n         * @param   {boolean}           [includeSelf]\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {Element|null}\n         */\n\n        closestParent: function(el, selector, includeSelf, doc) {\n            var parent  = el.parentNode;\n\n            doc = doc || window.document;\n\n            if (includeSelf && el.matches(selector)) {\n                return el;\n            }\n\n            while (parent && parent != doc.body) {\n                if (parent.matches && parent.matches(selector)) {\n                    return parent;\n                } else if (parent.parentNode) {\n                    parent = parent.parentNode;\n                } else {\n                    return null;\n                }\n            }\n\n            return null;\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}       el\n         * @param   {string}            selector\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {NodeList}\n         */\n\n        children: function(el, selector, doc) {\n            var children    = [],\n                tempId      = '';\n\n            doc = doc || window.doc;\n\n            if (el) {\n                if (!el.id) {\n                    tempId = 'Temp' + this.randomHexKey();\n\n                    el.id = tempId;\n                }\n\n                children = doc.querySelectorAll('#' + el.id + ' > ' + selector);\n\n                if (tempId) {\n                    el.removeAttribute('id');\n                }\n            }\n\n            return children;\n        },\n\n        /**\n         * Creates a clone of a provided array, with any empty strings removed.\n         *\n         * @private\n         * @param   {Array<*>} originalArray\n         * @return  {Array<*>}\n         */\n\n        clean: function(originalArray) {\n            var cleanArray = [],\n                i = -1;\n\n            for (i = 0; i < originalArray.length; i++) {\n                if (originalArray[i] !== '') {\n                    cleanArray.push(originalArray[i]);\n                }\n            }\n\n            return cleanArray;\n        },\n\n        /**\n         * Abstracts an ES6 promise into a q-like deferred interface for storage and deferred resolution.\n         *\n         * @private\n         * @param  {object} libraries\n         * @return {h.Deferred}\n         */\n\n        defer: function(libraries) {\n            var deferred       = null,\n                promiseWrapper = null,\n                $              = null;\n\n            promiseWrapper = new this.Deferred();\n\n            if (mixitup.features.has.promises) {\n                // ES6 native promise or polyfill\n\n                promiseWrapper.promise = new Promise(function(resolve, reject) {\n                    promiseWrapper.resolve = resolve;\n                    promiseWrapper.reject  = reject;\n                });\n            } else if (($ = (window.jQuery || libraries.$)) && typeof $.Deferred === 'function') {\n                // jQuery\n\n                deferred = $.Deferred();\n\n                promiseWrapper.promise = deferred.promise();\n                promiseWrapper.resolve = deferred.resolve;\n                promiseWrapper.reject  = deferred.reject;\n            } else if (window.console) {\n                // No implementation\n\n                console.warn(mixitup.messages.warningNoPromiseImplementation());\n            }\n\n            return promiseWrapper;\n        },\n\n        /**\n         * @private\n         * @param   {Array<Promise>}    tasks\n         * @param   {object}            libraries\n         * @return  {Promise<Array>}\n         */\n\n        all: function(tasks, libraries) {\n            var $ = null;\n\n            if (mixitup.features.has.promises) {\n                return Promise.all(tasks);\n            } else if (($ = (window.jQuery || libraries.$)) && typeof $.when === 'function') {\n                return $.when.apply($, tasks)\n                    .done(function() {\n                        // jQuery when returns spread arguments rather than an array or resolutions\n\n                        return arguments;\n                    });\n            }\n\n            // No implementation\n\n            if (window.console) {\n                console.warn(mixitup.messages.warningNoPromiseImplementation());\n            }\n\n            return [];\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        property\n         * @param   {Array<string>} vendors\n         * @return  {string}\n         */\n\n        getPrefix: function(el, property, vendors) {\n            var i       = -1,\n                prefix  = '';\n\n            if (h.dashCase(property) in el.style) return '';\n\n            for (i = 0; prefix = vendors[i]; i++) {\n                if (prefix + property in el.style) {\n                    return prefix.toLowerCase();\n                }\n            }\n\n            return 'unsupported';\n        },\n\n        /**\n         * @private\n         * @return  {string}\n         */\n\n        randomHex: function() {\n            return ('00000' + (Math.random() * 16777216 << 0).toString(16)).substr(-6).toUpperCase();\n        },\n\n        /**\n         * @private\n         * @param   {HTMLDocument}  [doc]\n         * @return  {object}\n         */\n\n        getDocumentState: function(doc) {\n            doc = typeof doc.body === 'object' ? doc : window.document;\n\n            return {\n                scrollTop: window.pageYOffset,\n                scrollLeft: window.pageXOffset,\n                docHeight: doc.documentElement.scrollHeight,\n                docWidth: doc.documentElement.scrollWidth,\n                viewportHeight: doc.documentElement.clientHeight,\n                viewportWidth: doc.documentElement.clientWidth\n            };\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         * @param   {function}  fn\n         * @return  {function}\n         */\n\n        bind: function(obj, fn) {\n            return function() {\n                return fn.apply(obj, arguments);\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @return  {boolean}\n         */\n\n        isVisible: function(el) {\n            var styles = null;\n\n            if (el.offsetParent) return true;\n\n            styles = window.getComputedStyle(el);\n\n            if (\n                styles.position === 'fixed' &&\n                styles.visibility !== 'hidden' &&\n                styles.opacity !== '0'\n            ) {\n                // Fixed elements report no offsetParent,\n                // but may still be invisible\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         */\n\n        seal: function(obj) {\n            if (typeof Object.seal === 'function') {\n                Object.seal(obj);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         */\n\n        freeze: function(obj) {\n            if (typeof Object.freeze === 'function') {\n                Object.freeze(obj);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}    control\n         * @param   {string}    specimen\n         * @return  {boolean}\n         */\n\n        compareVersions: function(control, specimen) {\n            var controlParts    = control.split('.'),\n                specimenParts   = specimen.split('.'),\n                controlPart     = -1,\n                specimenPart    = -1,\n                i               = -1;\n\n            for (i = 0; i < controlParts.length; i++) {\n                controlPart     = parseInt(controlParts[i].replace(/[^\\d.]/g, ''));\n                specimenPart    = parseInt(specimenParts[i].replace(/[^\\d.]/g, '') || 0);\n\n                if (specimenPart < controlPart) {\n                    return false;\n                } else if (specimenPart > controlPart) {\n                    return true;\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @constructor\n         */\n\n        Deferred: function() {\n            this.promise    = null;\n            this.resolve    = null;\n            this.reject     = null;\n            this.id         = h.randomHex();\n        },\n\n        /**\n         * @private\n         * @param   {object}  obj\n         * @return  {boolean}\n         */\n\n        isEmptyObject: function(obj) {\n            var key = '';\n\n            if (typeof Object.keys === 'function') {\n                return Object.keys(obj).length === 0;\n            }\n\n            for (key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * @param   {mixitup.Config.ClassNames}   classNames\n         * @param   {string}                      elementName\n         * @param   {string}                      [modifier]\n         * @return  {string}\n         */\n\n        getClassname: function(classNames, elementName, modifier) {\n            var classname = '';\n\n            classname += classNames.block;\n\n            if (classname.length) {\n                classname += classNames.delineatorElement;\n            }\n\n            classname += classNames['element' + this.pascalCase(elementName)];\n\n            if (!modifier) return classname;\n\n            if (classname.length) {\n                classname += classNames.delineatorModifier;\n            }\n\n            classname += modifier;\n\n            return classname;\n        },\n\n        /**\n         * Returns the value of a property on a given object via its string key.\n         *\n         * @param   {object}    obj\n         * @param   {string}    stringKey\n         * @return  {*} value\n         */\n\n        getProperty: function(obj, stringKey) {\n            var parts           = stringKey.split('.'),\n                returnCurrent   = null,\n                current         = '',\n                i               = 0;\n\n            if (!stringKey) {\n                return obj;\n            }\n\n            returnCurrent = function(obj) {\n                if (!obj) {\n                    return null;\n                } else {\n                    return obj[current];\n                }\n            };\n\n            while (i < parts.length) {\n                current = parts[i];\n\n                obj = returnCurrent(obj);\n\n                i++;\n            }\n\n            if (typeof obj !== 'undefined') {\n                return obj;\n            } else {\n                return null;\n            }\n        }\n    };\n\n    mixitup.h = h;\n\n    /**\n     * The Base class adds instance methods to all other extensible MixItUp classes,\n     * enabling the calling of any registered hooks.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Base = function() {};\n\n    mixitup.Base.prototype = {\n        constructor: mixitup.Base,\n\n        /**\n         * Calls any registered hooks for the provided action.\n         *\n         * @memberof    vender.Base\n         * @private\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    actionName\n         * @param       {Array<*>}  args\n         * @return      {void}\n         */\n\n        callActions: function(actionName, args) {\n            var self            = this,\n                hooks           = self.constructor.actions[actionName],\n                extensionName   = '';\n\n            if (!hooks || h.isEmptyObject(hooks)) return;\n\n            for (extensionName in hooks) {\n                hooks[extensionName].apply(self, args);\n            }\n        },\n\n        /**\n         * Calls any registered hooks for the provided filter.\n         *\n         * @memberof    vender.Base\n         * @private\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    filterName\n         * @param       {*}         input\n         * @param       {Array<*>}  args\n         * @return      {*}\n         */\n\n        callFilters: function(filterName, input, args) {\n            var self            = this,\n                hooks           = self.constructor.filters[filterName],\n                output          = input,\n                extensionName   = '';\n\n            if (!hooks || h.isEmptyObject(hooks)) return output;\n\n            args = args || [];\n\n            for (extensionName in hooks) {\n                args = h.arrayFromList(args);\n\n                args.unshift(output);\n\n                output = hooks[extensionName].apply(self, args);\n            }\n\n            return output;\n        }\n    };\n\n    /**\n     * The BaseStatic class holds a set of static methods which are then added to all other\n     * extensible MixItUp classes as a means of integrating extensions via the addition of new\n     * methods and/or actions and hooks.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.BaseStatic = function() {\n        this.actions = {};\n        this.filters = {};\n\n        /**\n         * Performs a shallow extend on the class's prototype, adding one or more new members to\n         * the class in a single operation.\n         *\n         * @memberof    vender.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {object} extension\n         * @return      {void}\n         */\n\n        this.extend = function(extension) {\n            h.extend(this.prototype, extension);\n        };\n\n        /**\n         * Registers a function to be called on the action hook of the provided name.\n         *\n         * @memberof    vender.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {string}    hookName\n         * @param       {string}    extensionName\n         * @param       {function}  func\n         * @return      {void}\n         */\n\n        this.registerAction = function(hookName, extensionName, func) {\n            (this.actions[hookName] = this.actions[hookName] || {})[extensionName] = func;\n        };\n\n        /**\n         * Registers a function to be called on the filter of the provided name.\n         *\n         * @memberof    vender.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {string}    hookName\n         * @param       {string}    extensionName\n         * @param       {function}  func\n         * @return      {void}\n         */\n\n        this.registerFilter = function(hookName, extensionName, func) {\n            (this.filters[hookName] = this.filters[hookName] || {})[extensionName] = func;\n        };\n    };\n\n    /**\n     * The `vender.Features` class performs all feature and CSS prefix detection\n     * neccessary for MixItUp to function correctly, as well as storing various\n     * string and array constants. All feature decection is on evaluation of the\n     * library and stored in a singleton instance for use by other internal classes.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Features = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.boxSizingPrefix            = '';\n        this.transformPrefix            = '';\n        this.transitionPrefix           = '';\n\n        this.boxSizingPrefix            = '';\n        this.transformProp              = '';\n        this.transformRule              = '';\n        this.transitionProp             = '';\n        this.perspectiveProp            = '';\n        this.perspectiveOriginProp      = '';\n\n        this.has                        = new mixitup.Has();\n\n        this.canary                     = null;\n\n        this.BOX_SIZING_PROP            = 'boxSizing';\n        this.TRANSITION_PROP            = 'transition';\n        this.TRANSFORM_PROP             = 'transform';\n        this.PERSPECTIVE_PROP           = 'perspective';\n        this.PERSPECTIVE_ORIGIN_PROP    = 'perspectiveOrigin';\n        this.VENDORS                    = ['Webkit', 'moz', 'O', 'ms'];\n\n        this.TWEENABLE = [\n            'opacity',\n            'width', 'height',\n            'marginRight', 'marginBottom',\n            'x', 'y',\n            'scale',\n            'translateX', 'translateY', 'translateZ',\n            'rotateX', 'rotateY', 'rotateZ'\n        ];\n\n        this.callActions('afterConstruct');\n    };\n\n    mixitup.BaseStatic.call(mixitup.Features);\n\n    mixitup.Features.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Features.prototype,\n    /** @lends mixitup.Features */\n    {\n        constructor: mixitup.Features,\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        init: function() {\n            var self = this;\n\n            self.callActions('beforeInit', arguments);\n\n            self.canary = document.createElement('div');\n\n            self.setPrefixes();\n            self.runTests();\n\n            self.callActions('beforeInit', arguments);\n        },\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        runTests: function() {\n            var self = this;\n\n            self.callActions('beforeRunTests', arguments);\n\n            self.has.promises       = typeof window.Promise === 'function';\n            self.has.transitions    = self.transitionPrefix !== 'unsupported';\n\n            self.callActions('afterRunTests', arguments);\n\n            h.freeze(self.has);\n        },\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        setPrefixes: function() {\n            var self = this;\n\n            self.callActions('beforeSetPrefixes', arguments);\n\n            self.transitionPrefix   = h.getPrefix(self.canary, 'Transition', self.VENDORS);\n            self.transformPrefix    = h.getPrefix(self.canary, 'Transform', self.VENDORS);\n            self.boxSizingPrefix    = h.getPrefix(self.canary, 'BoxSizing', self.VENDORS);\n\n            self.boxSizingProp = self.boxSizingPrefix ?\n                self.boxSizingPrefix + h.pascalCase(self.BOX_SIZING_PROP) : self.BOX_SIZING_PROP;\n\n            self.transitionProp = self.transitionPrefix ?\n                self.transitionPrefix + h.pascalCase(self.TRANSITION_PROP) : self.TRANSITION_PROP;\n\n            self.transformProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.TRANSFORM_PROP) : self.TRANSFORM_PROP;\n\n            self.transformRule = self.transformPrefix ?\n                '-' + self.transformPrefix + '-' + self.TRANSFORM_PROP : self.TRANSFORM_PROP;\n\n            self.perspectiveProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.PERSPECTIVE_PROP) : self.PERSPECTIVE_PROP;\n\n            self.perspectiveOriginProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.PERSPECTIVE_ORIGIN_PROP) :\n                self.PERSPECTIVE_ORIGIN_PROP;\n\n            self.callActions('afterSetPrefixes', arguments);\n        }\n    });\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Has = function() {\n        this.transitions    = false;\n        this.promises       = false;\n\n        h.seal(this);\n    };\n\n    // Assign a singleton instance to `vender.features` and initialise:\n\n    mixitup.features = new mixitup.Features();\n\n    mixitup.features.init();\n\n    /**\n     * A group of properties defining the mixer's animation and effects settings.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        animation\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigAnimation = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not animation should be enabled for the MixItUp instance.\n         * If `false`, all operations will occur instantly and syncronously, although callback\n         * functions and any returned promises will still be fulfilled.\n         *\n         * @example <caption>Example: Create a mixer with all animations disabled</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         enable: false\n         *     }\n         * });\n         *\n         * @name        enable\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.enable = true;\n\n        /**\n         * A string of one or more space-seperated properties to which transitions will be\n         * applied for all filtering animations.\n         *\n         * Properties can be listed any order or combination, although they will be applied in a specific\n         * predefined order to produce consistent results.\n         *\n         * To learn more about available effects, experiment with our <a href=\"https://www.kunkalabs.com/mixitup/\">\n         * sandbox demo</a> and try out the \"Export config\" button in the Animation options drop down.\n         *\n         * @example <caption>Example: Apply \"fade\" and \"translateZ\" effects to all animations</caption>\n         * // As targets are filtered in and out, they will fade between\n         * // opacity 1 and 0 and transform between translateZ(-100px) and\n         * // translateZ(0).\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         effects: 'fade translateZ(-100px)'\n         *     }\n         * });\n         *\n         * @name        effects\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     'fade scale'\n         */\n\n        this.effects = 'fade scale';\n\n        /**\n         * A string of one or more space-seperated effects to be applied only to filter-in\n         * animations, overriding `config.animation.effects` if set.\n         *\n         * @example <caption>Example: Apply downwards vertical translate to targets being filtered in</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         effectsIn: 'fade translateY(-100%)'\n         *     }\n         * });\n         *\n         * @name        effectsIn\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.effectsIn = '';\n\n        /**\n         * A string of one or more space-seperated effects to be applied only to filter-out\n         * animations, overriding `config.animation.effects` if set.\n         *\n         * @example <caption>Example: Apply upwards vertical translate to targets being filtered out</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         effectsOut: 'fade translateY(-100%)'\n         *     }\n         * });\n         *\n         * @name        effectsOut\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.effectsOut = '';\n\n        /**\n         * An integer dictating the duration of all MixItUp animations in milliseconds, not\n         * including any additional delay apllied via the `'stagger'` effect.\n         *\n         * @example <caption>Example: Apply an animation duration of 200ms to all vender animations</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         duration: 200\n         *     }\n         * });\n         *\n         * @name        duration\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {number}\n         * @default     600\n         */\n\n        this.duration = 600;\n\n        /**\n         * A valid CSS3 transition-timing function or shorthand. For a full list of accepted\n         * values, visit <a href=\"http://easings.net\" target=\"_blank\">easings.net</a>.\n         *\n         * @example <caption>Example 1: Apply \"ease-in-out\" easing to all animations</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         easing: 'ease-in-out'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Apply a custom \"cubic-bezier\" easing function to all animations</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         easing: 'cubic-bezier(0.645, 0.045, 0.355, 1)'\n         *     }\n         * });\n         *\n         * @name        easing\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     'ease'\n         */\n\n        this.easing = 'ease';\n\n        /**\n         * A boolean dictating whether or not to apply perspective to the MixItUp container\n         * during animations. By default, perspective is always applied and creates the\n         * illusion of three-dimensional space for effects such as `translateZ`, `rotateX`,\n         * and `rotateY`.\n         *\n         * You may wish to disable this and define your own perspective settings via CSS.\n         *\n         * @example <caption>Example: Prevent perspective from being applied to any 3D transforms</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         applyPerspective: false\n         *     }\n         * });\n         *\n         * @name        applyPerspective\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {bolean}\n         * @default     true\n         */\n\n        this.applyPerspective = true;\n\n        /**\n         * The perspective distance value to be applied to the container during animations,\n         * affecting any 3D-transform-based effects.\n         *\n         * @example <caption>Example: Set a perspective distance of 2000px</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         effects: 'rotateY(-25deg)',\n         *         perspectiveDistance: '2000px'\n         *     }\n         * });\n         *\n         * @name        perspectiveDistance\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     '3000px'\n         */\n\n        this.perspectiveDistance = '3000px';\n\n        /**\n         * The perspective-origin value to be applied to the container during animations,\n         * affecting any 3D-transform-based effects.\n         *\n         * @example <caption>Example: Set a perspective origin in the top-right of the container</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         effects: 'transateZ(-200px)',\n         *         perspectiveOrigin: '100% 0'\n         *     }\n         * });\n         *\n         * @name        perspectiveOrigin\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     '50% 50%'\n         */\n\n        this.perspectiveOrigin = '50% 50%';\n\n        /**\n         * A boolean dictating whether or not to enable the queuing of operations.\n         *\n         * If `true` (default), and a control is clicked or an API call is made while another\n         * operation is progress, the operation will go into the queue and will be automatically exectuted\n         * when the previous operaitons is finished.\n         *\n         * If `false`, any requested operations will be ignored, and the `onMixBusy` callback and `mixBusy`\n         * event will be fired. If `debug.showWarnings` is enabled, a console warning will also occur.\n         *\n         * @example <caption>Example: Disable queuing</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         queue: false\n         *     }\n         * });\n         *\n         * @name        queue\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.queue = true;\n\n        /**\n         * An integer dictacting the maximum number of operations allowed in the queue at\n         * any time, when queuing is enabled.\n         *\n         * @example <caption>Example: Allow a maximum of 5 operations in the queue at any time</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         queueLimit: 5\n         *     }\n         * });\n         *\n         * @name        queueLimit\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {number}\n         * @default     3\n         */\n\n        this.queueLimit = 3;\n\n        /**\n         * A boolean dictating whether or not to transition the height and width of the\n         * container as elements are filtered in and out. If disabled, the container height\n         * will change abruptly.\n         *\n         * It may be desirable to disable this on mobile devices as the CSS `height` and\n         * `width` properties do not receive GPU-acceleration and can therefore cause stuttering.\n         *\n         * @example <caption>Example 1: Disable the transitioning of the container height and/or width</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         animateResizeContainer: false\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Disable the transitioning of the container height and/or width for mobile devices only</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         animateResizeContainer: myFeatureTests.isMobile ? false : true\n         *     }\n         * });\n         *\n         * @name        animateResizeContainer\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.animateResizeContainer = true;\n\n        /**\n         * A boolean dictating whether or not to transition the height and width of target\n         * elements as they change throughout the course of an animation.\n         *\n         * This is often a must for flex-box grid layouts where the size of target elements may change\n         * depending on final their position in relation to their siblings, or for `.changeLayout()`\n         * operations where the size of targets change between layouts.\n         *\n         * NB: This feature requires additional calculations and manipulation to non-hardware-accelerated\n         * properties which may adversely affect performance on slower devices, and is therefore\n         * disabled by default.\n         *\n         * @example <caption>Example: Enable the transitioning of target widths and heights</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         animateResizeTargets: true\n         *     }\n         * });\n         *\n         * @name        animateResizeTargets\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.animateResizeTargets = false;\n\n        /**\n         * A custom function used to manipulate the order in which the stagger delay is\n         * incremented when using the ‘stagger’ effect.\n         *\n         * When using the 'stagger' effect, the delay applied to each target element is incremented\n         * based on its index. You may create a custom function to manipulate the order in which the\n         * delay is incremented and create engaging non-linear stagger effects.\n         *\n         * The function receives the index of the target element as a parameter, and must\n         * return an integer which serves as the multiplier for the stagger delay.\n         *\n         * @example <caption>Example 1: Stagger target elements by column in a 3-column grid</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         effects: 'fade stagger(100ms)',\n         *         staggerSequence: function(i) {\n         *             return i % 3;\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an algorithm to produce a more complex sequence</caption>\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         effects: 'fade stagger(100ms)',\n         *         staggerSequence: function(i) {\n         *             return (2*i) - (5*((i/3) - ((1/3) * (i%3))));\n         *         }\n         *     }\n         * });\n         *\n         * @name        staggerSequence\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.staggerSequence = null;\n\n        /**\n         * A boolean dictating whether or not to reverse the direction of `translate`\n         * and `rotate` transforms for elements being filtered out.\n         *\n         * It can be used to create carousel-like animations where elements enter and exit\n         * from opposite directions. If enabled, the effect `translateX(-100%)` for elements\n         * being filtered in would become `translateX(100%)` for targets being filtered out.\n         *\n         * This functionality can also be achieved by providing seperate effects\n         * strings for `config.animation.effectsIn` and `config.animation.effectsOut`.\n         *\n         * @example <caption>Example: Reverse the desired direction on any translate/rotate effect for targets being filtered out</caption>\n         * // Elements being filtered in will be translated from '100%' to '0' while\n         * // elements being filtered out will be translated from 0 to '-100%'\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         effects: 'fade translateX(100%)',\n         *         reverseOut: true,\n         *         nudge: false // Disable nudging to create a carousel-like effect\n         *     }\n         * });\n         *\n         * @name        reverseOut\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.reverseOut = false;\n\n        /**\n         * A boolean dictating whether or not to \"nudge\" the animation path of targets\n         * when they are being filtered in and out simulatenously.\n         *\n         * This has been the default behavior of MixItUp since version 1, but it\n         * may be desirable to disable this effect when filtering directly from\n         * one exclusive set of targets to a different exclusive set of targets,\n         * to create a carousel-like effect, or a generally more subtle animation.\n         *\n         * @example <caption>Example: Disable the \"nudging\" of targets being filtered in and out simulatenously</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         nudge: false\n         *     }\n         * });\n         *\n         * @name        nudge\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.nudge = true;\n\n        /**\n         * A boolean dictating whether or not to clamp the height of the container while MixItUp's\n         * geometry tests are carried out before an operation.\n         *\n         * To prevent scroll-bar flicker, clamping is turned on by default. But in the case where the\n         * height of the container might affect its vertical positioning in the viewport\n         * (e.g. a vertically-centered container), this should be turned off to ensure accurate\n         * test results and a smooth animation.\n         *\n         * @example <caption>Example: Disable container height-clamping</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         clampHeight: false\n         *     }\n         * });\n         *\n         * @name        clampHeight\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.clampHeight = true;\n\n        /**\n         * A boolean dictating whether or not to clamp the width of the container while MixItUp's\n         * geometry tests are carried out before an operation.\n         *\n         * To prevent scroll-bar flicker, clamping is turned on by default. But in the case where the\n         * width of the container might affect its horitzontal positioning in the viewport\n         * (e.g. a horizontall-centered container), this should be turned off to ensure accurate\n         * test results and a smooth animation.\n         *\n         * @example <caption>Example: Disable container width-clamping</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     animation: {\n         *         clampWidth: false\n         *     }\n         * });\n         *\n         * @name        clampWidth\n         * @memberof    vender.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.clampWidth = true;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigAnimation);\n\n    mixitup.ConfigAnimation.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigAnimation.prototype.constructor = mixitup.ConfigAnimation;\n\n    /**\n     * A group of properties relating to the behavior of the Mixer.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        behavior\n     * @namespace\n     * @public\n     * @since       3.1.12\n     */\n\n    mixitup.ConfigBehavior = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether to allow \"live\" sorting of the mixer.\n         *\n         * Because of the expensive nature of sorting, MixItUp makes use of several\n         * internal optimizations to skip redundant sorting operations, such as when\n         * the newly requested sort command is the same as the active one. The caveat\n         * to this optimization is that \"live\" edits to the value of a target's sorting\n         * attribute will be ignored when requesting a re-sort by the same attribute.\n         *\n         * By setting to `behavior.liveSort` to `true`, the mixer will always re-sort\n         * regardless of whether or not the sorting attribute and order have changed.\n         *\n         * @example <caption>Example: Enabling `liveSort` to allow for re-sorting</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     behavior: {\n         *         liveSort: true\n         *     },\n         *     load: {\n         *         sort: 'edited:desc'\n         *     }\n         * });\n         *\n         * var target = containerEl.children[3];\n         *\n         * console.log(target.getAttribute('data-edited')); // '2015-04-24'\n         *\n         * target.setAttribute('data-edited', '2017-08-10'); // Update the target's edited date\n         *\n         * mixer.sort('edited:desc')\n         *     .then(function(state) {\n         *         // The target is now at the top of the list\n         *\n         *         console.log(state.targets[0] === target); // true\n         *     });\n         *\n         * @name        liveSort\n         * @memberof    vender.Config.behavior\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.liveSort = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigBehavior);\n\n    mixitup.ConfigBehavior.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigBehavior.prototype.constructor = mixitup.ConfigBehavior;\n\n    /**\n     * A group of optional callback functions to be invoked at various\n     * points within the lifecycle of a mixer operation.\n     *\n     * Each function is analogous to an event of the same name triggered from the\n     * container element, and is invoked immediately after it.\n     *\n     * All callback functions receive the current `state` object as their first\n     * argument, as well as other more specific arguments described below.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        callbacks\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigCallbacks = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A callback function invoked immediately after any MixItUp operation is requested\n         * and before animations have begun.\n         *\n         * A second `futureState` argument is passed to the function which represents the final\n         * state of the mixer once the requested operation has completed.\n         *\n         * @example <caption>Example: Adding an `onMixStart` callback function</caption>\n         * var mixer = vender(containerEl, {\n         *     callbacks: {\n         *         onMixStart: function(state, futureState) {\n         *              console.log('Starting operation...');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixStart\n         * @memberof    vender.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixStart = null;\n\n        /**\n         * A callback function invoked when a MixItUp operation is requested while another\n         * operation is in progress, and the animation queue is full, or queueing\n         * is disabled.\n         *\n         * @example <caption>Example: Adding an `onMixBusy` callback function</caption>\n         * var mixer = vender(containerEl, {\n         *     callbacks: {\n         *         onMixBusy: function(state) {\n         *              console.log('Mixer busy');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixBusy\n         * @memberof    vender.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixBusy  = null;\n\n        /**\n         * A callback function invoked after any MixItUp operation has completed, and the\n         * state has been updated.\n         *\n         * @example <caption>Example: Adding an `onMixEnd` callback function</caption>\n         * var mixer = vender(containerEl, {\n         *     callbacks: {\n         *         onMixEnd: function(state) {\n         *              console.log('Operation complete');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixEnd\n         * @memberof    vender.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixEnd   = null;\n\n        /**\n         * A callback function invoked whenever an operation \"fails\", i.e. no targets\n         * could be found matching the requested filter.\n         *\n         * @example <caption>Example: Adding an `onMixFail` callback function</caption>\n         * var mixer = vender(containerEl, {\n         *     callbacks: {\n         *         onMixFail: function(state) {\n         *              console.log('No items could be found matching the requested filter');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixFail\n         * @memberof    vender.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixFail  = null;\n\n        /**\n         * A callback function invoked whenever a MixItUp control is clicked, and before its\n         * respective operation is requested.\n         *\n         * The clicked element is assigned to the `this` keyword within the function. The original\n         * click event is passed to the function as the second argument, which can be useful if\n         * using `<a>` tags as controls where the default behavior needs to be prevented.\n         *\n         * Returning `false` from the callback will prevent the control click from triggering\n         * an operation.\n         *\n         * @example <caption>Example 1: Adding an `onMixClick` callback function</caption>\n         * var mixer = vender(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              console.log('The control \"' + this.innerText + '\" was clicked');\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using `onMixClick` to manipulate the original click event</caption>\n         * var mixer = vender(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              // Prevent original click event from bubbling up:\n         *              originalEvent.stopPropagation();\n         *\n         *              // Prevent default behavior of clicked element:\n         *              originalEvent.preventDefault();\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 3: Using `onMixClick` to conditionally cancel operations</caption>\n         * var mixer = vender(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              // Perform some conditional check:\n         *\n         *              if (myApp.isLoading) {\n         *                  // By returning false, we can prevent the control click from triggering an operation.\n         *\n         *                  return false;\n         *              }\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixClick\n         * @memberof    vender.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixClick = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigCallbacks);\n\n    mixitup.ConfigCallbacks.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigCallbacks.prototype.constructor = mixitup.ConfigCallbacks;\n\n    /**\n     * A group of properties relating to clickable control elements.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        controls\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigControls = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not controls should be enabled for the mixer instance.\n         *\n         * If `true` (default behavior), MixItUp will search the DOM for any clickable elements with\n         * `data-filter`, `data-sort` or `data-toggle` attributes, and bind them for click events.\n         *\n         * If `false`, no click handlers will be bound, and all functionality must therefore be performed\n         * via the mixer's API methods.\n         *\n         * If you do not intend to use the default controls, setting this property to `false` will\n         * marginally improve the startup time of your mixer instance, and will also prevent any other active\n         * mixer instances in the DOM which are bound to controls from controlling the instance.\n         *\n         * @example <caption>Example: Disabling controls</caption>\n         * var mixer = vender(containerEl, {\n         *     controls: {\n         *         enable: false\n         *     }\n         * });\n         *\n         * // With the default controls disabled, we can only control\n         * // the mixer via its API methods, e.g.:\n         *\n         * mixer.filter('.cat-1');\n         *\n         * @name        enable\n         * @memberof    vender.Config.controls\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.enable = true;\n\n        /**\n         * A boolean dictating whether or not to use event delegation when binding click events\n         * to the default controls.\n         *\n         * If `false` (default behavior), each control button in the DOM will be found and\n         * individually bound when a mixer is instantiated, with their corresponding actions\n         * cached for performance.\n         *\n         * If `true`, a single click handler will be applied to the `window` (or container element - see\n         * `config.controls.scope`), and any click events triggered by elements with `data-filter`,\n         * `data-sort` or `data-toggle` attributes present will be handled as they propagate upwards.\n         *\n         * If you require a user interface where control buttons may be added, removed, or changed during the\n         * lifetime of a mixer, `controls.live` should be set to `true`. There is a marginal but unavoidable\n         * performance deficit when using live controls, as the value of each control button must be read\n         * from the DOM in real time once the click event has propagated.\n         *\n         * @example <caption>Example: Setting live controls</caption>\n         * var mixer = vender(containerEl, {\n         *     controls: {\n         *         live: true\n         *     }\n         * });\n         *\n         * // Control buttons can now be added, remove and changed without breaking\n         * // the mixer's UI\n         *\n         * @name        live\n         * @memberof    vender.Config.controls\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.live = false;\n\n        /**\n         * A string dictating the \"scope\" to use when binding or querying the default controls. The available\n         * values are `'global'` or `'local'`.\n         *\n         * When set to `'global'` (default behavior), MixItUp will query the entire document for control buttons\n         * to bind, or delegate click events from (see `config.controls.live`).\n         *\n         * When set to `'local'`, MixItUp will only query (or bind click events to) its own container element.\n         * This may be desireable if you require multiple active mixer instances within the same document, with\n         * controls that would otherwise intefere with each other if scoped globally.\n         *\n         * Conversely, if you wish to control multiple instances with a single UI, you would create one\n         * set of controls and keep the controls scope of each mixer set to `global`.\n         *\n         * @example <caption>Example: Setting 'local' scoped controls</caption>\n         * var mixerOne = vender(containerOne, {\n         *     controls: {\n         *         scope: 'local'\n         *     }\n         * });\n         *\n         * var mixerTwo = vender(containerTwo, {\n         *     controls: {\n         *         scope: 'local'\n         *     }\n         * });\n         *\n         * // Both mixers can now exist within the same document with\n         * // isolated controls placed within their container elements.\n         *\n         * @name        scope\n         * @memberof    vender.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'global'\n         */\n\n        this.scope = 'global'; // enum: ['local' ,'global']\n\n        /**\n         * A string dictating the type of logic to apply when concatenating the filter selectors of\n         * active toggle buttons (i.e. any clickable element with a `data-toggle` attribute).\n         *\n         * If set to `'or'` (default behavior), selectors will be concatenated together as\n         * a comma-seperated list. For example:\n         *\n         * `'.cat-1, .cat-2'` (shows any elements matching `'.cat-1'` OR `'.cat-2'`)\n         *\n         * If set to `'and'`, selectors will be directly concatenated together. For example:\n         *\n         * `'.cat-1.cat-2'` (shows any elements which match both `'.cat-1'` AND `'.cat-2'`)\n         *\n         * @example <caption>Example: Setting \"and\" toggle logic</caption>\n         * var mixer = vender(containerEl, {\n         *     controls: {\n         *         toggleLogic: 'and'\n         *     }\n         * });\n         *\n         * @name        toggleLogic\n         * @memberof    vender.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'or'\n         */\n\n        this.toggleLogic = 'or'; // enum: ['or', 'and']\n\n        /**\n         * A string dictating the filter behavior when all toggles are inactive.\n         *\n         * When set to `'all'` (default behavior), *all* targets will be shown by default\n         * when no toggles are active, or at the moment all active toggles are toggled off.\n         *\n         * When set to `'none'`, no targets will be shown by default when no toggles are\n         * active, or at the moment all active toggles are toggled off.\n         *\n         * @example <caption>Example 1: Setting the default toggle behavior to `'all'`</caption>\n         * var mixer = vender(containerEl, {\n         *     controls: {\n         *         toggleDefault: 'all'\n         *     }\n         * });\n         *\n         * mixer.toggleOn('.cat-2')\n         *     .then(function() {\n         *         // Deactivate all active toggles\n         *\n         *         return mixer.toggleOff('.cat-2')\n         *     })\n         *     .then(function(state) {\n         *          console.log(state.activeFilter.selector); // 'all'\n         *          console.log(state.totalShow); // 12\n         *     });\n         *\n         * @example <caption>Example 2: Setting the default toggle behavior to `'none'`</caption>\n         * var mixer = vender(containerEl, {\n         *     controls: {\n         *         toggleDefault: 'none'\n         *     }\n         * });\n         *\n         * mixer.toggleOn('.cat-2')\n         *     .then(function() {\n         *         // Deactivate all active toggles\n         *\n         *         return mixer.toggleOff('.cat-2')\n         *     })\n         *     .then(function(state) {\n         *          console.log(state.activeFilter.selector); // 'none'\n         *          console.log(state.totalShow); // 0\n         *     });\n         *\n         * @name        toggleDefault\n         * @memberof    vender.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'all'\n         */\n\n        this.toggleDefault = 'all'; // enum: ['all', 'none']\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigControls);\n\n    mixitup.ConfigControls.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigControls.prototype.constructor = mixitup.ConfigControls;\n\n    /**\n     * A group of properties defining the output and structure of class names programmatically\n     * added to controls and containers to reflect the state of the mixer.\n     *\n     * Most commonly, class names are added to controls by MixItUp to indicate that\n     * the control is active so that it can be styled accordingly - `'vender-control-active'` by default.\n     *\n     * Using a \"BEM\" like structure, each classname is broken into the three parts:\n     * a block namespace (`'vender'`), an element name (e.g. `'control'`), and an optional modifier\n     * name (e.g. `'active'`) reflecting the state of the element.\n     *\n     * By default, each part of the classname is concatenated together using single hyphens as\n     * delineators, but this can be easily customised to match the naming convention and style of\n     * your project.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        classNames\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigClassNames = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * The \"block\" portion, or top-level namespace added to the start of any class names created by MixItUp.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.block` value</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio'\n         *     }\n         * });\n         *\n         * // Active control output: \"portfolio-control-active\"\n         *\n         * @example <caption>Example 2: Removing `config.classNames.block`</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         block: ''\n         *     }\n         * });\n         *\n         * // Active control output: \"control-active\"\n         *\n         * @name        block\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'vender'\n         */\n\n        this.block = 'mixitup';\n\n        /**\n         * The \"element\" portion of the class name added to container.\n         *\n         * @name        elementContainer\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'container'\n         */\n\n        this.elementContainer = 'container';\n\n        /**\n         * The \"element\" portion of the class name added to filter controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementFilter` value</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         elementFilter: 'filter'\n         *     }\n         * });\n         *\n         * // Active filter output: \"vender-filter-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementFilter` values</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementFilter: 'filter'\n         *     }\n         * });\n         *\n         * // Active filter output: \"portfolio-filter-active\"\n         *\n         * @name        elementFilter\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementFilter = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to sort controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementSort` value</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         elementSort: 'sort'\n         *     }\n         * });\n         *\n         * // Active sort output: \"vender-sort-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementSort` values</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementSort: 'sort'\n         *     }\n         * });\n         *\n         * // Active sort output: \"portfolio-sort-active\"\n         *\n         * @name        elementSort\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementSort = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to multimix controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementMultimix` value</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         elementMultimix: 'multimix'\n         *     }\n         * });\n         *\n         * // Active multimix output: \"vender-multimix-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementMultimix` values</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementSort: 'multimix'\n         *     }\n         * });\n         *\n         * // Active multimix output: \"portfolio-multimix-active\"\n         *\n         * @name        elementMultimix\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementMultimix = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to toggle controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementToggle` value</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         elementToggle: 'toggle'\n         *     }\n         * });\n         *\n         * // Active toggle output: \"vender-toggle-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementToggle` values</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementToggle: 'toggle'\n         *     }\n         * });\n         *\n         * // Active toggle output: \"portfolio-toggle-active\"\n         *\n         * @name        elementToggle\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementToggle = 'control';\n\n        /**\n         * The \"modifier\" portion of the class name added to active controls.\n         * @name        modifierActive\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'active'\n         */\n\n        this.modifierActive = 'active';\n\n        /**\n         * The \"modifier\" portion of the class name added to disabled controls.\n         *\n         * @name        modifierDisabled\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'disabled'\n         */\n\n        this.modifierDisabled = 'disabled';\n\n        /**\n         * The \"modifier\" portion of the class name added to the container when in a \"failed\" state.\n         *\n         * @name        modifierFailed\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'failed'\n         */\n\n        this.modifierFailed = 'failed';\n\n        /**\n         * The delineator used between the \"block\" and \"element\" portions of any class name added by MixItUp.\n         *\n         * If the block portion is ommited by setting it to an empty string, no delineator will be added.\n         *\n         * @example <caption>Example: changing the delineator to match BEM convention</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         delineatorElement: '__'\n         *     }\n         * });\n         *\n         * // example active control output: \"mixitup__control-active\"\n         *\n         * @name        delineatorElement\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     '-'\n         */\n\n        this.delineatorElement = '-';\n\n        /**\n         * The delineator used between the \"element\" and \"modifier\" portions of any class name added by MixItUp.\n         *\n         * If the element portion is ommited by setting it to an empty string, no delineator will be added.\n         *\n         * @example <caption>Example: changing both delineators to match BEM convention</caption>\n         * var mixer = vender(containerEl, {\n         *     classNames: {\n         *         delineatorElement: '__'\n         *         delineatorModifier: '--'\n         *     }\n         * });\n         *\n         * // Active control output: \"mixitup__control--active\"\n         *\n         * @name        delineatorModifier\n         * @memberof    vender.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     '-'\n         */\n\n        this.delineatorModifier = '-';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigClassNames);\n\n    mixitup.ConfigClassNames.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigClassNames.prototype.constructor = mixitup.ConfigClassNames;\n\n    /**\n     * A group of properties relating to MixItUp's dataset API.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        data\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A string specifying the name of the key containing your data model's unique\n         * identifier (UID). To use the dataset API, a UID key must be specified and\n         * be present and unique on all objects in the dataset you provide to MixItUp.\n         *\n         * For example, if your dataset is made up of MongoDB documents, the UID\n         * key would be `'id'` or `'_id'`.\n         *\n         * @example <caption>Example: Setting the UID to `'id'`</caption>\n         * var mixer = vender(containerEl, {\n         *     data: {\n         *         uidKey: 'id'\n         *     }\n         * });\n         *\n         * @name        uidKey\n         * @memberof    vender.Config.data\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.uidKey = '';\n\n        /**\n         * A boolean dictating whether or not MixItUp should \"dirty check\" each object in\n         * your dataset for changes whenever `.dataset()` is called, and re-render any targets\n         * for which a change is found.\n         *\n         * Depending on the complexity of your data model, dirty checking can be expensive\n         * and is therefore disabled by default.\n         *\n         * NB: For changes to be detected, a new immutable instance of the edited model must be\n         * provided to vender, rather than manipulating properties on the existing instance.\n         * If your changes are a result of a DB write and read, you will most likely be calling\n         * `.dataset()` with a clean set of objects each time, so this will not be an issue.\n         *\n         * @example <caption>Example: Enabling dirty checking</caption>\n         *\n         * var myDataset = [\n         *     {\n         *         id: 0,\n         *         title: \"Blog Post Title 0\"\n         *         ...\n         *     },\n         *     {\n         *         id: 1,\n         *         title: \"Blog Post Title 1\"\n         *         ...\n         *     }\n         * ];\n         *\n         * // Instantiate a mixer with a pre-loaded dataset, and a target renderer\n         * // function defined\n         *\n         * var mixer = vender(containerEl, {\n         *     data: {\n         *         uidKey: 'id',\n         *         dirtyCheck: true\n         *     },\n         *     load: {\n         *         dataset: myDataset\n         *     },\n         *     render: {\n         *         target: function() { ... }\n         *     }\n         * });\n         *\n         * // For illustration, we will clone and edit the second object in the dataset.\n         * // NB: this would typically be done server-side in response to a DB update,\n         * and then re-queried via an API.\n         *\n         * myDataset[1] = Object.assign({}, myDataset[1]);\n         *\n         * myDataset[1].title = 'Blog Post Title 11';\n         *\n         * mixer.dataset(myDataset)\n         *    .then(function() {\n         *        // the target with ID \"1\", will be re-rendered reflecting its new title\n         *    });\n         *\n         * @name        dirtyCheck\n         * @memberof    vender.Config.data\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.dirtyCheck = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigData);\n\n    mixitup.ConfigData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigData.prototype.constructor = mixitup.ConfigData;\n\n    /**\n     * A group of properties allowing the toggling of various debug features.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        debug\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigDebug = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not the mixer instance returned by the\n         * `vender()` factory function should expose private properties and methods.\n         *\n         * By default, mixer instances only expose their public API, but enabling\n         * debug mode will give you access to various mixer internals which may aid\n         * in debugging, or the authoring of extensions.\n         *\n         * @example <caption>Example: Enabling debug mode</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     debug: {\n         *         enable: true\n         *     }\n         * });\n         *\n         * // Private properties and methods will now be visible on the mixer instance:\n         *\n         * console.log(mixer);\n         *\n         * @name        enable\n         * @memberof    vender.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.enable = false;\n\n        /**\n         * A boolean dictating whether or not warnings should be shown when various\n         * common gotchas occur.\n         *\n         * Warnings are intended to provide insights during development when something\n         * occurs that is not a fatal, but may indicate an issue with your integration,\n         * and are therefore turned on by default. However, you may wish to disable\n         * them in production.\n         *\n         * @example <caption>Example 1: Disabling warnings</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     debug: {\n         *         showWarnings: false\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Disabling warnings based on environment</caption>\n         *\n         * var showWarnings = myAppConfig.environment === 'development' ? true : false;\n         *\n         * var mixer = vender(containerEl, {\n         *     debug: {\n         *         showWarnings: showWarnings\n         *     }\n         * });\n         *\n         * @name        showWarnings\n         * @memberof    vender.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.showWarnings = true;\n\n        /**\n         * Used for server-side testing only.\n         *\n         * @private\n         * @name        fauxAsync\n         * @memberof    vender.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.fauxAsync = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigDebug);\n\n    mixitup.ConfigDebug.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigDebug.prototype.constructor = mixitup.ConfigDebug;\n\n    /**\n     * A group of properties relating to the layout of the container.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        layout\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigLayout = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not vender should query all descendants\n         * of the container for targets, or only immediate children.\n         *\n         * By default, vender will query all descendants matching the\n         * `selectors.target` selector when indexing targets upon instantiation.\n         * This allows for targets to be nested inside a sub-container which is\n         * useful when ring-fencing targets from locally scoped controls in your\n         * markup (see `controls.scope`).\n         *\n         * However, if you are building a more complex UI requiring the nesting\n         * of mixers within mixers, you will most likely want to limit targets to\n         * immediate children of the container by setting this property to `false`.\n         *\n         * @example <caption>Example: Restricting targets to immediate children</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     layout: {\n         *         allowNestedTargets: false\n         *     }\n         * });\n         *\n         * @name        allowNestedTargets\n         * @memberof    vender.Config.layout\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.allowNestedTargets = true;\n\n        /**\n         * A string specifying an optional class name to apply to the container when in\n         * its default state.\n         *\n         * By changing this class name or adding a class name to the container via the\n         * `.changeLayout()` API method, the CSS layout of the container can be changed,\n         * and MixItUp will attemp to gracefully animate the container and its targets\n         * between states.\n         *\n         * @example <caption>Example 1: Specifying a container class name</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     layout: {\n         *         containerClassName: 'grid'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Changing the default class name with `.changeLayout()`</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     layout: {\n         *         containerClassName: 'grid'\n         *     }\n         * });\n         *\n         * mixer.changeLayout('list')\n         *     .then(function(state) {\n         *          console.log(state.activeContainerClass); // \"list\"\n         *     });\n         *\n         * @name        containerClassName\n         * @memberof    vender.Config.layout\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.containerClassName = '';\n\n        /**\n         * A reference to a non-target sibling element after which to insert targets\n         * when there are no targets in the container.\n         *\n         * @example <caption>Example: Setting a `siblingBefore` reference element</caption>\n         *\n         * var addButton = containerEl.querySelector('button');\n         *\n         * var mixer = vender(containerEl, {\n         *     layout: {\n         *         siblingBefore: addButton\n         *     }\n         * });\n         *\n         * @name        siblingBefore\n         * @memberof    vender.Config.layout\n         * @instance\n         * @type        {HTMLElement}\n         * @default     null\n         */\n\n        this.siblingBefore = null;\n\n        /**\n         * A reference to a non-target sibling element before which to insert targets\n         * when there are no targets in the container.\n         *\n         * @example <caption>Example: Setting an `siblingAfter` reference element</caption>\n         *\n         * var gap = containerEl.querySelector('.gap');\n         *\n         * var mixer = vender(containerEl, {\n         *     layout: {\n         *         siblingAfter: gap\n         *     }\n         * });\n         *\n         * @name        siblingAfter\n         * @memberof    vender.Config.layout\n         * @instance\n         * @type        {HTMLElement}\n         * @default     null\n         */\n\n        this.siblingAfter = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigLayout);\n\n    mixitup.ConfigLayout.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigLayout.prototype.constructor = mixitup.ConfigLayout;\n\n    /**\n     * A group of properties defining the initial state of the mixer on load (instantiation).\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        load\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigLoad = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A string defining any filtering to be statically applied to the mixer on load.\n         * As per the `.filter()` API, this can be any valid selector string, or the\n         * values `'all'` or `'none'`.\n         *\n         * @example <caption>Example 1: Defining an initial filter selector to be applied on load</caption>\n         *\n         * // The mixer will show only those targets matching '.category-a' on load.\n         *\n         * var mixer = vender(containerEl, {\n         *     load: {\n         *         filter: '.category-a'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Hiding all targets on load</caption>\n         *\n         * // The mixer will show hide all targets on load.\n         *\n         * var mixer = vender(containerEl, {\n         *     load: {\n         *         filter: 'none'\n         *     }\n         * });\n         *\n         * @name        filter\n         * @memberof    vender.Config.load\n         * @instance\n         * @type        {string}\n         * @default     'all'\n         */\n\n        this.filter = 'all';\n\n        /**\n         * A string defining any sorting to be statically applied to the mixer on load.\n         * As per the `.sort()` API, this should be a valid \"sort string\" made up of\n         * an attribute to sort by (or `'default'`) followed by an optional sorting\n         * order, or the value `'random'`;\n         *\n         * @example <caption>Example: Defining sorting to be applied on load</caption>\n         *\n         * // The mixer will sort the container by the value of the `data-published-date`\n         * // attribute, in descending order.\n         *\n         * var mixer = vender(containerEl, {\n         *     load: {\n         *         sort: 'published-date:desc'\n         *     }\n         * });\n         *\n         * @name        sort\n         * @memberof    vender.Config.load\n         * @instance\n         * @type        {string}\n         * @default     'default:asc'\n         */\n\n        this.sort = 'default:asc';\n\n        /**\n         * An array of objects representing the underlying data of any pre-rendered targets,\n         * when using the `.dataset()` API.\n         *\n         * NB: If targets are pre-rendered when the mixer is instantiated, this must be set.\n         *\n         * @example <caption>Example: Defining the initial underyling dataset</caption>\n         *\n         * var myDataset = [\n         *     {\n         *         id: 0,\n         *         title: \"Blog Post Title 0\",\n         *         ...\n         *     },\n         *     {\n         *         id: 1,\n         *         title: \"Blog Post Title 1\",\n         *         ...\n         *     }\n         * ];\n         *\n         * var mixer = vender(containerEl, {\n         *     data: {\n         *         uidKey: 'id'\n         *     },\n         *     load: {\n         *         dataset: myDataset\n         *     }\n         * });\n         *\n         * @name        dataset\n         * @memberof    vender.Config.load\n         * @instance\n         * @type        {Array.<object>}\n         * @default     null\n         */\n\n        this.dataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigLoad);\n\n    mixitup.ConfigLoad.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigLoad.prototype.constructor = mixitup.ConfigLoad;\n\n    /**\n     * A group of properties defining the selectors used to query elements within a vender container.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        selectors\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigSelectors = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A selector string used to query and index target elements within the container.\n         *\n         * By default, the class selector `'.mix'` is used, but this can be changed to an\n         * attribute or element selector to match the style of your project.\n         *\n         * @example <caption>Example 1: Changing the target selector</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     selectors: {\n         *         target: '.portfolio-item'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an attribute selector as a target selector</caption>\n         *\n         * // The mixer will search for any children with the attribute `data-ref=\"mix\"`\n         *\n         * var mixer = vender(containerEl, {\n         *     selectors: {\n         *         target: '[data-ref=\"mix\"]'\n         *     }\n         * });\n         *\n         * @name        target\n         * @memberof    vender.Config.selectors\n         * @instance\n         * @type        {string}\n         * @default     '.mix'\n         */\n\n        this.target = '.mix';\n\n        /**\n         * A optional selector string used to add further specificity to the querying of control elements,\n         * in addition to their mandatory data attribute (e.g. `data-filter`, `data-toggle`, `data-sort`).\n         *\n         * This can be used if other elements in your document must contain the above attributes\n         * (e.g. for use in third-party scripts), and would otherwise interfere with MixItUp. Adding\n         * an additional `control` selector of your choice allows MixItUp to restrict event handling\n         * to only those elements matching the defined selector.\n         *\n         * @name        control\n         * @memberof    vender.Config.selectors\n         * @instance\n         * @type        {string}\n         * @default     ''\n         *\n         * @example <caption>Example 1: Adding a `selectors.control` selector</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     selectors: {\n         *         control: '.vender-control'\n         *     }\n         * });\n         *\n         * // Will not be handled:\n         * // <button data-filter=\".category-a\"></button>\n         *\n         * // Will be handled:\n         * // <button class=\"vender-control\" data-filter=\".category-a\"></button>\n         */\n\n        this.control = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigSelectors);\n\n    mixitup.ConfigSelectors.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigSelectors.prototype.constructor = mixitup.ConfigSelectors;\n\n    /**\n     * A group of optional render functions for creating and updating elements.\n     *\n     * All render functions receive a data object, and should return a valid HTML string.\n     *\n     * @constructor\n     * @memberof    vender.Config\n     * @name        render\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigRender = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A function returning an HTML string representing a target element, or a reference to a\n         * single DOM element.\n         *\n         * The function is invoked as part of the `.dataset()` API, whenever a new item is added\n         * to the dataset, or an item in the dataset changes (if `dataset.dirtyCheck` is enabled).\n         *\n         * The function receives the relevant dataset item as its first parameter.\n         *\n         * @example <caption>Example 1: Using string concatenation</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *             return (\n         *                 '&lt;div class=\"mix\"&gt;' +\n         *                     '&lt;h2&gt;' + item.title + '&lt;/h2&gt;' +\n         *                 '&lt;/div&gt;'\n         *             );\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an ES2015 template literal</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *             return (\n         *                 `&lt;div class=\"mix\"&gt;\n         *                     &lt;h2&gt;${item.title}&lt;/h2&gt;\n         *                  &lt;/div&gt;`\n         *             );\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 3: Using a Handlebars template</caption>\n         *\n         * var targetTemplate = Handlebars.compile('&lt;div class=\"mix\"&gt;&lt;h2&gt;{{title}}&lt;/h2&gt;&lt;/div&gt;');\n         *\n         * var mixer = vender(containerEl, {\n         *     render: {\n         *         target: targetTemplate\n         *     }\n         * });\n         *\n         * @example <caption>Example 4: Returning a DOM element</caption>\n         *\n         * var mixer = vender(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *              // Create a single element using your framework's built-in renderer\n         *\n         *              var el = ...\n         *\n         *              return el;\n         *         }\n         *     }\n         * });\n         *\n         * @name        target\n         * @memberof    vender.Config.render\n         * @instance\n         * @type        {function}\n         * @default     'null'\n         */\n\n        this.target = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigRender);\n\n    mixitup.ConfigRender.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigRender.prototype.constructor = mixitup.ConfigRender;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigTemplates = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigTemplates);\n\n    mixitup.ConfigTemplates.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigTemplates.prototype.constructor = mixitup.ConfigTemplates;\n\n    /**\n     * `vender.Config` is an interface used for customising the functionality of a\n     * mixer instance. It is organised into several semantically distinct sub-objects,\n     * each one pertaining to a particular aspect of MixItUp functionality.\n     *\n     * An object literal containing any or all of the available properies,\n     * known as the \"configuration object\", can be passed as the second parameter to\n     * the `vender` factory function when creating a mixer instance to customise its\n     * functionality as needed.\n     *\n     * If no configuration object is passed, the mixer instance will take on the default\n     * configuration values detailed below.\n     *\n     * @example <caption>Example 1: Creating and passing the configuration object</caption>\n     * // Create a configuration object with desired values\n     *\n     * var config = {\n     *     animation: {\n     *         enable: false\n     *     },\n     *     selectors: {\n     *         target: '.item'\n     *     }\n     * };\n     *\n     * // Pass the configuration object to the vender factory function\n     *\n     * var mixer = vender(containerEl, config);\n     *\n     * @example <caption>Example 2: Passing the configuration object inline</caption>\n     * // Typically, the configuration object is passed inline for brevity.\n     *\n     * var mixer = vender(containerEl, {\n     *     controls: {\n     *         live: true,\n     *         toggleLogic: 'and'\n     *     }\n     * });\n     *\n     *\n     * @constructor\n     * @memberof    vender\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.Config = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.animation          = new mixitup.ConfigAnimation();\n        this.behavior           = new mixitup.ConfigBehavior();\n        this.callbacks          = new mixitup.ConfigCallbacks();\n        this.controls           = new mixitup.ConfigControls();\n        this.classNames         = new mixitup.ConfigClassNames();\n        this.data               = new mixitup.ConfigData();\n        this.debug              = new mixitup.ConfigDebug();\n        this.layout             = new mixitup.ConfigLayout();\n        this.load               = new mixitup.ConfigLoad();\n        this.selectors          = new mixitup.ConfigSelectors();\n        this.render             = new mixitup.ConfigRender();\n        this.templates          = new mixitup.ConfigTemplates();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Config);\n\n    mixitup.Config.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Config.prototype.constructor = mixitup.Config;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.MixerDom = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.document               = null;\n        this.body                   = null;\n        this.container              = null;\n        this.parent                 = null;\n        this.targets                = [];\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.MixerDom);\n\n    mixitup.MixerDom.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.MixerDom.prototype.constructor = mixitup.MixerDom;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.UiClassNames = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.base       = '';\n        this.active     = '';\n        this.disabled   = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.UiClassNames);\n\n    mixitup.UiClassNames.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.UiClassNames.prototype.constructor = mixitup.UiClassNames;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.dataset()' are mapped.\n     *\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandDataset = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.dataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandDataset);\n\n    mixitup.CommandDataset.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandDataset.prototype.constructor = mixitup.CommandDataset;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.multimix()' are mapped.\n     *\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandMultimix = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.filter       = null;\n        this.sort         = null;\n        this.insert       = null;\n        this.remove       = null;\n        this.changeLayout = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandMultimix);\n\n    mixitup.CommandMultimix.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandMultimix.prototype.constructor = mixitup.CommandMultimix;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.filter()' are mapped.\n     *\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandFilter = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.selector   = '';\n        this.collection = null;\n        this.action     = 'show'; // enum: ['show', 'hide']\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandFilter);\n\n    mixitup.CommandFilter.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandFilter.prototype.constructor = mixitup.CommandFilter;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.sort()' are mapped.\n     *\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandSort = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.sortString = '';\n        this.attribute  = '';\n        this.order      = 'asc';\n        this.collection = null;\n        this.next       = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandSort);\n\n    mixitup.CommandSort.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandSort.prototype.constructor = mixitup.CommandSort;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.insert()' are mapped.\n     *\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandInsert = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.index      = 0;\n        this.collection = [];\n        this.position   = 'before'; // enum: ['before', 'after']\n        this.sibling    = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandInsert);\n\n    mixitup.CommandInsert.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandInsert.prototype.constructor = mixitup.CommandInsert;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.remove()' are mapped.\n     *\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandRemove = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.targets    = [];\n        this.collection = [];\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandRemove);\n\n    mixitup.CommandRemove.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandRemove.prototype.constructor = mixitup.CommandRemove;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.changeLayout()' are mapped.\n     *\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandChangeLayout = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.containerClassName = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandChangeLayout);\n\n    mixitup.CommandChangeLayout.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandChangeLayout.prototype.constructor = mixitup.CommandChangeLayout;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     * @param       {string}        type\n     * @param       {string}        selector\n     * @param       {boolean}       [live]\n     * @param       {string}        [parent]\n     *     An optional string representing the name of the mixer.dom property containing a reference to a parent element.\n     */\n\n    mixitup.ControlDefinition = function(type, selector, live, parent) {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.type    = type;\n        this.selector  = selector;\n        this.live      = live || false;\n        this.parent    = parent || '';\n\n        this.callActions('afterConstruct');\n\n        h.freeze(this);\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ControlDefinition);\n\n    mixitup.ControlDefinition.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ControlDefinition.prototype.constructor = mixitup.ControlDefinition;\n\n    mixitup.controlDefinitions = [];\n\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('multimix', '[data-filter][data-sort]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('filter', '[data-filter]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('sort', '[data-sort]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('toggle', '[data-toggle]'));\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Control = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.el         = null;\n        this.selector   = '';\n        this.bound      = [];\n        this.pending    = -1;\n        this.type       = '';\n        this.status     = 'inactive'; // enum: ['inactive', 'active', 'disabled', 'live']\n        this.filter     = '';\n        this.sort       = '';\n        this.canDisable = false;\n        this.handler    = null;\n        this.classNames = new mixitup.UiClassNames();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Control);\n\n    mixitup.Control.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Control.prototype,\n    /** @lends mixitup.Control */\n    {\n        constructor: mixitup.Control,\n\n        /**\n         * @private\n         * @param {HTMLElement} el\n         * @param {string}      type\n         * @param {string}      selector\n         */\n\n        init: function(el, type, selector) {\n            var self = this;\n\n            this.callActions('beforeInit', arguments);\n\n            self.el         = el;\n            self.type       = type;\n            self.selector   = selector;\n\n            if (self.selector) {\n                self.status = 'live';\n            } else {\n                self.canDisable = typeof self.el.disable === 'boolean';\n\n                switch (self.type) {\n                    case 'filter':\n                        self.filter = self.el.getAttribute('data-filter');\n\n                        break;\n                    case 'toggle':\n                        self.filter = self.el.getAttribute('data-toggle');\n\n                        break;\n                    case 'sort':\n                        self.sort   = self.el.getAttribute('data-sort');\n\n                        break;\n                    case 'multimix':\n                        self.filter = self.el.getAttribute('data-filter');\n                        self.sort   = self.el.getAttribute('data-sort');\n\n                        break;\n                }\n            }\n\n            self.bindClick();\n\n            mixitup.controls.push(self);\n\n            this.callActions('afterInit', arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {boolean}\n         */\n\n        isBound: function(mixer) {\n            var self    = this,\n                isBound = false;\n\n            this.callActions('beforeIsBound', arguments);\n\n            isBound = self.bound.indexOf(mixer) > -1;\n\n            return self.callFilters('afterIsBound', isBound, arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {void}\n         */\n\n        addBinding: function(mixer) {\n            var self = this;\n\n            this.callActions('beforeAddBinding', arguments);\n\n            if (!self.isBound()) {\n                self.bound.push(mixer);\n            }\n\n            this.callActions('afterAddBinding', arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {void}\n         */\n\n        removeBinding: function(mixer) {\n            var self        = this,\n                removeIndex = -1;\n\n            this.callActions('beforeRemoveBinding', arguments);\n\n            if ((removeIndex = self.bound.indexOf(mixer)) > -1) {\n                self.bound.splice(removeIndex, 1);\n            }\n\n            if (self.bound.length < 1) {\n                // No bindings exist, unbind event click handlers\n\n                self.unbindClick();\n\n                // Remove from `vender.controls` list\n\n                removeIndex = mixitup.controls.indexOf(self);\n\n                mixitup.controls.splice(removeIndex, 1);\n\n                if (self.status === 'active') {\n                    self.renderStatus(self.el, 'inactive');\n                }\n            }\n\n            this.callActions('afterRemoveBinding', arguments);\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n\n        bindClick: function() {\n            var self = this;\n\n            this.callActions('beforeBindClick', arguments);\n\n            self.handler = function(e) {\n                self.handleClick(e);\n            };\n\n            h.on(self.el, 'click', self.handler);\n\n            this.callActions('afterBindClick', arguments);\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n\n        unbindClick: function() {\n            var self = this;\n\n            this.callActions('beforeUnbindClick', arguments);\n\n            h.off(self.el, 'click', self.handler);\n\n            self.handler = null;\n\n            this.callActions('afterUnbindClick', arguments);\n        },\n\n        /**\n         * @private\n         * @param   {MouseEvent} e\n         * @return  {void}\n         */\n\n        handleClick: function(e) {\n            var self        = this,\n                button      = null,\n                mixer       = null,\n                isActive    = false,\n                returnValue = void(0),\n                command     = {},\n                clone       = null,\n                commands    = [],\n                i           = -1;\n\n            this.callActions('beforeHandleClick', arguments);\n\n            this.pending = 0;\n\n            mixer = self.bound[0];\n\n            if (!self.selector) {\n                button = self.el;\n            } else {\n                button = h.closestParent(e.target, mixer.config.selectors.control + self.selector, true, mixer.dom.document);\n            }\n\n            if (!button) {\n                self.callActions('afterHandleClick', arguments);\n\n                return;\n            }\n\n            switch (self.type) {\n                case 'filter':\n                    command.filter = self.filter || button.getAttribute('data-filter');\n\n                    break;\n                case 'sort':\n                    command.sort = self.sort || button.getAttribute('data-sort');\n\n                    break;\n                case 'multimix':\n                    command.filter  = self.filter || button.getAttribute('data-filter');\n                    command.sort    = self.sort || button.getAttribute('data-sort');\n\n                    break;\n                case 'toggle':\n                    command.filter  = self.filter || button.getAttribute('data-toggle');\n\n                    if (self.status === 'live') {\n                        isActive = h.hasClass(button, self.classNames.active);\n                    } else {\n                        isActive = self.status === 'active';\n                    }\n\n                    break;\n            }\n\n            for (i = 0; i < self.bound.length; i++) {\n                // Create a clone of the command for each bound mixer instance\n\n                clone = new mixitup.CommandMultimix();\n\n                h.extend(clone, command);\n\n                commands.push(clone);\n            }\n\n            commands = self.callFilters('commandsHandleClick', commands, arguments);\n\n            self.pending = self.bound.length;\n\n            for (i = 0; mixer = self.bound[i]; i++) {\n                command = commands[i];\n\n                if (!command) {\n                    // An extension may set a command null to indicate that the click should not be handled\n\n                    continue;\n                }\n\n                if (!mixer.lastClicked) {\n                    mixer.lastClicked = button;\n                }\n\n                mixitup.events.fire('mixClick', mixer.dom.container, {\n                    state: mixer.state,\n                    instance: mixer,\n                    originalEvent: e,\n                    control: mixer.lastClicked\n                }, mixer.dom.document);\n\n                if (typeof mixer.config.callbacks.onMixClick === 'function') {\n                    returnValue = mixer.config.callbacks.onMixClick.call(mixer.lastClicked, mixer.state, e, mixer);\n\n                    if (returnValue === false) {\n                        // User has returned `false` from the callback, so do not handle click\n\n                        continue;\n                    }\n                }\n\n                if (self.type === 'toggle') {\n                    isActive ? mixer.toggleOff(command.filter) : mixer.toggleOn(command.filter);\n                } else {\n                    mixer.multimix(command);\n                }\n            }\n\n            this.callActions('afterHandleClick', arguments);\n        },\n\n        /**\n         * @param   {object}          command\n         * @param   {Array<string>}   toggleArray\n         * @return  {void}\n         */\n\n        update: function(command, toggleArray) {\n            var self    = this,\n                actions = new mixitup.CommandMultimix();\n\n            self.callActions('beforeUpdate', arguments);\n\n            self.pending--;\n\n            self.pending = Math.max(0, self.pending);\n\n            if (self.pending > 0) return;\n\n            if (self.status === 'live') {\n                // Live control (status unknown)\n\n                self.updateLive(command, toggleArray);\n            } else {\n                // Static control\n\n                actions.sort    = self.sort;\n                actions.filter  = self.filter;\n\n                self.callFilters('actionsUpdate', actions, arguments);\n\n                self.parseStatusChange(self.el, command, actions, toggleArray);\n            }\n\n            self.callActions('afterUpdate', arguments);\n        },\n\n        /**\n         * @param   {mixitup.CommandMultimix} command\n         * @param   {Array<string>}           toggleArray\n         * @return  {void}\n         */\n\n        updateLive: function(command, toggleArray) {\n            var self            = this,\n                controlButtons  = null,\n                actions         = null,\n                button          = null,\n                i               = -1;\n\n            self.callActions('beforeUpdateLive', arguments);\n\n            if (!self.el) return;\n\n            controlButtons = self.el.querySelectorAll(self.selector);\n\n            for (i = 0; button = controlButtons[i]; i++) {\n                actions = new mixitup.CommandMultimix();\n\n                switch (self.type) {\n                    case 'filter':\n                        actions.filter = button.getAttribute('data-filter');\n\n                        break;\n                    case 'sort':\n                        actions.sort = button.getAttribute('data-sort');\n\n                        break;\n                    case 'multimix':\n                        actions.filter  = button.getAttribute('data-filter');\n                        actions.sort    = button.getAttribute('data-sort');\n\n                        break;\n                    case 'toggle':\n                        actions.filter  = button.getAttribute('data-toggle');\n\n                        break;\n                }\n\n                actions = self.callFilters('actionsUpdateLive', actions, arguments);\n\n                self.parseStatusChange(button, command, actions, toggleArray);\n            }\n\n            self.callActions('afterUpdateLive', arguments);\n        },\n\n        /**\n         * @param   {HTMLElement}             button\n         * @param   {mixitup.CommandMultimix} command\n         * @param   {mixitup.CommandMultimix} actions\n         * @param   {Array<string>}           toggleArray\n         * @return  {void}\n         */\n\n        parseStatusChange: function(button, command, actions, toggleArray) {\n            var self    = this,\n                alias   = '',\n                toggle  = '',\n                i       = -1;\n\n            self.callActions('beforeParseStatusChange', arguments);\n\n            switch (self.type) {\n                case 'filter':\n                    if (command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'multimix':\n                    if (command.sort === actions.sort && command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'sort':\n                    if (command.sort.match(/:asc/g)) {\n                        alias = command.sort.replace(/:asc/g, '');\n                    }\n\n                    if (command.sort === actions.sort || alias === actions.sort) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'toggle':\n                    if (toggleArray.length < 1) self.renderStatus(button, 'inactive');\n\n                    if (command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    }\n\n                    for (i = 0; i < toggleArray.length; i++) {\n                        toggle = toggleArray[i];\n\n                        if (toggle === actions.filter) {\n                            // Button matches one active toggle\n\n                            self.renderStatus(button, 'active');\n\n                            break;\n                        }\n\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n            }\n\n            self.callActions('afterParseStatusChange', arguments);\n        },\n\n        /**\n         * @param   {HTMLElement}   button\n         * @param   {string}        status\n         * @return  {void}\n         */\n\n        renderStatus: function(button, status) {\n            var self = this;\n\n            self.callActions('beforeRenderStatus', arguments);\n\n            switch (status) {\n                case 'active':\n                    h.addClass(button, self.classNames.active);\n                    h.removeClass(button, self.classNames.disabled);\n\n                    if (self.canDisable) self.el.disabled = false;\n\n                    break;\n                case 'inactive':\n                    h.removeClass(button, self.classNames.active);\n                    h.removeClass(button, self.classNames.disabled);\n\n                    if (self.canDisable) self.el.disabled = false;\n\n                    break;\n                case 'disabled':\n                    if (self.canDisable) self.el.disabled = true;\n\n                    h.addClass(button, self.classNames.disabled);\n                    h.removeClass(button, self.classNames.active);\n\n                    break;\n            }\n\n            if (self.status !== 'live') {\n                // Update the control's status propery if not live\n\n                self.status = status;\n            }\n\n            self.callActions('afterRenderStatus', arguments);\n        }\n    });\n\n    mixitup.controls = [];\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.StyleData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.x              = 0;\n        this.y              = 0;\n        this.top            = 0;\n        this.right          = 0;\n        this.bottom         = 0;\n        this.left           = 0;\n        this.width          = 0;\n        this.height         = 0;\n        this.marginRight    = 0;\n        this.marginBottom   = 0;\n        this.opacity        = 0;\n        this.scale          = new mixitup.TransformData();\n        this.translateX     = new mixitup.TransformData();\n        this.translateY     = new mixitup.TransformData();\n        this.translateZ     = new mixitup.TransformData();\n        this.rotateX        = new mixitup.TransformData();\n        this.rotateY        = new mixitup.TransformData();\n        this.rotateZ        = new mixitup.TransformData();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.StyleData);\n\n    mixitup.StyleData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.StyleData.prototype.constructor = mixitup.StyleData;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TransformData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.value  = 0;\n        this.unit   = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TransformData);\n\n    mixitup.TransformData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.TransformData.prototype.constructor = mixitup.TransformData;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TransformDefaults = function() {\n        mixitup.StyleData.apply(this);\n\n        this.callActions('beforeConstruct');\n\n        this.scale.value        = 0.01;\n        this.scale.unit         = '';\n\n        this.translateX.value   = 20;\n        this.translateX.unit    = 'px';\n\n        this.translateY.value   = 20;\n        this.translateY.unit    = 'px';\n\n        this.translateZ.value   = 20;\n        this.translateZ.unit    = 'px';\n\n        this.rotateX.value      = 90;\n        this.rotateX.unit       = 'deg';\n\n        this.rotateY.value      = 90;\n        this.rotateY.unit       = 'deg';\n\n        this.rotateX.value      = 90;\n        this.rotateX.unit       = 'deg';\n\n        this.rotateZ.value      = 180;\n        this.rotateZ.unit       = 'deg';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TransformDefaults);\n\n    mixitup.TransformDefaults.prototype = Object.create(mixitup.StyleData.prototype);\n\n    mixitup.TransformDefaults.prototype.constructor = mixitup.TransformDefaults;\n\n    /**\n     * @private\n     * @static\n     * @since   3.0.0\n     * @type    {mixitup.TransformDefaults}\n     */\n\n    mixitup.transformDefaults = new mixitup.TransformDefaults();\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.EventDetail = function() {\n        this.state          = null;\n        this.futureState    = null;\n        this.instance       = null;\n        this.originalEvent  = null;\n    };\n\n    /**\n     * The `vender.Events` class contains all custom events dispatched by MixItUp at various\n     * points within the lifecycle of a mixer operation.\n     *\n     * Each event is analogous to the callback function of the same name defined in\n     * the `callbacks` configuration object, and is triggered immediately before it.\n     *\n     * Events are always triggered from the container element on which MixItUp is instantiated\n     * upon.\n     *\n     * As with any event, registered event handlers receive the event object as a parameter\n     * which includes a `detail` property containting references to the current `state`,\n     * the `mixer` instance, and other event-specific properties described below.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.Events = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A custom event triggered immediately after any MixItUp operation is requested\n         * and before animations have begun.\n         *\n         * The `mixStart` event also exposes a `futureState` property via the\n         * `event.detail` object, which represents the final state of the mixer once\n         * the requested operation has completed.\n         *\n         * @name        mixStart\n         * @memberof    vender.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixStart = null;\n\n        /**\n         * A custom event triggered when a MixItUp operation is requested while another\n         * operation is in progress, and the animation queue is full, or queueing\n         * is disabled.\n         *\n         * @name        mixBusy\n         * @memberof    vender.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixBusy = null;\n\n        /**\n         * A custom event triggered after any MixItUp operation has completed, and the\n         * state has been updated.\n         *\n         * @name        mixEnd\n         * @memberof    vender.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixEnd = null;\n\n        /**\n         * A custom event triggered whenever a filter operation \"fails\", i.e. no targets\n         * could be found matching the requested filter.\n         *\n         * @name        mixFail\n         * @memberof    vender.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixFail = null;\n\n        /**\n         * A custom event triggered whenever a MixItUp control is clicked, and before its\n         * respective operation is requested.\n         *\n         * This event also exposes an `originalEvent` property via the `event.detail`\n         * object, which holds a reference to the original click event.\n         *\n         * @name        mixClick\n         * @memberof    vender.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixClick = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Events);\n\n    mixitup.Events.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Events.prototype.constructor = mixitup.Events;\n\n    /**\n     * @private\n     * @param   {string}      eventType\n     * @param   {Element}     el\n     * @param   {object}      detail\n     * @param   {Document}    [doc]\n     */\n\n    mixitup.Events.prototype.fire = function(eventType, el, detail, doc) {\n        var self        = this,\n            event       = null,\n            eventDetail = new mixitup.EventDetail();\n\n        self.callActions('beforeFire', arguments);\n\n        if (typeof self[eventType] === 'undefined') {\n            throw new Error('Event type \"' + eventType + '\" not found.');\n        }\n\n        eventDetail.state = new mixitup.State();\n\n        h.extend(eventDetail.state, detail.state);\n\n        if (detail.futureState) {\n            eventDetail.futureState = new mixitup.State();\n\n            h.extend(eventDetail.futureState, detail.futureState);\n        }\n\n        eventDetail.instance = detail.instance;\n\n        if (detail.originalEvent) {\n            eventDetail.originalEvent = detail.originalEvent;\n        }\n\n        event = h.getCustomEvent(eventType, eventDetail, doc);\n\n        self.callFilters('eventFire', event, arguments);\n\n        el.dispatchEvent(event);\n    };\n\n    // Asign a singleton instance to `vender.events`:\n\n    mixitup.events = new mixitup.Events();\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.QueueItem = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.args           = [];\n        this.instruction    = null;\n        this.triggerElement = null;\n        this.deferred       = null;\n        this.isToggling     = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.QueueItem);\n\n    mixitup.QueueItem.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.QueueItem.prototype.constructor = mixitup.QueueItem;\n\n    /**\n     * The `vender.Mixer` class is used to hold discreet, user-configured\n     * instances of MixItUp on a provided container element.\n     *\n     * Mixer instances are returned whenever the `vender()` factory function is called,\n     * which expose a range of methods enabling API-based filtering, sorting,\n     * insertion, removal and more.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.Mixer = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.config            = new mixitup.Config();\n\n        this.id                = '';\n\n        this.isBusy            = false;\n        this.isToggling        = false;\n        this.incPadding        = true;\n\n        this.controls          = [];\n        this.targets           = [];\n        this.origOrder         = [];\n        this.cache             = {};\n\n        this.toggleArray       = [];\n\n        this.targetsMoved      = 0;\n        this.targetsImmovable  = 0;\n        this.targetsBound      = 0;\n        this.targetsDone       = 0;\n\n        this.staggerDuration   = 0;\n        this.effectsIn         = null;\n        this.effectsOut        = null;\n        this.transformIn       = [];\n        this.transformOut      = [];\n        this.queue             = [];\n\n        this.state             = null;\n        this.lastOperation     = null;\n        this.lastClicked       = null;\n        this.userCallback      = null;\n        this.userDeferred      = null;\n\n        this.dom               = new mixitup.MixerDom();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Mixer);\n\n    mixitup.Mixer.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Mixer.prototype,\n    /** @lends mixitup.Mixer */\n    {\n        constructor: mixitup.Mixer,\n\n        /**\n         * @private\n         * @instance\n         * @since 3.0.0\n         * @param {HTMLElement} container\n         * @param {HTMLElement} document\n         * @param {string}      id\n         * @param {object}      [config]\n         */\n\n        attach: function(container, document, id, config) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeAttach', arguments);\n\n            self.id = id;\n\n            if (config) {\n                h.extend(self.config, config, true, true);\n            }\n\n            self.sanitizeConfig();\n\n            self.cacheDom(container, document);\n\n            if (self.config.layout.containerClassName) {\n                h.addClass(self.dom.container, self.config.layout.containerClassName);\n            }\n\n            if (!mixitup.features.has.transitions) {\n                self.config.animation.enable = false;\n            }\n\n            if (typeof window.console === 'undefined') {\n                self.config.debug.showWarnings = false;\n            }\n\n            if (self.config.data.uidKey) {\n                // If the dataset API is in use, force disable controls\n\n                self.config.controls.enable = false;\n            }\n\n            self.indexTargets();\n\n            self.state = self.getInitialState();\n\n            for (i = 0; target = self.lastOperation.toHide[i]; i++) {\n                target.hide();\n            }\n\n            if (self.config.controls.enable) {\n                self.initControls();\n\n                self.buildToggleArray(null, self.state);\n\n                self.updateControls({\n                    filter: self.state.activeFilter,\n                    sort: self.state.activeSort\n                });\n            }\n\n            self.parseEffects();\n\n            self.callActions('afterAttach', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since 3.0.0\n         * @return {void}\n         */\n\n        sanitizeConfig: function() {\n            var self = this;\n\n            self.callActions('beforeSanitizeConfig', arguments);\n\n            // Sanitize enum/string config options\n\n            self.config.controls.scope          = self.config.controls.scope.toLowerCase().trim();\n            self.config.controls.toggleLogic    = self.config.controls.toggleLogic.toLowerCase().trim();\n            self.config.controls.toggleDefault  = self.config.controls.toggleDefault.toLowerCase().trim();\n\n            self.config.animation.effects       = self.config.animation.effects.trim();\n\n            self.callActions('afterSanitizeConfig', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {mixitup.State}\n         */\n\n        getInitialState: function() {\n            var self        = this,\n                state       = new mixitup.State(),\n                operation   = new mixitup.Operation();\n\n            self.callActions('beforeGetInitialState', arguments);\n\n            // Map initial values into a mock state object in order to construct an operation\n\n            state.activeContainerClassName = self.config.layout.containerClassName;\n\n            if (self.config.load.dataset) {\n                // Dataset API\n\n                if (!self.config.data.uidKey || typeof self.config.data.uidKey !== 'string') {\n                    throw new TypeError(mixitup.messages.errorConfigDataUidKeyNotSet());\n                }\n\n                operation.startDataset = operation.newDataset = state.activeDataset = self.config.load.dataset.slice();\n                operation.startContainerClassName = operation.newContainerClassName = state.activeContainerClassName;\n                operation.show = self.targets.slice();\n\n                state = self.callFilters('stateGetInitialState', state, arguments);\n            } else {\n                // DOM API\n\n                state.activeFilter              = self.parseFilterArgs([self.config.load.filter]).command;\n                state.activeSort                = self.parseSortArgs([self.config.load.sort]).command;\n                state.totalTargets              = self.targets.length;\n\n                state = self.callFilters('stateGetInitialState', state, arguments);\n\n                if (\n                    state.activeSort.collection || state.activeSort.attribute ||\n                    state.activeSort.order === 'random' || state.activeSort.order === 'desc'\n                ) {\n                    // Sorting on load\n\n                    operation.newSort = state.activeSort;\n\n                    self.sortOperation(operation);\n\n                    self.printSort(false, operation);\n\n                    self.targets = operation.newOrder;\n                } else {\n                    operation.startOrder = operation.newOrder = self.targets;\n                }\n\n                operation.startFilter               = operation.newFilter               = state.activeFilter;\n                operation.startSort                 = operation.newSort                 = state.activeSort;\n                operation.startContainerClassName   = operation.newContainerClassName   = state.activeContainerClassName;\n\n                if (operation.newFilter.selector === 'all') {\n                    operation.newFilter.selector = self.config.selectors.target;\n                } else if (operation.newFilter.selector === 'none') {\n                    operation.newFilter.selector = '';\n                }\n            }\n\n            operation = self.callFilters('operationGetInitialState', operation, [state]);\n\n            self.lastOperation = operation;\n\n            if (operation.newFilter) {\n                self.filterOperation(operation);\n            }\n\n            state = self.buildState(operation);\n\n            return state;\n        },\n\n        /**\n         * Caches references of DOM elements neccessary for the mixer's functionality.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {HTMLElement}       el\n         * @param   {HTMLHtmlElement}   document\n         * @return  {void}\n         */\n\n        cacheDom: function(el, document) {\n            var self    = this;\n\n            self.callActions('beforeCacheDom', arguments);\n\n            self.dom.document  = document;\n            self.dom.body      = self.dom.document.querySelector('body');\n            self.dom.container = el;\n            self.dom.parent    = el;\n\n            self.callActions('afterCacheDom', arguments);\n        },\n\n        /**\n         * Indexes all child elements of the mixer matching the `selectors.target`\n         * selector, instantiating a vender.Target for each one.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        indexTargets: function() {\n            var self            = this,\n                target          = null,\n                el              = null,\n                dataset         = null,\n                i               = -1;\n\n            self.callActions('beforeIndexTargets', arguments);\n\n            self.dom.targets = self.config.layout.allowNestedTargets ?\n                self.dom.container.querySelectorAll(self.config.selectors.target) :\n                h.children(self.dom.container, self.config.selectors.target, self.dom.document);\n\n            self.dom.targets = h.arrayFromList(self.dom.targets);\n\n            self.targets = [];\n\n            if ((dataset = self.config.load.dataset) && dataset.length !== self.dom.targets.length) {\n                throw new Error(mixitup.messages.errorDatasetPrerenderedMismatch());\n            }\n\n            if (self.dom.targets.length) {\n                for (i = 0; el = self.dom.targets[i]; i++) {\n                    target = new mixitup.Target();\n\n                    target.init(el, self, dataset ? dataset[i] : void(0));\n\n                    target.isInDom = true;\n\n                    self.targets.push(target);\n                }\n\n                self.dom.parent = self.dom.targets[0].parentElement === self.dom.container ?\n                    self.dom.container :\n                    self.dom.targets[0].parentElement;\n            }\n\n            self.origOrder = self.targets;\n\n            self.callActions('afterIndexTargets', arguments);\n        },\n\n        initControls: function() {\n            var self                = this,\n                definition          = '',\n                controlElements     = null,\n                el                  = null,\n                parent              = null,\n                delagators          = null,\n                control             = null,\n                i                   = -1,\n                j                   = -1;\n\n            self.callActions('beforeInitControls', arguments);\n\n            switch (self.config.controls.scope) {\n                case 'local':\n                    parent = self.dom.container;\n\n                    break;\n                case 'global':\n                    parent = self.dom.document;\n\n                    break;\n                default:\n                    throw new Error(mixitup.messages.errorConfigInvalidControlsScope());\n            }\n\n            for (i = 0; definition = mixitup.controlDefinitions[i]; i++) {\n                if (self.config.controls.live || definition.live) {\n                    if (definition.parent) {\n                        delagators = self.dom[definition.parent];\n\n                        if (!delagators || delagators.length < 0) continue;\n\n                        if (typeof delagators.length !== 'number') {\n                            delagators = [delagators];\n                        }\n                    } else {\n                        delagators = [parent];\n                    }\n\n                    for (j = 0; (el = delagators[j]); j++) {\n                        control = self.getControl(el,  definition.type, definition.selector);\n\n                        self.controls.push(control);\n                    }\n                } else {\n                    controlElements = parent.querySelectorAll(self.config.selectors.control + definition.selector);\n\n                    for (j = 0; (el = controlElements[j]); j++) {\n                        control = self.getControl(el, definition.type, '');\n\n                        if (!control) continue;\n\n                        self.controls.push(control);\n                    }\n                }\n            }\n\n            self.callActions('afterInitControls', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {HTMLElement} el\n         * @param   {string}      type\n         * @param   {string}      selector\n         * @return  {mixitup.Control|null}\n         */\n\n        getControl: function(el, type, selector) {\n            var self    = this,\n                control = null,\n                i       = -1;\n\n            self.callActions('beforeGetControl', arguments);\n\n            if (!selector) {\n                // Static controls only\n\n                for (i = 0; control = mixitup.controls[i]; i++) {\n                    if (control.el === el && control.isBound(self)) {\n                        // Control already bound to this mixer (as another type).\n\n                        // NB: This prevents duplicate controls from being registered where a selector\n                        // might collide, eg: \"[data-filter]\" and \"[data-filter][data-sort]\"\n\n                        return self.callFilters('controlGetControl', null, arguments);\n                    } else if (control.el === el && control.type === type && control.selector === selector) {\n                        // Another mixer is already using this control, add this mixer as a binding\n\n                        control.addBinding(self);\n\n                        return self.callFilters('controlGetControl', control, arguments);\n                    }\n                }\n            }\n\n            // Create new control\n\n            control = new mixitup.Control();\n\n            control.init(el, type, selector);\n\n            control.classNames.base     = h.getClassname(self.config.classNames, type);\n            control.classNames.active   = h.getClassname(self.config.classNames, type, self.config.classNames.modifierActive);\n            control.classNames.disabled = h.getClassname(self.config.classNames, type, self.config.classNames.modifierDisabled);\n\n            // Add a reference to this mixer as a binding\n\n            control.addBinding(self);\n\n            return self.callFilters('controlGetControl', control, arguments);\n        },\n\n        /**\n         * Creates a compound selector by joining the `toggleArray` value as per the\n         * defined toggle logic.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {string}\n         */\n\n        getToggleSelector: function() {\n            var self            = this,\n                delineator      = self.config.controls.toggleLogic === 'or' ? ', ' : '',\n                toggleSelector  = '';\n\n            self.callActions('beforeGetToggleSelector', arguments);\n\n            self.toggleArray = h.clean(self.toggleArray);\n\n            toggleSelector = self.toggleArray.join(delineator);\n\n            if (toggleSelector === '') {\n                toggleSelector = self.config.controls.toggleDefault;\n            }\n\n            return self.callFilters('selectorGetToggleSelector', toggleSelector, arguments);\n        },\n\n        /**\n         * Breaks compound selector strings in an array of discreet selectors,\n         * as per the active `controls.toggleLogic` configuration option. Accepts\n         * either a dynamic command object, or a state object.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {object}        [command]\n         * @param   {mixitup.State} [state]\n         * @return  {void}\n         */\n\n        buildToggleArray: function(command, state) {\n            var self                    = this,\n                activeFilterSelector    = '';\n\n            self.callActions('beforeBuildToggleArray', arguments);\n\n            if (command && command.filter) {\n                activeFilterSelector = command.filter.selector.replace(/\\s/g, '');\n            } else if (state) {\n                activeFilterSelector = state.activeFilter.selector.replace(/\\s/g, '');\n            } else {\n                return;\n            }\n\n            if (activeFilterSelector === self.config.selectors.target || activeFilterSelector === 'all') {\n                activeFilterSelector = '';\n            }\n\n            if (self.config.controls.toggleLogic === 'or') {\n                self.toggleArray = activeFilterSelector.split(',');\n            } else {\n                self.toggleArray = self.splitCompoundSelector(activeFilterSelector);\n            }\n\n            self.toggleArray = h.clean(self.toggleArray);\n\n            self.callActions('afterBuildToggleArray', arguments);\n        },\n\n        /**\n         * Takes a compound selector (e.g. `.cat-1.cat-2`, `[data-cat=\"1\"][data-cat=\"2\"]`)\n         * and breaks into its individual selectors.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string} compoundSelector\n         * @return  {string[]}\n         */\n\n        splitCompoundSelector: function(compoundSelector) {\n            // Break at a `.` or `[`, capturing the delineator\n\n            var partials    = compoundSelector.split(/([\\.\\[])/g),\n                toggleArray = [],\n                selector    = '',\n                i           = -1;\n\n            if (partials[0] === '') {\n                partials.shift();\n            }\n\n            for (i = 0; i < partials.length; i++) {\n                if (i % 2 === 0) {\n                    selector = '';\n                }\n\n                selector += partials[i];\n\n                if (i % 2 !== 0) {\n                    toggleArray.push(selector);\n                }\n            }\n\n            return toggleArray;\n        },\n\n        /**\n         * Updates controls to their active/inactive state based on the command or\n         * current state of the mixer.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {object} command\n         * @return  {void}\n         */\n\n        updateControls: function(command) {\n            var self    = this,\n                control = null,\n                output  = new mixitup.CommandMultimix(),\n                i       = -1;\n\n            self.callActions('beforeUpdateControls', arguments);\n\n            // Sanitise to defaults\n\n            if (command.filter) {\n                output.filter = command.filter.selector;\n            } else {\n                output.filter = self.state.activeFilter.selector;\n            }\n\n            if (command.sort) {\n                output.sort = self.buildSortString(command.sort);\n            } else {\n                output.sort = self.buildSortString(self.state.activeSort);\n            }\n\n            if (output.filter === self.config.selectors.target) {\n                output.filter = 'all';\n            }\n\n            if (output.filter === '') {\n                output.filter = 'none';\n            }\n\n            h.freeze(output);\n\n            for (i = 0; control = self.controls[i]; i++) {\n                control.update(output, self.toggleArray);\n            }\n\n            self.callActions('afterUpdateControls', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.CommandSort}   command\n         * @return  {string}\n         */\n\n        buildSortString: function(command) {\n            var self    = this;\n            var output  = '';\n\n            output += command.sortString;\n\n            if (command.next) {\n                output += ' ' + self.buildSortString(command.next);\n            }\n\n            return output;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}        command\n         * @param   {Operation}     operation\n         * @return  {Promise.<mixitup.State>}\n         */\n\n        insertTargets: function(command, operation) {\n            var self            = this,\n                nextSibling     = null,\n                insertionIndex  = -1,\n                frag            = null,\n                target          = null,\n                el              = null,\n                i               = -1;\n\n            self.callActions('beforeInsertTargets', arguments);\n\n            if (typeof command.index === 'undefined') command.index = 0;\n\n            nextSibling = self.getNextSibling(command.index, command.sibling, command.position);\n            frag        = self.dom.document.createDocumentFragment();\n\n            if (nextSibling) {\n                insertionIndex = h.index(nextSibling, self.config.selectors.target);\n            } else {\n                insertionIndex = self.targets.length;\n            }\n\n            if (command.collection) {\n                for (i = 0; el = command.collection[i]; i++) {\n                    if (self.dom.targets.indexOf(el) > -1) {\n                        throw new Error(mixitup.messages.errorInsertPreexistingElement());\n                    }\n\n                    // Ensure elements are hidden when they are added to the DOM, so they can\n                    // be animated in gracefully\n\n                    el.style.display = 'none';\n\n                    frag.appendChild(el);\n                    frag.appendChild(self.dom.document.createTextNode(' '));\n\n                    if (!h.isElement(el, self.dom.document) || !el.matches(self.config.selectors.target)) continue;\n\n                    target = new mixitup.Target();\n\n                    target.init(el, self);\n\n                    target.isInDom = true;\n\n                    self.targets.splice(insertionIndex, 0, target);\n\n                    insertionIndex++;\n                }\n\n                self.dom.parent.insertBefore(frag, nextSibling);\n            }\n\n            // Since targets have been added, the original order must be updated\n\n            operation.startOrder = self.origOrder = self.targets;\n\n            self.callActions('afterInsertTargets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Number}      [index]\n         * @param   {Element}     [sibling]\n         * @param   {string}      [position]\n         * @return  {Element}\n         */\n\n        getNextSibling: function(index, sibling, position) {\n            var self    = this,\n                element = null;\n\n            index = Math.max(index, 0);\n\n            if (sibling && position === 'before') {\n                // Explicit sibling\n\n                element = sibling;\n            } else if (sibling && position === 'after') {\n                // Explicit sibling\n\n                element = sibling.nextElementSibling || null;\n            } else if (self.targets.length > 0 && typeof index !== 'undefined') {\n                // Index and targets exist\n\n                element = (index < self.targets.length || !self.targets.length) ?\n                    self.targets[index].dom.el :\n                    self.targets[self.targets.length - 1].dom.el.nextElementSibling;\n            } else if (self.targets.length === 0 && self.dom.parent.children.length > 0) {\n                // No targets but other siblings\n\n                if (self.config.layout.siblingAfter) {\n                    element = self.config.layout.siblingAfter;\n                } else if (self.config.layout.siblingBefore) {\n                    element = self.config.layout.siblingBefore.nextElementSibling;\n                } else {\n                    self.dom.parent.children[0];\n                }\n            } else {\n                element === null;\n            }\n\n            return self.callFilters('elementGetNextSibling', element, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        filterOperation: function(operation) {\n            var self        = this,\n                testResult  = false,\n                index       = -1,\n                action      = '',\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeFilterOperation', arguments);\n\n            action = operation.newFilter.action;\n\n            for (i = 0; target = operation.newOrder[i]; i++) {\n                if (operation.newFilter.collection) {\n                    // show via collection\n\n                    testResult = operation.newFilter.collection.indexOf(target.dom.el) > -1;\n                } else {\n                    // show via selector\n\n                    if (operation.newFilter.selector === '') {\n                        testResult = false;\n                    } else {\n                        testResult = target.dom.el.matches(operation.newFilter.selector);\n                    }\n                }\n\n                self.evaluateHideShow(testResult, target, action, operation);\n            }\n\n            if (operation.toRemove.length) {\n                for (i = 0; target = operation.show[i]; i++) {\n                    if (operation.toRemove.indexOf(target) > -1) {\n                        // If any shown targets should be removed, move them into the toHide array\n\n                        operation.show.splice(i, 1);\n\n                        if ((index = operation.toShow.indexOf(target)) > -1) {\n                            operation.toShow.splice(index, 1);\n                        }\n\n                        operation.toHide.push(target);\n                        operation.hide.push(target);\n\n                        i--;\n                    }\n                }\n            }\n\n            operation.matching = operation.show.slice();\n\n            if (operation.show.length === 0 && operation.newFilter.selector !== '' && self.targets.length !== 0) {\n                operation.hasFailed = true;\n            }\n\n            self.callActions('afterFilterOperation', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {boolean}   testResult\n         * @param   {Element}   target\n         * @param   {string}    action\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        evaluateHideShow: function(testResult, target, action, operation) {\n            var self = this;\n\n            self.callActions('beforeEvaluateHideShow', arguments);\n\n            if (testResult === true && action === 'show' || testResult === false && action === 'hide') {\n                operation.show.push(target);\n\n                !target.isShown && operation.toShow.push(target);\n            } else {\n                operation.hide.push(target);\n\n                target.isShown && operation.toHide.push(target);\n            }\n\n            self.callActions('afterEvaluateHideShow', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        sortOperation: function(operation) {\n            var self = this;\n\n            self.callActions('beforeSortOperation', arguments);\n\n            operation.startOrder = self.targets;\n\n            if (operation.newSort.collection) {\n                // Sort by collection\n\n                operation.newOrder = operation.newSort.collection;\n            } else if (operation.newSort.order === 'random') {\n                // Sort random\n\n                operation.newOrder = h.arrayShuffle(operation.startOrder);\n            } else if (operation.newSort.attribute === '') {\n                // Sort by default\n\n                operation.newOrder = self.origOrder.slice();\n\n                if (operation.newSort.order === 'desc') {\n                    operation.newOrder.reverse();\n                }\n            } else {\n                // Sort by attribute\n\n                operation.newOrder = operation.startOrder.slice();\n\n                operation.newOrder.sort(function(a, b) {\n                    return self.compare(a, b, operation.newSort);\n                });\n            }\n\n            if (h.isEqualArray(operation.newOrder, operation.startOrder)) {\n                operation.willSort = false;\n            }\n\n            self.callActions('afterSortOperation', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {mixitup.Target}        a\n         * @param   {mixitup.Target}        b\n         * @param   {mixitup.CommandSort}   command\n         * @return  {Number}\n         */\n\n        compare: function(a, b, command) {\n            var self        = this,\n                order       = command.order,\n                attrA       = self.getAttributeValue(a, command.attribute),\n                attrB       = self.getAttributeValue(b, command.attribute);\n\n            if (isNaN(attrA * 1) || isNaN(attrB * 1)) {\n                attrA = attrA.toLowerCase();\n                attrB = attrB.toLowerCase();\n            } else {\n                attrA = attrA * 1;\n                attrB = attrB * 1;\n            }\n\n            if (attrA < attrB) {\n                return order === 'asc' ? -1 : 1;\n            }\n\n            if (attrA > attrB) {\n                return order === 'asc' ? 1 : -1;\n            }\n\n            if (attrA === attrB && command.next) {\n                return self.compare(a, b, command.next);\n            }\n\n            return 0;\n        },\n\n        /**\n         * Reads the values of any data attributes present the provided target element\n         * which match the current sort command.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Target}    target\n         * @param   {string}            [attribute]\n         * @return  {(String|Number)}\n         */\n\n        getAttributeValue: function(target, attribute) {\n            var self    = this,\n                value   = '';\n\n            value = target.dom.el.getAttribute('data-' + attribute);\n\n            if (value === null) {\n                if (self.config.debug.showWarnings) {\n                    // Encourage users to assign values to all targets to avoid erroneous sorting\n                    // when types are mixed\n\n                    console.warn(mixitup.messages.warningInconsistentSortingAttributes({\n                        attribute: 'data-' + attribute\n                    }));\n                }\n            }\n\n            // If an attribute is not present, return 0 as a safety value\n\n            return self.callFilters('valueGetAttributeValue', value || 0, arguments);\n        },\n\n        /**\n         * Inserts elements into the DOM in the appropriate\n         * order using a document fragment for minimal\n         * DOM thrashing\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   isResetting\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        printSort: function(isResetting, operation) {\n            var self        = this,\n                startOrder  = isResetting ? operation.newOrder : operation.startOrder,\n                newOrder    = isResetting ? operation.startOrder : operation.newOrder,\n                nextSibling = startOrder.length ? startOrder[startOrder.length - 1].dom.el.nextElementSibling : null,\n                frag        = window.document.createDocumentFragment(),\n                whitespace  = null,\n                target      = null,\n                el          = null,\n                i           = -1;\n\n            self.callActions('beforePrintSort', arguments);\n\n            // Empty the container\n\n            for (i = 0; target = startOrder[i]; i++) {\n                el = target.dom.el;\n\n                if (el.style.position === 'absolute') continue;\n\n                h.removeWhitespace(el.previousSibling);\n\n                el.parentElement.removeChild(el);\n            }\n\n            whitespace = nextSibling ? nextSibling.previousSibling : self.dom.parent.lastChild;\n\n            if (whitespace && whitespace.nodeName === '#text') {\n                h.removeWhitespace(whitespace);\n            }\n\n            for (i = 0; target = newOrder[i]; i++) {\n                // Add targets into a document fragment\n\n                el = target.dom.el;\n\n                if (h.isElement(frag.lastChild)) {\n                    frag.appendChild(window.document.createTextNode(' '));\n                }\n\n                frag.appendChild(el);\n            }\n\n            // Insert the document fragment into the container\n            // before any other non-target elements\n\n            if (self.dom.parent.firstChild && self.dom.parent.firstChild !== nextSibling) {\n                frag.insertBefore(window.document.createTextNode(' '), frag.childNodes[0]);\n            }\n\n            if (nextSibling) {\n                frag.appendChild(window.document.createTextNode(' '));\n\n                self.dom.parent.insertBefore(frag, nextSibling);\n            } else {\n                self.dom.parent.appendChild(frag);\n            }\n\n            self.callActions('afterPrintSort', arguments);\n        },\n\n        /**\n         * Parses user-defined sort strings (i.e. `default:asc`) into sort commands objects.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}                sortString\n         * @param   {mixitup.CommandSort}   command\n         * @return  {mixitup.CommandSort}\n         */\n\n        parseSortString: function(sortString, command) {\n            var self        = this,\n                rules       = sortString.split(' '),\n                current     = command,\n                rule        = [],\n                i           = -1;\n\n            // command.sortString = sortString;\n\n            for (i = 0; i < rules.length; i++) {\n                rule = rules[i].split(':');\n\n                current.sortString  = rules[i];\n                current.attribute   = h.dashCase(rule[0]);\n                current.order       = rule[1] || 'asc';\n\n                switch (current.attribute) {\n                    case 'default':\n                        // treat \"default\" as sorting by no attribute\n\n                        current.attribute = '';\n\n                        break;\n                    case 'random':\n                        // treat \"random\" as an order not an attribute\n\n                        current.attribute   = '';\n                        current.order       = 'random';\n\n                        break;\n                }\n\n                if (!current.attribute || current.order === 'random') break;\n\n                if (i < rules.length - 1) {\n                    // Embed reference to the next command\n\n                    current.next = new mixitup.CommandSort();\n\n                    h.freeze(current);\n\n                    current = current.next;\n                }\n            }\n\n            return self.callFilters('commandsParseSort', command, arguments);\n        },\n\n        /**\n         * Parses all effects out of the user-defined `animation.effects` string into\n         * their respective properties and units.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @return  {void}\n         */\n\n        parseEffects: function() {\n            var self            = this,\n                transformName   = '',\n                effectsIn       = self.config.animation.effectsIn || self.config.animation.effects,\n                effectsOut      = self.config.animation.effectsOut || self.config.animation.effects;\n\n            self.callActions('beforeParseEffects', arguments);\n\n            self.effectsIn      = new mixitup.StyleData();\n            self.effectsOut     = new mixitup.StyleData();\n            self.transformIn    = [];\n            self.transformOut   = [];\n\n            self.effectsIn.opacity = self.effectsOut.opacity = 1;\n\n            self.parseEffect('fade', effectsIn, self.effectsIn, self.transformIn);\n            self.parseEffect('fade', effectsOut, self.effectsOut, self.transformOut, true);\n\n            for (transformName in mixitup.transformDefaults) {\n                if (!(mixitup.transformDefaults[transformName] instanceof mixitup.TransformData)) {\n                    continue;\n                }\n\n                self.parseEffect(transformName, effectsIn, self.effectsIn, self.transformIn);\n                self.parseEffect(transformName, effectsOut, self.effectsOut, self.transformOut, true);\n            }\n\n            self.parseEffect('stagger', effectsIn, self.effectsIn, self.transformIn);\n            self.parseEffect('stagger', effectsOut, self.effectsOut, self.transformOut, true);\n\n            self.callActions('afterParseEffects', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {string}    effectName\n         * @param   {string}    effectString\n         * @param   {StyleData} effects\n         * @param   {String[]}  transform\n         * @param   {boolean}   [isOut]\n         */\n\n        parseEffect: function(effectName, effectString, effects, transform, isOut) {\n            var self        = this,\n                re          = /\\(([^)]+)\\)/,\n                propIndex   = -1,\n                str         = '',\n                match       = [],\n                val         = '',\n                units       = ['%', 'px', 'em', 'rem', 'vh', 'vw', 'deg'],\n                unit        = '',\n                i           = -1;\n\n            self.callActions('beforeParseEffect', arguments);\n\n            if (typeof effectString !== 'string') {\n                throw new TypeError(mixitup.messages.errorConfigInvalidAnimationEffects());\n            }\n\n            if (effectString.indexOf(effectName) < 0) {\n                // The effect is not present in the effects string\n\n                if (effectName === 'stagger') {\n                    // Reset stagger to 0\n\n                    self.staggerDuration = 0;\n                }\n\n                return;\n            }\n\n            // The effect is present\n\n            propIndex = effectString.indexOf(effectName + '(');\n\n            if (propIndex > -1) {\n                // The effect has a user defined value in parentheses\n\n                // Extract from the first parenthesis to the end of string\n\n                str = effectString.substring(propIndex);\n\n                // Match any number of characters between \"(\" and \")\"\n\n                match = re.exec(str);\n\n                val = match[1];\n            }\n\n            switch (effectName) {\n                case 'fade':\n                    effects.opacity = val ? parseFloat(val) : 0;\n\n                    break;\n                case 'stagger':\n                    self.staggerDuration = val ? parseFloat(val) : 100;\n\n                    // TODO: Currently stagger must be applied globally, but\n                    // if seperate values are specified for in/out, this should\n                    // be respected\n\n                    break;\n                default:\n                    // All other effects are transforms following the same structure\n\n                    if (isOut && self.config.animation.reverseOut && effectName !== 'scale') {\n                        effects[effectName].value =\n                            (val ? parseFloat(val) : mixitup.transformDefaults[effectName].value) * -1;\n                    } else {\n                        effects[effectName].value =\n                            (val ? parseFloat(val) : mixitup.transformDefaults[effectName].value);\n                    }\n\n                    if (val) {\n                        for (i = 0; unit = units[i]; i++) {\n                            if (val.indexOf(unit) > -1) {\n                                effects[effectName].unit = unit;\n\n                                break;\n                            }\n                        }\n                    } else {\n                        effects[effectName].unit = mixitup.transformDefaults[effectName].unit;\n                    }\n\n                    transform.push(\n                        effectName +\n                        '(' +\n                        effects[effectName].value +\n                        effects[effectName].unit +\n                        ')'\n                    );\n            }\n\n            self.callActions('afterParseEffect', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {State}\n         */\n\n        buildState: function(operation) {\n            var self        = this,\n                state       = new mixitup.State(),\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeBuildState', arguments);\n\n            // Map target elements into state arrays.\n            // the real target objects should never be exposed\n\n            for (i = 0; target = self.targets[i]; i++) {\n                if (!operation.toRemove.length || operation.toRemove.indexOf(target) < 0) {\n                    state.targets.push(target.dom.el);\n                }\n            }\n\n            for (i = 0; target = operation.matching[i]; i++) {\n                state.matching.push(target.dom.el);\n            }\n\n            for (i = 0; target = operation.show[i]; i++) {\n                state.show.push(target.dom.el);\n            }\n\n            for (i = 0; target = operation.hide[i]; i++) {\n                if (!operation.toRemove.length || operation.toRemove.indexOf(target) < 0) {\n                    state.hide.push(target.dom.el);\n                }\n            }\n\n            state.id                        = self.id;\n            state.container                 = self.dom.container;\n            state.activeFilter              = operation.newFilter;\n            state.activeSort                = operation.newSort;\n            state.activeDataset             = operation.newDataset;\n            state.activeContainerClassName  = operation.newContainerClassName;\n            state.hasFailed                 = operation.hasFailed;\n            state.totalTargets              = self.targets.length;\n            state.totalShow                 = operation.show.length;\n            state.totalHide                 = operation.hide.length;\n            state.totalMatching             = operation.matching.length;\n            state.triggerElement            = operation.triggerElement;\n\n            return self.callFilters('stateBuildState', state, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   shouldAnimate\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        goMix: function(shouldAnimate, operation) {\n            var self        = this,\n                deferred    = null;\n\n            self.callActions('beforeGoMix', arguments);\n\n            // If the animation duration is set to 0ms,\n            // or no effects specified,\n            // or the container is hidden\n            // then abort animation\n\n            if (\n                !self.config.animation.duration || !self.config.animation.effects || !h.isVisible(self.dom.container)\n            ) {\n                shouldAnimate = false;\n            }\n\n            if (\n                !operation.toShow.length &&\n                !operation.toHide.length &&\n                !operation.willSort &&\n                !operation.willChangeLayout\n            ) {\n                // If nothing to show or hide, and not sorting or\n                // changing layout\n\n                shouldAnimate = false;\n            }\n\n            if (\n                !operation.startState.show.length &&\n                !operation.show.length\n            ) {\n                // If nothing currently shown, nothing to show\n\n                shouldAnimate = false;\n            }\n\n            mixitup.events.fire('mixStart', self.dom.container, {\n                state: operation.startState,\n                futureState: operation.newState,\n                instance: self\n            }, self.dom.document);\n\n            if (typeof self.config.callbacks.onMixStart === 'function') {\n                self.config.callbacks.onMixStart.call(\n                    self.dom.container,\n                    operation.startState,\n                    operation.newState,\n                    self\n                );\n            }\n\n            h.removeClass(self.dom.container, h.getClassname(self.config.classNames, 'container', self.config.classNames.modifierFailed));\n\n            if (!self.userDeferred) {\n                // Queue empty, no pending operations\n\n                deferred = self.userDeferred = h.defer(mixitup.libraries);\n            } else {\n                // Use existing deferred\n\n                deferred = self.userDeferred;\n            }\n\n            self.isBusy = true;\n\n            if (!shouldAnimate || !mixitup.features.has.transitions) {\n                // Abort\n\n                if (self.config.debug.fauxAsync) {\n                    setTimeout(function() {\n                        self.cleanUp(operation);\n                    }, self.config.animation.duration);\n                } else {\n                    self.cleanUp(operation);\n                }\n\n                return self.callFilters('promiseGoMix', deferred.promise, arguments);\n            }\n\n            // If we should animate and the platform supports transitions, go for it\n\n            if (window.pageYOffset !== operation.docState.scrollTop) {\n                window.scrollTo(operation.docState.scrollLeft, operation.docState.scrollTop);\n            }\n\n            if (self.config.animation.applyPerspective) {\n                self.dom.parent.style[mixitup.features.perspectiveProp] =\n                    self.config.animation.perspectiveDistance;\n\n                self.dom.parent.style[mixitup.features.perspectiveOriginProp] =\n                    self.config.animation.perspectiveOrigin;\n            }\n\n            if (\n                self.config.animation.animateResizeContainer &&\n                operation.startHeight !== operation.newHeight &&\n                operation.viewportDeltaY !== operation.startHeight - operation.newHeight\n            ) {\n                self.dom.parent.style.height = operation.startHeight + 'px';\n            }\n\n            if (\n                self.config.animation.animateResizeContainer &&\n                operation.startWidth !== operation.newWidth &&\n                operation.viewportDeltaX !== operation.startWidth - operation.newWidth\n            ) {\n                self.dom.parent.style.width = operation.startWidth + 'px';\n            }\n\n            if (operation.startHeight === operation.newHeight) {\n                self.dom.parent.style.height = operation.startHeight + 'px';\n            }\n\n            if (operation.startWidth === operation.newWidth) {\n                self.dom.parent.style.width = operation.startWidth + 'px';\n            }\n\n            if (operation.startHeight === operation.newHeight && operation.startWidth === operation.newWidth) {\n                self.dom.parent.style.overflow = 'hidden';\n            }\n\n            requestAnimationFrame(function() {\n                self.moveTargets(operation);\n            });\n\n            return self.callFilters('promiseGoMix', deferred.promise, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getStartMixData: function(operation) {\n            var self        = this,\n                parentStyle = window.getComputedStyle(self.dom.parent),\n                parentRect  = self.dom.parent.getBoundingClientRect(),\n                target      = null,\n                data        = {},\n                i           = -1,\n                boxSizing   = parentStyle[mixitup.features.boxSizingProp];\n\n            self.incPadding = (boxSizing === 'border-box');\n\n            self.callActions('beforeGetStartMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                data = target.getPosData();\n\n                operation.showPosData[i] = {\n                    startPosData: data\n                };\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                data = target.getPosData();\n\n                operation.toHidePosData[i] = {\n                    startPosData: data\n                };\n            }\n\n            operation.startX = parentRect.left;\n            operation.startY = parentRect.top;\n\n            operation.startHeight = self.incPadding ?\n                parentRect.height :\n                parentRect.height -\n                    parseFloat(parentStyle.paddingTop) -\n                    parseFloat(parentStyle.paddingBottom) -\n                    parseFloat(parentStyle.borderTop) -\n                    parseFloat(parentStyle.borderBottom);\n\n            operation.startWidth = self.incPadding ?\n                parentRect.width :\n                parentRect.width -\n                    parseFloat(parentStyle.paddingLeft) -\n                    parseFloat(parentStyle.paddingRight) -\n                    parseFloat(parentStyle.borderLeft) -\n                    parseFloat(parentStyle.borderRight);\n\n            self.callActions('afterGetStartMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        setInter: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeSetInter', arguments);\n\n            // Prevent scrollbar flicker on non-inertial scroll platforms by clamping height/width\n\n            if (self.config.animation.clampHeight) {\n                self.dom.parent.style.height    = operation.startHeight + 'px';\n                self.dom.parent.style.overflow  = 'hidden';\n            }\n\n            if (self.config.animation.clampWidth) {\n                self.dom.parent.style.width     = operation.startWidth + 'px';\n                self.dom.parent.style.overflow  = 'hidden';\n            }\n\n            for (i = 0; target = operation.toShow[i]; i++) {\n                target.show();\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.startContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            self.callActions('afterSetInter', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getInterMixData: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeGetInterMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                operation.showPosData[i].interPosData = target.getPosData();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                operation.toHidePosData[i].interPosData = target.getPosData();\n            }\n\n            self.callActions('afterGetInterMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        setFinal: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeSetFinal', arguments);\n\n            operation.willSort && self.printSort(false, operation);\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.hide();\n            }\n\n            self.callActions('afterSetFinal', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getFinalMixData: function(operation) {\n            var self        = this,\n                parentStyle = null,\n                parentRect  = null,\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeGetFinalMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                operation.showPosData[i].finalPosData = target.getPosData();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                operation.toHidePosData[i].finalPosData = target.getPosData();\n            }\n\n            // Remove clamping\n\n            if (self.config.animation.clampHeight || self.config.animation.clampWidth) {\n                self.dom.parent.style.height    =\n                self.dom.parent.style.width     =\n                self.dom.parent.style.overflow  = '';\n            }\n\n            if (!self.incPadding) {\n                parentStyle = window.getComputedStyle(self.dom.parent);\n            }\n\n            parentRect  = self.dom.parent.getBoundingClientRect();\n\n            operation.newX = parentRect.left;\n            operation.newY = parentRect.top;\n\n            operation.newHeight = self.incPadding ?\n                parentRect.height :\n                parentRect.height -\n                    parseFloat(parentStyle.paddingTop) -\n                    parseFloat(parentStyle.paddingBottom) -\n                    parseFloat(parentStyle.borderTop) -\n                    parseFloat(parentStyle.borderBottom);\n\n            operation.newWidth = self.incPadding ?\n                parentRect.width :\n                parentRect.width -\n                    parseFloat(parentStyle.paddingLeft) -\n                    parseFloat(parentStyle.paddingRight) -\n                    parseFloat(parentStyle.borderLeft) -\n                    parseFloat(parentStyle.borderRight);\n\n            operation.viewportDeltaX = operation.docState.viewportWidth - this.dom.document.documentElement.clientWidth;\n            operation.viewportDeltaY = operation.docState.viewportHeight - this.dom.document.documentElement.clientHeight;\n\n            if (operation.willSort) {\n                self.printSort(true, operation);\n            }\n\n            for (i = 0; target = operation.toShow[i]; i++) {\n                target.hide();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.show();\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.newContainerClassName);\n                h.addClass(self.dom.container, self.config.layout.containerClassName);\n            }\n\n            self.callActions('afterGetFinalMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since    3.0.0\n         * @param    {Operation}     operation\n         */\n\n        getTweenData: function(operation) {\n            var self            = this,\n                target          = null,\n                posData         = null,\n                effectNames     = Object.getOwnPropertyNames(self.effectsIn),\n                effectName      = '',\n                effect          = null,\n                widthChange     = -1,\n                heightChange    = -1,\n                i               = -1,\n                j               = -1;\n\n            self.callActions('beforeGetTweenData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                posData             = operation.showPosData[i];\n                posData.posIn       = new mixitup.StyleData();\n                posData.posOut      = new mixitup.StyleData();\n                posData.tweenData   = new mixitup.StyleData();\n\n                // Process x and y\n\n                if (target.isShown) {\n                    posData.posIn.x = posData.startPosData.x - posData.interPosData.x;\n                    posData.posIn.y = posData.startPosData.y - posData.interPosData.y;\n                } else {\n                    posData.posIn.x = posData.posIn.y = 0;\n                }\n\n                posData.posOut.x = posData.finalPosData.x - posData.interPosData.x;\n                posData.posOut.y = posData.finalPosData.y - posData.interPosData.y;\n\n                // Process opacity\n\n                posData.posIn.opacity       = target.isShown ? 1 : self.effectsIn.opacity;\n                posData.posOut.opacity      = 1;\n                posData.tweenData.opacity   = posData.posOut.opacity - posData.posIn.opacity;\n\n                // Adjust x and y if not nudging\n\n                if (!target.isShown && !self.config.animation.nudge) {\n                    posData.posIn.x = posData.posOut.x;\n                    posData.posIn.y = posData.posOut.y;\n                }\n\n                posData.tweenData.x = posData.posOut.x - posData.posIn.x;\n                posData.tweenData.y = posData.posOut.y - posData.posIn.y;\n\n                // Process width, height, and margins\n\n                if (self.config.animation.animateResizeTargets) {\n                    posData.posIn.width     = posData.startPosData.width;\n                    posData.posIn.height    = posData.startPosData.height;\n\n                    // \"||\" Prevents width/height change from including 0 width/height if hiding or showing\n\n                    widthChange = (posData.startPosData.width || posData.finalPosData.width) - posData.interPosData.width;\n\n                    posData.posIn.marginRight = posData.startPosData.marginRight - widthChange;\n\n                    heightChange = (posData.startPosData.height || posData.finalPosData.height) - posData.interPosData.height;\n\n                    posData.posIn.marginBottom = posData.startPosData.marginBottom - heightChange;\n\n                    posData.posOut.width    = posData.finalPosData.width;\n                    posData.posOut.height   = posData.finalPosData.height;\n\n                    widthChange = (posData.finalPosData.width || posData.startPosData.width) - posData.interPosData.width;\n\n                    posData.posOut.marginRight = posData.finalPosData.marginRight - widthChange;\n\n                    heightChange = (posData.finalPosData.height || posData.startPosData.height) - posData.interPosData.height;\n\n                    posData.posOut.marginBottom = posData.finalPosData.marginBottom - heightChange;\n\n                    posData.tweenData.width         = posData.posOut.width - posData.posIn.width;\n                    posData.tweenData.height        = posData.posOut.height - posData.posIn.height;\n                    posData.tweenData.marginRight   = posData.posOut.marginRight - posData.posIn.marginRight;\n                    posData.tweenData.marginBottom  = posData.posOut.marginBottom - posData.posIn.marginBottom;\n                }\n\n                // Process transforms\n\n                for (j = 0; effectName = effectNames[j]; j++) {\n                    effect = self.effectsIn[effectName];\n\n                    if (!(effect instanceof mixitup.TransformData) || !effect.value) continue;\n\n                    posData.posIn[effectName].value     = effect.value;\n                    posData.posOut[effectName].value    = 0;\n\n                    posData.tweenData[effectName].value =\n                        posData.posOut[effectName].value - posData.posIn[effectName].value;\n\n                    posData.posIn[effectName].unit =\n                        posData.posOut[effectName].unit =\n                        posData.tweenData[effectName].unit =\n                        effect.unit;\n                }\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                posData             = operation.toHidePosData[i];\n                posData.posIn       = new mixitup.StyleData();\n                posData.posOut      = new mixitup.StyleData();\n                posData.tweenData   = new mixitup.StyleData();\n\n                // Process x and y\n\n                posData.posIn.x     = target.isShown ? posData.startPosData.x - posData.interPosData.x : 0;\n                posData.posIn.y     = target.isShown ? posData.startPosData.y - posData.interPosData.y : 0;\n                posData.posOut.x    = self.config.animation.nudge ? 0 : posData.posIn.x;\n                posData.posOut.y    = self.config.animation.nudge ? 0 : posData.posIn.y;\n                posData.tweenData.x = posData.posOut.x - posData.posIn.x;\n                posData.tweenData.y = posData.posOut.y - posData.posIn.y;\n\n                // Process width, height, and margins\n\n                if (self.config.animation.animateResizeTargets) {\n                    posData.posIn.width         = posData.startPosData.width;\n                    posData.posIn.height        = posData.startPosData.height;\n\n                    widthChange = posData.startPosData.width - posData.interPosData.width;\n\n                    posData.posIn.marginRight = posData.startPosData.marginRight - widthChange;\n\n                    heightChange = posData.startPosData.height - posData.interPosData.height;\n\n                    posData.posIn.marginBottom = posData.startPosData.marginBottom - heightChange;\n                }\n\n                // Process opacity\n\n                posData.posIn.opacity       = 1;\n                posData.posOut.opacity      = self.effectsOut.opacity;\n                posData.tweenData.opacity   = posData.posOut.opacity - posData.posIn.opacity;\n\n                // Process transforms\n\n                for (j = 0; effectName = effectNames[j]; j++) {\n                    effect = self.effectsOut[effectName];\n\n                    if (!(effect instanceof mixitup.TransformData) || !effect.value) continue;\n\n                    posData.posIn[effectName].value     = 0;\n                    posData.posOut[effectName].value    = effect.value;\n\n                    posData.tweenData[effectName].value =\n                        posData.posOut[effectName].value - posData.posIn[effectName].value;\n\n                    posData.posIn[effectName].unit =\n                        posData.posOut[effectName].unit =\n                        posData.tweenData[effectName].unit =\n                        effect.unit;\n                }\n            }\n\n            self.callActions('afterGetTweenData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        moveTargets: function(operation) {\n            var self            = this,\n                target          = null,\n                moveData        = null,\n                posData         = null,\n                statusChange    = '',\n                willTransition  = false,\n                staggerIndex    = -1,\n                i               = -1,\n                checkProgress   = self.checkProgress.bind(self);\n\n            self.callActions('beforeMoveTargets', arguments);\n\n            // TODO: this is an extra loop in addition to the calcs\n            // done in getOperation, could some of this be done there?\n\n            for (i = 0; target = operation.show[i]; i++) {\n                moveData    = new mixitup.IMoveData();\n                posData     = operation.showPosData[i];\n\n                statusChange = target.isShown ? 'none' : 'show';\n\n                willTransition = self.willTransition(\n                    statusChange,\n                    operation.hasEffect,\n                    posData.posIn,\n                    posData.posOut\n                );\n\n                if (willTransition) {\n                    // Prevent non-transitioning targets from incrementing the staggerIndex\n\n                    staggerIndex++;\n                }\n\n                target.show();\n\n                moveData.posIn          = posData.posIn;\n                moveData.posOut         = posData.posOut;\n                moveData.statusChange   = statusChange;\n                moveData.staggerIndex   = staggerIndex;\n                moveData.operation      = operation;\n                moveData.callback       = willTransition ? checkProgress : null;\n\n                target.move(moveData);\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                posData  = operation.toHidePosData[i];\n                moveData = new mixitup.IMoveData();\n\n                statusChange = 'hide';\n\n                willTransition = self.willTransition(statusChange, posData.posIn, posData.posOut);\n\n                moveData.posIn          = posData.posIn;\n                moveData.posOut         = posData.posOut;\n                moveData.statusChange   = statusChange;\n                moveData.staggerIndex   = i;\n                moveData.operation      = operation;\n                moveData.callback       = willTransition ? checkProgress : null;\n\n                target.move(moveData);\n            }\n\n            if (self.config.animation.animateResizeContainer) {\n                self.dom.parent.style[mixitup.features.transitionProp] =\n                    'height ' + self.config.animation.duration + 'ms ease, ' +\n                    'width ' + self.config.animation.duration + 'ms ease ';\n\n                requestAnimationFrame(function() {\n                    if (\n                        operation.startHeight !== operation.newHeight &&\n                        operation.viewportDeltaY !== operation.startHeight - operation.newHeight\n                    ) {\n                        self.dom.parent.style.height = operation.newHeight + 'px';\n                    }\n\n                    if (\n                        operation.startWidth !== operation.newWidth &&\n                        operation.viewportDeltaX !== operation.startWidth - operation.newWidth\n                    ) {\n                        self.dom.parent.style.width = operation.newWidth + 'px';\n                    }\n                });\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, self.config.layout.ContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            self.callActions('afterMoveTargets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @return  {boolean}\n         */\n\n        hasEffect: function() {\n            var self        = this,\n                EFFECTABLES = [\n                    'scale',\n                    'translateX', 'translateY', 'translateZ',\n                    'rotateX', 'rotateY', 'rotateZ'\n                ],\n                effectName  = '',\n                effect      = null,\n                result      = false,\n                value       = -1,\n                i           = -1;\n\n            if (self.effectsIn.opacity !== 1) {\n                return self.callFilters('resultHasEffect', true, arguments);\n            }\n\n            for (i = 0; effectName = EFFECTABLES[i]; i++) {\n                effect  = self.effectsIn[effectName];\n                value   = (typeof effect && effect.value !== 'undefined') ?\n                    effect.value : effect;\n\n                if (value !== 0) {\n                    result = true;\n\n                    break;\n                }\n            }\n\n            return self.callFilters('resultHasEffect', result, arguments);\n        },\n\n        /**\n         * Determines if a target element will transition in\n         * some fasion and therefore requires binding of\n         * transitionEnd\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}        statusChange\n         * @param   {boolean}       hasEffect\n         * @param   {StyleData}     posIn\n         * @param   {StyleData}     posOut\n         * @return  {boolean}\n         */\n\n        willTransition: function(statusChange, hasEffect, posIn, posOut) {\n            var self    = this,\n                result  = false;\n\n            if (!h.isVisible(self.dom.container)) {\n                // If the container is not visible, the transitionEnd\n                // event will not occur and MixItUp will hang\n\n                result = false;\n            } else if (\n                (statusChange !== 'none' && hasEffect) ||\n                posIn.x !== posOut.x ||\n                posIn.y !== posOut.y\n            ) {\n                // If opacity and/or translate will change\n\n                result = true;\n            } else if (self.config.animation.animateResizeTargets) {\n                // Check if width, height or margins will change\n\n                result = (\n                    posIn.width !== posOut.width ||\n                    posIn.height !== posOut.height ||\n                    posIn.marginRight !== posOut.marginRight ||\n                    posIn.marginTop !== posOut.marginTop\n                );\n            } else {\n                result = false;\n            }\n\n            return self.callFilters('resultWillTransition', result, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        checkProgress: function(operation) {\n            var self = this;\n\n            self.targetsDone++;\n\n            if (self.targetsBound === self.targetsDone) {\n                self.cleanUp(operation);\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        cleanUp: function(operation) {\n            var self                = this,\n                target              = null,\n                whitespaceBefore    = null,\n                whitespaceAfter     = null,\n                nextInQueue         = null,\n                i                   = -1;\n\n            self.callActions('beforeCleanUp', arguments);\n\n            self.targetsMoved          =\n                self.targetsImmovable  =\n                self.targetsBound      =\n                self.targetsDone       = 0;\n\n            for (i = 0; target = operation.show[i]; i++) {\n                target.cleanUp();\n\n                target.show();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.cleanUp();\n\n                target.hide();\n            }\n\n            if (operation.willSort) {\n                self.printSort(false, operation);\n            }\n\n            // Remove any styles applied to the parent container\n\n            self.dom.parent.style[mixitup.features.transitionProp]             =\n                self.dom.parent.style.height                                   =\n                self.dom.parent.style.width                                    =\n                self.dom.parent.style.overflow                                 =\n                self.dom.parent.style[mixitup.features.perspectiveProp]        =\n                self.dom.parent.style[mixitup.features.perspectiveOriginProp]  = '';\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.startContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            if (operation.toRemove.length) {\n                for (i = 0; target = self.targets[i]; i++) {\n                    if (operation.toRemove.indexOf(target) > -1) {\n                        if (\n                            (whitespaceBefore = target.dom.el.previousSibling) && whitespaceBefore.nodeName === '#text' &&\n                            (whitespaceAfter = target.dom.el.nextSibling) && whitespaceAfter.nodeName === '#text'\n                        ) {\n                            h.removeWhitespace(whitespaceBefore);\n                        }\n\n                        if (!operation.willSort) {\n                            // NB: Sorting will remove targets as a bi-product of `printSort()`\n\n                            self.dom.parent.removeChild(target.dom.el);\n                        }\n\n                        self.targets.splice(i, 1);\n\n                        target.isInDom = false;\n\n                        i--;\n                    }\n                }\n\n                // Since targets have been removed, the original order must be updated\n\n                self.origOrder = self.targets;\n            }\n\n            if (operation.willSort) {\n                self.targets = operation.newOrder;\n            }\n\n            self.state = operation.newState;\n            self.lastOperation = operation;\n\n            self.dom.targets = self.state.targets;\n\n            // mixEnd\n\n            mixitup.events.fire('mixEnd', self.dom.container, {\n                state: self.state,\n                instance: self\n            }, self.dom.document);\n\n            if (typeof self.config.callbacks.onMixEnd === 'function') {\n                self.config.callbacks.onMixEnd.call(self.dom.container, self.state, self);\n            }\n\n            if (operation.hasFailed) {\n                // mixFail\n\n                mixitup.events.fire('mixFail', self.dom.container, {\n                    state: self.state,\n                    instance: self\n                }, self.dom.document);\n\n                if (typeof self.config.callbacks.onMixFail === 'function') {\n                    self.config.callbacks.onMixFail.call(self.dom.container, self.state, self);\n                }\n\n                h.addClass(self.dom.container, h.getClassname(self.config.classNames, 'container', self.config.classNames.modifierFailed));\n            }\n\n            // User-defined callback function\n\n            if (typeof self.userCallback === 'function') {\n                self.userCallback.call(self.dom.container, self.state, self);\n            }\n\n            if (typeof self.userDeferred.resolve === 'function') {\n                self.userDeferred.resolve(self.state);\n            }\n\n            self.userCallback  = null;\n            self.userDeferred  = null;\n            self.lastClicked   = null;\n            self.isToggling    = false;\n            self.isBusy        = false;\n\n            if (self.queue.length) {\n                self.callActions('beforeReadQueueCleanUp', arguments);\n\n                nextInQueue = self.queue.shift();\n\n                // Update non-public API properties stored in queue\n\n                self.userDeferred  = nextInQueue.deferred;\n                self.isToggling    = nextInQueue.isToggling;\n                self.lastClicked   = nextInQueue.triggerElement;\n\n                if (nextInQueue.instruction.command instanceof mixitup.CommandMultimix) {\n                    self.multimix.apply(self, nextInQueue.args);\n                } else {\n                    self.dataset.apply(self, nextInQueue.args);\n                }\n            }\n\n            self.callActions('afterCleanUp', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseMultimixArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandMultimix();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                if (typeof arg === 'object') {\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            // Coerce arbitrary command arguments into typed command objects\n\n            if (instruction.command.insert && !(instruction.command.insert instanceof mixitup.CommandInsert)) {\n                instruction.command.insert = self.parseInsertArgs([instruction.command.insert]).command;\n            }\n\n            if (instruction.command.remove && !(instruction.command.remove instanceof mixitup.CommandRemove)) {\n                instruction.command.remove = self.parseRemoveArgs([instruction.command.remove]).command;\n            }\n\n            if (instruction.command.filter && !(instruction.command.filter instanceof mixitup.CommandFilter)) {\n                instruction.command.filter = self.parseFilterArgs([instruction.command.filter]).command;\n            }\n\n            if (instruction.command.sort && !(instruction.command.sort instanceof mixitup.CommandSort)) {\n                instruction.command.sort = self.parseSortArgs([instruction.command.sort]).command;\n            }\n\n            if (instruction.command.changeLayout && !(instruction.command.changeLayout instanceof mixitup.CommandChangeLayout)) {\n                instruction.command.changeLayout = self.parseChangeLayoutArgs([instruction.command.changeLayout]).command;\n            }\n\n            instruction = self.callFilters('instructionParseMultimixArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseFilterArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandFilter();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (typeof arg === 'string') {\n                    // Selector\n\n                    instruction.command.selector = arg;\n                } else if (arg === null) {\n                    instruction.command.collection = [];\n                } else if (typeof arg === 'object' && h.isElement(arg, self.dom.document)) {\n                    // Single element\n\n                    instruction.command.collection = [arg];\n                } else if (typeof arg === 'object' && typeof arg.length !== 'undefined') {\n                    // Multiple elements in array, NodeList or jQuery collection\n\n                    instruction.command.collection = h.arrayFromList(arg);\n                } else if (typeof arg === 'object') {\n                    // Filter command\n\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            if (instruction.command.selector && instruction.command.collection) {\n                throw new Error(mixitup.messages.errorFilterInvalidArguments());\n            }\n\n            instruction = self.callFilters('instructionParseFilterArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        parseSortArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                sortString  = '',\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandSort();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'string':\n                        // Sort string\n\n                        sortString = arg;\n\n                        break;\n                    case 'object':\n                        // Array of element references\n\n                        if (arg.length) {\n                            instruction.command.collection = h.arrayFromList(arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            if (sortString) {\n                instruction.command = self.parseSortString(sortString, instruction.command);\n            }\n\n            instruction = self.callFilters('instructionParseSortArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseInsertArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandInsert();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                if (typeof arg === 'number') {\n                    // Insert index\n\n                    instruction.command.index = arg;\n                } else if (typeof arg === 'string' && ['before', 'after'].indexOf(arg) > -1) {\n                    // 'before'/'after'\n\n                    instruction.command.position = arg;\n                } else if (typeof arg === 'string') {\n                    // Markup\n\n                    instruction.command.collection =\n                        h.arrayFromList(h.createElement(arg).childNodes);\n                } else if (typeof arg === 'object' && h.isElement(arg, self.dom.document)) {\n                    // Single element\n\n                    !instruction.command.collection.length ?\n                        (instruction.command.collection = [arg]) :\n                        (instruction.command.sibling = arg);\n                } else if (typeof arg === 'object' && arg.length) {\n                    // Multiple elements in array or jQuery collection\n\n                    !instruction.command.collection.length ?\n                        (instruction.command.collection = arg) :\n                        instruction.command.sibling = arg[0];\n                } else if (typeof arg === 'object' && arg.childNodes && arg.childNodes.length) {\n                    // Document fragment\n\n                    !instruction.command.collection.length ?\n                        instruction.command.collection = h.arrayFromList(arg.childNodes) :\n                        instruction.command.sibling = arg.childNodes[0];\n                } else if (typeof arg === 'object') {\n                    // Insert command\n\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            if (instruction.command.index && instruction.command.sibling) {\n                throw new Error(mixitup.messages.errorInsertInvalidArguments());\n            }\n\n            if (!instruction.command.collection.length && self.config.debug.showWarnings) {\n                console.warn(mixitup.messages.warningInsertNoElements());\n            }\n\n            instruction = self.callFilters('instructionParseInsertArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseRemoveArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                target      = null,\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandRemove();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'number':\n                        if (self.targets[arg]) {\n                            instruction.command.targets[0] = self.targets[arg];\n                        }\n\n                        break;\n                    case 'string':\n                        instruction.command.collection = h.arrayFromList(self.dom.parent.querySelectorAll(arg));\n\n                        break;\n                    case 'object':\n                        if (arg && arg.length) {\n                            instruction.command.collection = arg;\n                        } else if (h.isElement(arg, self.dom.document)) {\n                            instruction.command.collection = [arg];\n                        } else {\n                            // Remove command\n\n                            h.extend(instruction.command, arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            if (instruction.command.collection.length) {\n                for (i = 0; target = self.targets[i]; i++) {\n                    if (instruction.command.collection.indexOf(target.dom.el) > -1) {\n                        instruction.command.targets.push(target);\n                    }\n                }\n            }\n\n            if (!instruction.command.targets.length && self.config.debug.showWarnings) {\n                console.warn(mixitup.messages.warningRemoveNoElements());\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseDatasetArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandDataset();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'object':\n                        if (Array.isArray(arg) || typeof arg.length === 'number') {\n                            instruction.command.dataset = arg;\n                        } else {\n                            // Change layout command\n\n                            h.extend(instruction.command, arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseChangeLayoutArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandChangeLayout();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'string':\n                        instruction.command.containerClassName = arg;\n\n                        break;\n                    case 'object':\n                        // Change layout command\n\n                        h.extend(instruction.command, arg);\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since       3.0.0\n         * @param       {mixitup.QueueItem}         queueItem\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        queueMix: function(queueItem) {\n            var self            = this,\n                deferred        = null,\n                toggleSelector  = '';\n\n            self.callActions('beforeQueueMix', arguments);\n\n            deferred = h.defer(mixitup.libraries);\n\n            if (self.config.animation.queue && self.queue.length < self.config.animation.queueLimit) {\n                queueItem.deferred = deferred;\n\n                self.queue.push(queueItem);\n\n                // Keep controls in sync with user interactions. Mixer will catch up as it drains the queue.\n\n                if (self.config.controls.enable) {\n                    if (self.isToggling) {\n                        self.buildToggleArray(queueItem.instruction.command);\n\n                        toggleSelector = self.getToggleSelector();\n\n                        self.updateControls({\n                            filter: {\n                                selector: toggleSelector\n                            }\n                        });\n                    } else {\n                        self.updateControls(queueItem.instruction.command);\n                    }\n                }\n            } else {\n                if (self.config.debug.showWarnings) {\n                    console.warn(mixitup.messages.warningMultimixInstanceQueueFull());\n                }\n\n                deferred.resolve(self.state);\n\n                mixitup.events.fire('mixBusy', self.dom.container, {\n                    state: self.state,\n                    instance: self\n                }, self.dom.document);\n\n                if (typeof self.config.callbacks.onMixBusy === 'function') {\n                    self.config.callbacks.onMixBusy.call(self.dom.container, self.state, self);\n                }\n            }\n\n            return self.callFilters('promiseQueueMix', deferred.promise, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array.<object>}    newDataset\n         * @return  {Operation}\n         */\n\n        getDataOperation: function(newDataset) {\n            var self                = this,\n                operation           = new mixitup.Operation(),\n                startDataset        = [];\n\n            operation = self.callFilters('operationUnmappedGetDataOperation', operation, arguments);\n\n            if (self.dom.targets.length && !(startDataset = (self.state.activeDataset || [])).length) {\n                throw new Error(mixitup.messages.errorDatasetNotSet());\n            }\n\n            operation.id            = h.randomHex();\n            operation.startState    = self.state;\n            operation.startDataset  = startDataset;\n            operation.newDataset    = newDataset.slice();\n\n            self.diffDatasets(operation);\n\n            operation.startOrder = self.targets;\n            operation.newOrder = operation.show;\n\n            if (self.config.animation.enable) {\n                self.getStartMixData(operation);\n                self.setInter(operation);\n\n                operation.docState = h.getDocumentState(self.dom.document);\n\n                self.getInterMixData(operation);\n                self.setFinal(operation);\n                self.getFinalMixData(operation);\n\n                self.parseEffects();\n\n                operation.hasEffect = self.hasEffect();\n\n                self.getTweenData(operation);\n            }\n\n            self.targets = operation.show.slice();\n\n            operation.newState = self.buildState(operation);\n\n            // NB: Targets to be removed must be included in `self.targets` for removal during clean up,\n            // but are added after state is built so that state is accurate\n\n            Array.prototype.push.apply(self.targets, operation.toRemove);\n\n            operation = self.callFilters('operationMappedGetDataOperation', operation, arguments);\n\n            return operation;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Operation} operation\n         * @return  {void}\n         */\n\n        diffDatasets: function(operation) {\n            var self                = this,\n                persistantStartIds  = [],\n                persistantNewIds    = [],\n                insertedTargets     = [],\n                data                = null,\n                target              = null,\n                el                  = null,\n                frag                = null,\n                nextEl              = null,\n                uids                = {},\n                id                  = '',\n                i                   = -1;\n\n            self.callActions('beforeDiffDatasets', arguments);\n\n            for (i = 0; data = operation.newDataset[i]; i++) {\n                if (typeof (id = data[self.config.data.uidKey]) === 'undefined' || id.toString().length < 1) {\n                    throw new TypeError(mixitup.messages.errorDatasetInvalidUidKey({\n                        uidKey: self.config.data.uidKey\n                    }));\n                }\n\n                if (!uids[id]) {\n                    uids[id] = true;\n                } else {\n                    throw new Error(mixitup.messages.errorDatasetDuplicateUid({\n                        uid: id\n                    }));\n                }\n\n                if ((target = self.cache[id]) instanceof mixitup.Target) {\n                    // Already in cache\n\n                    if (self.config.data.dirtyCheck && !h.deepEquals(data, target.data)) {\n                        // change detected\n\n                        el = target.render(data);\n\n                        target.data = data;\n\n                        if (el !== target.dom.el) {\n                            // Update target element reference\n\n                            if (target.isInDom) {\n                                target.unbindEvents();\n\n                                self.dom.parent.replaceChild(el, target.dom.el);\n                            }\n\n                            if (!target.isShown) {\n                                el.style.display = 'none';\n                            }\n\n                            target.dom.el = el;\n\n                            if (target.isInDom) {\n                                target.bindEvents();\n                            }\n                        }\n                    }\n\n                    el = target.dom.el;\n                } else {\n                    // New target\n\n                    target = new mixitup.Target();\n\n                    target.init(null, self, data);\n\n                    target.hide();\n                }\n\n                if (!target.isInDom) {\n                    // Adding to DOM\n\n                    if (!frag) {\n                        // Open frag\n\n                        frag = self.dom.document.createDocumentFragment();\n                    }\n\n                    if (frag.lastElementChild) {\n                        frag.appendChild(self.dom.document.createTextNode(' '));\n                    }\n\n                    frag.appendChild(target.dom.el);\n\n                    target.isInDom = true;\n\n                    target.unbindEvents();\n                    target.bindEvents();\n                    target.hide();\n\n                    operation.toShow.push(target);\n\n                    insertedTargets.push(target);\n                } else {\n                    // Already in DOM\n\n                    nextEl = target.dom.el.nextElementSibling;\n\n                    persistantNewIds.push(id);\n\n                    if (frag) {\n                        // Close and insert previously opened frag\n\n                        if (frag.lastElementChild) {\n                            frag.appendChild(self.dom.document.createTextNode(' '));\n                        }\n\n                        self.insertDatasetFrag(frag, target.dom.el, insertedTargets);\n\n                        frag = null;\n                    }\n                }\n\n                operation.show.push(target);\n            }\n\n            if (frag) {\n                // Unclosed frag remaining\n\n                nextEl = nextEl || self.config.layout.siblingAfter;\n\n                if (nextEl) {\n                    frag.appendChild(self.dom.document.createTextNode(' '));\n                }\n\n                self.insertDatasetFrag(frag, nextEl, insertedTargets);\n            }\n\n            for (i = 0; data = operation.startDataset[i]; i++) {\n                id = data[self.config.data.uidKey];\n\n                target = self.cache[id];\n\n                if (operation.show.indexOf(target) < 0) {\n                    // Previously shown but now absent\n\n                    operation.hide.push(target);\n                    operation.toHide.push(target);\n                    operation.toRemove.push(target);\n                } else {\n                    persistantStartIds.push(id);\n                }\n            }\n\n            if (!h.isEqualArray(persistantStartIds, persistantNewIds)) {\n                operation.willSort = true;\n            }\n\n            self.callActions('afterDiffDatasets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.1.5\n         * @param   {DocumentFragment}          frag\n         * @param   {(HTMLElement|null)}        nextEl\n         * @param   {Array.<mixitup.Target>}    targets\n         * @return  {void}\n         */\n\n        insertDatasetFrag: function(frag, nextEl, targets) {\n            var self = this;\n            var insertAt = nextEl ? Array.from(self.dom.parent.children).indexOf(nextEl) : self.targets.length;\n\n            self.dom.parent.insertBefore(frag, nextEl);\n\n            while (targets.length) {\n                self.targets.splice(insertAt, 0, targets.shift());\n\n                insertAt++;\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.CommandSort} sortCommandA\n         * @param   {mixitup.CommandSort} sortCommandB\n         * @return  {boolean}\n         */\n\n        willSort: function(sortCommandA, sortCommandB) {\n            var self    = this,\n                result  = false;\n\n            if (\n                self.config.behavior.liveSort ||\n                sortCommandA.order       === 'random' ||\n                sortCommandA.attribute   !== sortCommandB.attribute ||\n                sortCommandA.order       !== sortCommandB.order ||\n                sortCommandA.collection  !== sortCommandB.collection ||\n                (sortCommandA.next === null && sortCommandB.next) ||\n                (sortCommandA.next && sortCommandB.next === null)\n            ) {\n                result = true;\n            } else if (sortCommandA.next && sortCommandB.next) {\n                result = self.willSort(sortCommandA.next, sortCommandB.next);\n            } else {\n                result = false;\n            }\n\n            return self.callFilters('resultWillSort', result, arguments);\n        },\n\n        /**\n         * A shorthand method for `.filter('all')`. Shows all targets in the container.\n         *\n         * @example\n         *\n         * .show()\n         *\n         * @example <caption>Example: Showing all targets</caption>\n         *\n         * mixer.show()\n         *     .then(function(state) {\n         *         console.log(state.totalShow === state.totalTargets); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        show: function() {\n            var self = this;\n\n            return self.filter('all');\n        },\n\n        /**\n         * A shorthand method for `.filter('none')`. Hides all targets in the container.\n         *\n         * @example\n         *\n         * .hide()\n         *\n         * @example <caption>Example: Hiding all targets</caption>\n         *\n         * mixer.hide()\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 0); // true\n         *         console.log(state.totalHide === state.totalTargets); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        hide: function() {\n            var self = this;\n\n            return self.filter('none');\n        },\n\n        /**\n         * Returns a boolean indicating whether or not a MixItUp operation is\n         * currently in progress.\n         *\n         * @example\n         *\n         * .isMixing()\n         *\n         * @example <caption>Example: Checking the status of a mixer</caption>\n         *\n         * mixer.sort('random', function() {\n         *     console.log(mixer.isMixing()) // false\n         * });\n         *\n         * console.log(mixer.isMixing()) // true\n         *\n         * @public\n         * @instance\n         * @since   2.0.0\n         * @return  {boolean}\n         */\n\n        isMixing: function() {\n            var self = this;\n\n            return self.isBusy;\n        },\n\n        /**\n         * Filters all targets in the container by a provided selector string, or the values `'all'`\n         * or `'none'`. Only targets matching the selector will be shown.\n         *\n         * @example\n         *\n         * .filter(selector [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Filtering targets by a class selector</caption>\n         *\n         * mixer.filter('.category-a')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('.category-a').length); // true\n         *     });\n         *\n         * @example <caption>Example 2: Filtering targets by an attribute selector</caption>\n         *\n         * mixer.filter('[data-category~=\"a\"]')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('[data-category~=\"a\"]').length); // true\n         *     });\n         *\n         * @example <caption>Example 3: Filtering targets by a compound selector</caption>\n         *\n         * // Show only those targets with the classes 'category-a' AND 'category-b'\n         *\n         * mixer.filter('.category-a.category-c')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('.category-a.category-c').length); // true\n         *     });\n         *\n         * @example <caption>Example 4: Filtering via an element collection</caption>\n         *\n         * var collection = Array.from(container.querySelectorAll('.mix'));\n         *\n         * console.log(collection.length); // 34\n         *\n         * // Filter the collection manually using Array.prototype.filter\n         *\n         * var filtered = collection.filter(function(target) {\n         *    return parseInt(target.getAttribute('data-price')) > 10;\n         * });\n         *\n         * console.log(filtered.length); // 22\n         *\n         * // Pass the filtered collection to MixItUp\n         *\n         * mixer.filter(filtered)\n         *    .then(function(state) {\n         *        console.log(state.activeFilter.collection.length === 22); // true\n         *    });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(string|HTMLElement|Array.<HTMLElement>)} selector\n         *      Any valid CSS selector (i.e. `'.category-a'`), or the values `'all'` or `'none'`. The filter method also accepts a reference to single target element or a collection of target elements to show.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        filter: function() {\n            var self        = this,\n                instruction = self.parseFilterArgs(arguments);\n\n            return self.multimix({\n                filter: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Adds an additional selector to the currently active filter selector, concatenating\n         * as per the logic defined in `controls.toggleLogic`.\n         *\n         * @example\n         *\n         * .toggleOn(selector [, animate] [, callback])\n         *\n         * @example <caption>Example: Toggling on a filter selector</caption>\n         *\n         * console.log(mixer.getState().activeFilter.selector); // '.category-a'\n         *\n         * mixer.toggleOn('.category-b')\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector); // '.category-a, .category-b'\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}    selector\n         *      Any valid CSS selector (i.e. `'.category-a'`)\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        toggleOn: function() {\n            var self            = this,\n                instruction     = self.parseFilterArgs(arguments),\n                selector        = instruction.command.selector,\n                toggleSelector  = '';\n\n            self.isToggling = true;\n\n            if (self.toggleArray.indexOf(selector) < 0) {\n                self.toggleArray.push(selector);\n            }\n\n            toggleSelector = self.getToggleSelector();\n\n            return self.multimix({\n                filter: toggleSelector\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Removes a selector from the active filter selector.\n         *\n         * @example\n         *\n         * .toggleOff(selector [, animate] [, callback])\n         *\n         * @example <caption>Example: Toggling off a filter selector</caption>\n         *\n         * console.log(mixer.getState().activeFilter.selector); // '.category-a, .category-b'\n         *\n         * mixer.toggleOff('.category-b')\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector); // '.category-a'\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}    selector\n         *      Any valid CSS selector (i.e. `'.category-a'`)\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        toggleOff: function() {\n            var self            = this,\n                instruction     = self.parseFilterArgs(arguments),\n                selector        = instruction.command.selector,\n                selectorIndex   = self.toggleArray.indexOf(selector),\n                toggleSelector  = '';\n\n            self.isToggling = true;\n\n            if (selectorIndex > -1) {\n                self.toggleArray.splice(selectorIndex, 1);\n            }\n\n            toggleSelector = self.getToggleSelector();\n\n            return self.multimix({\n                filter: toggleSelector\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Sorts all targets in the container according to a provided sort string.\n         *\n         * @example\n         *\n         * .sort(sortString [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Sorting by the default DOM order</caption>\n         *\n         * // Reverse the default order of the targets\n         *\n         * mixer.sort('default:desc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'default'); // true\n         *         console.log(state.activeSort.order === 'desc'); // true\n         *     });\n         *\n         * @example <caption>Example 2: Sorting by a custom data-attribute</caption>\n         *\n         * // Sort the targets by the value of a `data-published-date` attribute\n         *\n         * mixer.sort('published-date:asc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.activeSort.order === 'asc'); // true\n         *     });\n         *\n         * @example <caption>Example 3: Sorting by multiple attributes</caption>\n         *\n         * // Sort the targets by the value of a `data-published-date` attribute, then by `data-title`\n         *\n         * mixer.sort('published-date:desc data-title:asc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.activeSort.order === 'desc'); // true\n         *\n         *         console.log(state.activeSort.next.attribute === 'title'); // true\n         *         console.log(state.activeSort.next.order === 'asc'); // true\n         *     });\n         *\n         * @example <caption>Example 4: Sorting by random</caption>\n         *\n         * mixer.sort('random')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.order === 'random') // true\n         *     });\n         *\n         * @example <caption>Example 5: Sorting via an element collection</caption>\n         *\n         * var collection = Array.from(container.querySelectorAll('.mix'));\n         *\n         * // Swap the position of two elements in the collection:\n         *\n         * var temp = collection[1];\n         *\n         * collection[1] = collection[0];\n         * collection[0] = temp;\n         *\n         * // Pass the sorted collection to MixItUp\n         *\n         * mixer.sort(collection)\n         *     .then(function(state) {\n         *         console.log(state.targets[0] === collection[0]); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(string|Array.<HTMLElement>)}    sortString\n         *      A valid sort string (e.g. `'default'`, `'published-date:asc'`, or `'random'`). The sort method also accepts an array of all target elements in a user-defined order.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        sort: function() {\n            var self        = this,\n                instruction = self.parseSortArgs(arguments);\n\n            return self.multimix({\n                sort: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Changes the layout of the container by adding, removing or updating a\n         * layout-specific class name. If `animation.animateResizetargets` is\n         * enabled, MixItUp will attempt to gracefully animate the width, height,\n         * and position of targets between layout states.\n         *\n         * @example\n         *\n         * .changeLayout(containerClassName [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Adding a new class name to the container</caption>\n         *\n         * mixer.changeLayout('container-list')\n         *      .then(function(state) {\n         *          console.log(state.activeContainerClass === 'container-list'); // true\n         *      });\n         *\n         * @example <caption>Example 2: Removing a previously added class name from the container</caption>\n         *\n         * mixer.changeLayout('')\n         *      .then(function(state) {\n         *          console.log(state.activeContainerClass === ''); // true\n         *      });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    containerClassName\n         *      A layout-specific class name to add to the container.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        changeLayout: function() {\n            var self        = this,\n                instruction = self.parseChangeLayoutArgs(arguments);\n\n            return self.multimix({\n                changeLayout: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Updates the contents and order of the container to reflect the provided dataset,\n         * if the dataset API is in use.\n         *\n         * The dataset API is designed for use in API-driven JavaScript applications, and\n         * can be used instead of DOM-based methods such as `.filter()`, `.sort()`,\n         * `.insert()`, etc. When used, insertion, removal, sorting and pagination can be\n         * achieved purely via changes to your data model, without the uglyness of having\n         * to interact with or query the DOM directly.\n         *\n         * @example\n         *\n         * .dataset(dataset [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Rendering a dataset</caption>\n         *\n         * var myDataset = [\n         *     {id: 1, ...},\n         *     {id: 2, ...},\n         *     {id: 3, ...}\n         * ];\n         *\n         * mixer.dataset(myDataset)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 3); // true\n         *     });\n         *\n         * @example <caption>Example 2: Sorting a dataset</caption>\n         *\n         * // Create a new dataset in reverse order\n         *\n         * var newDataset = myDataset.slice().reverse();\n         *\n         * mixer.dataset(newDataset)\n         *     .then(function(state) {\n         *         console.log(state.activeDataset[0] === myDataset[2]); // true\n         *     });\n         *\n         * @example <caption>Example 3: Removing an item from the dataset</caption>\n         *\n         * console.log(myDataset.length); // 3\n         *\n         * // Create a new dataset with the last item removed.\n         *\n         * var newDataset = myDataset.slice().pop();\n         *\n         * mixer.dataset(newDataset)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 2); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {Array.<object>}    dataset\n         *      An array of objects, each one representing the underlying data model of a target to be rendered.\n         * @param       {boolean}           [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}          [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        dataset: function() {\n            var self        = this,\n                instruction = self.parseDatasetArgs(arguments),\n                operation   = null,\n                queueItem   = null,\n                animate     = false;\n\n            self.callActions('beforeDataset', arguments);\n\n            if (!self.isBusy) {\n                if (instruction.callback) self.userCallback = instruction.callback;\n\n                animate = (instruction.animate ^ self.config.animation.enable) ? instruction.animate : self.config.animation.enable;\n\n                operation = self.getDataOperation(instruction.command.dataset);\n\n                return self.goMix(animate, operation);\n            } else {\n                queueItem = new mixitup.QueueItem();\n\n                queueItem.args          = arguments;\n                queueItem.instruction   = instruction;\n\n                return self.queueMix(queueItem);\n            }\n        },\n\n        /**\n         * Performs simultaneous `filter`, `sort`, `insert`, `remove` and `changeLayout`\n         * operations as requested.\n         *\n         * @example\n         *\n         * .multimix(multimixCommand [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Performing simultaneous filtering and sorting</caption>\n         *\n         * mixer.multimix({\n         *     filter: '.category-b',\n         *     sort: 'published-date:desc'\n         * })\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector === '.category-b'); // true\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *     });\n         *\n         * @example <caption>Example 2: Performing simultaneous sorting, insertion, and removal</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 6\n         *\n         * // NB: When inserting via `multimix()`, an object should be provided as the value\n         * // for the `insert` portion of the command, allowing for a collection of elements\n         * // and an insertion index to be specified.\n         *\n         * mixer.multimix({\n         *     sort: 'published-date:desc', // Sort the container, including any new elements\n         *     insert: {\n         *         collection: [newElementReferenceA, newElementReferenceB], // Add 2 new elements at index 5\n         *         index: 5\n         *     },\n         *     remove: existingElementReference // Remove 1 existing element\n         * })\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.totalShow === 7); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {object}    multimixCommand\n         *      An object containing one or more things to do\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        multimix: function() {\n            var self        = this,\n                operation   = null,\n                animate     = false,\n                queueItem   = null,\n                instruction = self.parseMultimixArgs(arguments);\n\n            self.callActions('beforeMultimix', arguments);\n\n            if (!self.isBusy) {\n                operation = self.getOperation(instruction.command);\n\n                if (self.config.controls.enable) {\n                    // Update controls for API calls\n\n                    if (instruction.command.filter && !self.isToggling) {\n                        // As we are not toggling, reset the toggle array\n                        // so new filter overrides existing toggles\n\n                        self.toggleArray.length = 0;\n                        self.buildToggleArray(operation.command);\n                    }\n\n                    if (self.queue.length < 1) {\n                        self.updateControls(operation.command);\n                    }\n                }\n\n                if (instruction.callback) self.userCallback = instruction.callback;\n\n                // Always allow the instruction to override the instance setting\n\n                animate = (instruction.animate ^ self.config.animation.enable) ?\n                    instruction.animate :\n                    self.config.animation.enable;\n\n                self.callFilters('operationMultimix', operation, arguments);\n\n                return self.goMix(animate, operation);\n            } else {\n                queueItem = new mixitup.QueueItem();\n\n                queueItem.args           = arguments;\n                queueItem.instruction    = instruction;\n                queueItem.triggerElement = self.lastClicked;\n                queueItem.isToggling     = self.isToggling;\n\n                return self.queueMix(queueItem);\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}            multimixCommand\n         * @param   {boolean}           [isPreFetch]\n         *      An optional boolean indicating that the operation is being pre-fetched for execution at a later time.\n         * @return  {Operation|null}\n         */\n\n        getOperation: function(multimixCommand) {\n            var self                = this,\n                sortCommand         = multimixCommand.sort,\n                filterCommand       = multimixCommand.filter,\n                changeLayoutCommand = multimixCommand.changeLayout,\n                removeCommand       = multimixCommand.remove,\n                insertCommand       = multimixCommand.insert,\n                operation           = new mixitup.Operation();\n\n            operation = self.callFilters('operationUnmappedGetOperation', operation, arguments);\n\n            operation.id                = h.randomHex();\n            operation.command           = multimixCommand;\n            operation.startState        = self.state;\n            operation.triggerElement    = self.lastClicked;\n\n            if (self.isBusy) {\n                if (self.config.debug.showWarnings) {\n                    console.warn(mixitup.messages.warningGetOperationInstanceBusy());\n                }\n\n                return null;\n            }\n\n            if (insertCommand) {\n                self.insertTargets(insertCommand, operation);\n            }\n\n            if (removeCommand) {\n                operation.toRemove = removeCommand.targets;\n            }\n\n            operation.startSort = operation.newSort = operation.startState.activeSort;\n            operation.startOrder = operation.newOrder = self.targets;\n\n            if (sortCommand) {\n                operation.startSort = operation.startState.activeSort;\n                operation.newSort   = sortCommand;\n\n                operation.willSort = self.willSort(sortCommand, operation.startState.activeSort);\n\n                if (operation.willSort) {\n                    self.sortOperation(operation);\n                }\n            }\n\n            operation.startFilter = operation.startState.activeFilter;\n\n            if (filterCommand) {\n                operation.newFilter = filterCommand;\n            } else {\n                operation.newFilter = h.extend(new mixitup.CommandFilter(), operation.startFilter);\n            }\n\n            if (operation.newFilter.selector === 'all') {\n                operation.newFilter.selector = self.config.selectors.target;\n            } else if (operation.newFilter.selector === 'none') {\n                operation.newFilter.selector = '';\n            }\n\n            self.filterOperation(operation);\n\n            operation.startContainerClassName = operation.startState.activeContainerClassName;\n\n            if (changeLayoutCommand) {\n                operation.newContainerClassName = changeLayoutCommand.containerClassName;\n\n                if (operation.newContainerClassName !== operation.startContainerClassName) {\n                    operation.willChangeLayout = true;\n                }\n            } else {\n                operation.newContainerClassName = operation.startContainerClassName;\n            }\n\n            if (self.config.animation.enable) {\n                // Populate the operation's position data\n\n                self.getStartMixData(operation);\n                self.setInter(operation);\n\n                operation.docState = h.getDocumentState(self.dom.document);\n\n                self.getInterMixData(operation);\n                self.setFinal(operation);\n                self.getFinalMixData(operation);\n\n                self.parseEffects();\n\n                operation.hasEffect = self.hasEffect();\n\n                self.getTweenData(operation);\n            }\n\n            if (operation.willSort) {\n                self.targets = operation.newOrder;\n            }\n\n            operation.newState = self.buildState(operation);\n\n            return self.callFilters('operationMappedGetOperation', operation, arguments);\n        },\n\n        /**\n         * Renders a previously created operation at a specific point in its path, as\n         * determined by a multiplier between 0 and 1.\n         *\n         * @example\n         * .tween(operation, multiplier)\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Operation}     operation\n         *      An operation object created via the `getOperation` method\n         *\n         * @param   {Float}                 multiplier\n         *      Any number between 0 and 1 representing the percentage complete of the operation\n         * @return  {void}\n         */\n\n        tween: function(operation, multiplier) {\n            var target          = null,\n                posData         = null,\n                toHideIndex     = -1,\n                i               = -1;\n\n            multiplier = Math.min(multiplier, 1);\n            multiplier = Math.max(multiplier, 0);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                posData = operation.showPosData[i];\n\n                target.applyTween(posData, multiplier);\n            }\n\n            for (i = 0; target = operation.hide[i]; i++) {\n                if (target.isShown) {\n                    target.hide();\n                }\n\n                if ((toHideIndex = operation.toHide.indexOf(target)) > -1) {\n                    posData = operation.toHidePosData[toHideIndex];\n\n                    if (!target.isShown) {\n                        target.show();\n                    }\n\n                    target.applyTween(posData, multiplier);\n                }\n            }\n        },\n\n        /**\n         * Inserts one or more new target elements into the container at a specified\n         * index.\n         *\n         * To be indexed as targets, new elements must match the `selectors.target`\n         * selector (`'.mix'` by default).\n         *\n         * @example\n         *\n         * .insert(newElements [, index] [, animate], [, callback])\n         *\n         * @example <caption>Example 1: Inserting a single element via reference</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 0\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insert(newElement)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 1); // true\n         *     });\n         *\n         * @example <caption>Example 2: Inserting a single element via HTML string</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 1\n         *\n         * // Create a new element via reference\n         *\n         * var newElementHtml = '&lt;div class=\"mix\"&gt;&lt;/div&gt;';\n         *\n         * // Create and insert the new element at index 1\n         *\n         * mixer.insert(newElementHtml, 1)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 2); // true\n         *         console.log(state.show[1].outerHTML === newElementHtml); // true\n         *     });\n         *\n         * @example <caption>Example 3: Inserting multiple elements via reference</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 2\n         *\n         * // Create an array of new elements to insert.\n         *\n         * var newElement1 = document.createElement('div');\n         * var newElement2 = document.createElement('div');\n         *\n         * newElement1.classList.add('mix');\n         * newElement2.classList.add('mix');\n         *\n         * var newElementsCollection = [newElement1, newElement2];\n         *\n         * // Insert the new elements starting at index 1\n         *\n         * mixer.insert(newElementsCollection, 1)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 4); // true\n         *         console.log(state.show[1] === newElement1); // true\n         *         console.log(state.show[2] === newElement2); // true\n         *     });\n         *\n         * @example <caption>Example 4: Inserting a jQuery collection object containing one or more elements</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 4\n         *\n         * var $newElement = $('&lt;div class=\"mix\"&gt;&lt;/div&gt;');\n         *\n         * // Insert the new elements starting at index 3\n         *\n         * mixer.insert($newElement, 3)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 5); // true\n         *         console.log(state.show[3] === $newElement[0]); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {number}    index=0\n         *      The index at which to insert the new element(s). `0` by default.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insert: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.multimix({\n                insert: args.command\n            }, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements before a provided reference element.\n         *\n         * @example\n         *\n         * .insertBefore(newElements, referenceElement [, animate] [, callback])\n         *\n         * @example <caption>Example: Inserting a new element before a reference element</caption>\n         *\n         * // An existing reference element is chosen at index 2\n         *\n         * var referenceElement = mixer.getState().show[2];\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insertBefore(newElement, referenceElement)\n         *     .then(function(state) {\n         *         // The new element is inserted into the container at index 2, before the reference element\n         *\n         *         console.log(state.show[2] === newElement); // true\n         *\n         *         // The reference element is now at index 3\n         *\n         *         console.log(state.show[3] === referenceElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {HTMLElement}    referenceElement\n         *      A reference to an existing element in the container to insert new elements before.\n         *@param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insertBefore: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(args.command.collection, 'before', args.command.sibling, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements after a provided reference element.\n         *\n         * @example\n         *\n         * .insertAfter(newElements, referenceElement [, animate] [, callback])\n         *\n         * @example <caption>Example: Inserting a new element after a reference element</caption>\n         *\n         * // An existing reference element is chosen at index 2\n         *\n         * var referenceElement = mixer.getState().show[2];\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insertAfter(newElement, referenceElement)\n         *     .then(function(state) {\n         *         // The new element is inserted into the container at index 3, after the reference element\n         *\n         *         console.log(state.show[3] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {HTMLElement}    referenceElement\n         *      A reference to an existing element in the container to insert new elements after.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insertAfter: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(args.command.collection, 'after', args.command.sibling, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements into the container before all existing targets.\n         *\n         * @example\n         *\n         * .prepend(newElements [,animate] [,callback])\n         *\n         * @example <caption>Example: Prepending a new element</caption>\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * // Insert the element into the container\n         *\n         * mixer.prepend(newElement)\n         *     .then(function(state) {\n         *         console.log(state.show[0] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        prepend: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(0, args.command.collection, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements into the container after all existing targets.\n         *\n         * @example\n         *\n         * .append(newElements [,animate] [,callback])\n         *\n         * @example <caption>Example: Appending a new element</caption>\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * // Insert the element into the container\n         *\n         * mixer.append(newElement)\n         *     .then(function(state) {\n         *         console.log(state.show[state.show.length - 1] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        append: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(self.state.totalTargets, args.command.collection, args.animate, args.callback);\n        },\n\n        /**\n         * Removes one or more existing target elements from the container.\n         *\n         * @example\n         *\n         * .remove(elements [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Removing an element by reference</caption>\n         *\n         * var elementToRemove = containerEl.firstElementChild;\n         *\n         * mixer.remove(elementToRemove)\n         *      .then(function(state) {\n         *          console.log(state.targets.indexOf(elementToRemove) === -1); // true\n         *      });\n         *\n         * @example <caption>Example 2: Removing a collection of elements by reference</caption>\n         *\n         * var elementsToRemove = containerEl.querySelectorAll('.category-a');\n         *\n         * console.log(elementsToRemove.length) // 3\n         *\n         * mixer.remove(elementsToRemove)\n         *      .then(function() {\n         *          console.log(containerEl.querySelectorAll('.category-a').length); // 0\n         *      });\n         *\n         * @example <caption>Example 3: Removing one or more elements by selector</caption>\n         *\n         * mixer.remove('.category-a')\n         *      .then(function() {\n         *          console.log(containerEl.querySelectorAll('.category-a').length); // 0\n         *      });\n         *\n         * @example <caption>Example 4: Removing an element by index</caption>\n         *\n         * console.log(mixer.getState.totalShow); // 4\n         *\n         * // Remove the element at index 3\n         *\n         * mixer.remove(3)\n         *      .then(function(state) {\n         *          console.log(state.totalShow); // 3\n         *          console.log(state.show[3]); // undefined\n         *      });\n         *\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string|number)}    elements\n         *      A reference to a single element to remove, an array-like collection of elements, a selector string, or the index of an element to remove.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        remove: function() {\n            var self = this,\n                args = self.parseRemoveArgs(arguments);\n\n            return self.multimix({\n                remove: args.command\n            }, args.animate, args.callback);\n        },\n\n        /**\n         * Retrieves the the value of any property or sub-object within the current\n         * vender configuration, or the whole configuration object.\n         *\n         * @example\n         *\n         * .getConfig([stringKey])\n         *\n         * @example <caption>Example 1: retrieve the entire configuration object</caption>\n         *\n         * var config = mixer.getConfig(); // Config { ... }\n         *\n         * @example <caption>Example 2: retrieve a named sub-object of configuration object</caption>\n         *\n         * var animation = mixer.getConfig('animation'); // ConfigAnimation { ... }\n         *\n         * @example <caption>Example 3: retrieve a value of configuration object via a dot-notation string key</caption>\n         *\n         * var effects = mixer.getConfig('animation.effects'); // 'fade scale'\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    [stringKey]    A \"dot-notation\" string key\n         * @return      {*}\n         */\n\n        getConfig: function(stringKey) {\n            var self    = this,\n                value   = null;\n\n            if (!stringKey) {\n                value = self.config;\n            } else {\n                value = h.getProperty(self.config, stringKey);\n            }\n\n            return self.callFilters('valueGetConfig', value, arguments);\n        },\n\n        /**\n         * Updates the configuration of the mixer, after it has been instantiated.\n         *\n         * See the Configuration Object documentation for a full list of avilable\n         * configuration options.\n         *\n         * @example\n         *\n         * .configure(config)\n         *\n         * @example <caption>Example 1: Updating animation options</caption>\n         *\n         * mixer.configure({\n         *     animation: {\n         *         effects: 'fade translateX(-100%)',\n         *         duration: 300\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Removing a callback after it has been set</caption>\n         *\n         * var mixer;\n         *\n         * function handleMixEndOnce() {\n         *     // Do something ..\n         *\n         *     // Then nullify the callback\n         *\n         *     mixer.configure({\n         *         callbacks: {\n         *             onMixEnd: null\n         *         }\n         *     });\n         * };\n         *\n         * // Instantiate a mixer with a callback defined\n         *\n         * mixer = vender(containerEl, {\n         *     callbacks: {\n         *         onMixEnd: handleMixEndOnce\n         *     }\n         * });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {object}    config\n         *      An object containing one of more configuration options.\n         * @return      {void}\n         */\n\n        configure: function(config) {\n            var self = this;\n\n            self.callActions('beforeConfigure', arguments);\n\n            h.extend(self.config, config, true, true);\n\n            self.callActions('afterConfigure', arguments);\n        },\n\n        /**\n         * Returns an object containing information about the current state of the\n         * mixer. See the State Object documentation for more information.\n         *\n         * NB: State objects are immutable and should therefore be regenerated\n         * after any operation.\n         *\n         * @example\n         *\n         * .getState();\n         *\n         * @example <caption>Example: Retrieving a state object</caption>\n         *\n         * var state = mixer.getState();\n         *\n         * console.log(state.totalShow + 'targets are currently shown');\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @return      {mixitup.State} An object reflecting the current state of the mixer.\n         */\n\n        getState: function() {\n            var self    = this,\n                state   = null;\n\n            state = new mixitup.State();\n\n            h.extend(state, self.state);\n\n            h.freeze(state);\n\n            return self.callFilters('stateGetState', state, arguments);\n        },\n\n        /**\n         * Forces the re-indexing all targets within the container.\n         *\n         * This should only be used if some other piece of code in your application\n         * has manipulated the contents of your container, which should be avoided.\n         *\n         * If you need to add or remove target elements from the container, use\n         * the built-in `.insert()` or `.remove()` methods, and MixItUp will keep\n         * itself up to date.\n         *\n         * @example\n         *\n         * .forceRefresh()\n         *\n         * @example <caption>Example: Force refreshing the mixer after external DOM manipulation</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 3\n         *\n         * // An element is removed from the container via some external DOM manipulation code:\n         *\n         * containerEl.removeChild(containerEl.firstElementChild);\n         *\n         * // The mixer does not know that the number of targets has changed:\n         *\n         * console.log(mixer.getState().totalShow); // 3\n         *\n         * mixer.forceRefresh();\n         *\n         * // After forceRefresh, the mixer is in sync again:\n         *\n         * console.log(mixer.getState().totalShow); // 2\n         *\n         * @public\n         * @instance\n         * @since 2.1.2\n         * @return {void}\n         */\n\n        forceRefresh: function() {\n            var self = this;\n\n            self.indexTargets();\n        },\n\n        /**\n         * Forces the re-rendering of all targets when using the Dataset API.\n         *\n         * By default, targets are only re-rendered when `data.dirtyCheck` is\n         * enabled, and an item's data has changed when `dataset()` is called.\n         *\n         * The `forceRender()` method allows for the re-rendering of all targets\n         * in response to some arbitrary event, such as the changing of the target\n         * render function.\n         *\n         * Targets are rendered against their existing data.\n         *\n         * @example\n         *\n         * .forceRender()\n         *\n         * @example <caption>Example: Force render targets after changing the target render function</caption>\n         *\n         * console.log(container.innerHTML); // ... &lt;span class=\"mix\"&gt;Foo&lt;/span&gt; ...\n         *\n         * mixer.configure({\n         *     render: {\n         *         target: (item) => `&lt;a href=\"/${item.slug}/\" class=\"mix\"&gt;${item.title}&lt;/a&gt;`\n         *     }\n         * });\n         *\n         * mixer.forceRender();\n         *\n         * console.log(container.innerHTML); // ... &lt;a href=\"/foo/\" class=\"mix\"&gt;Foo&lt;/a&gt; ...\n         *\n         * @public\n         * @instance\n         * @since 3.2.1\n         * @return {void}\n         */\n\n        forceRender: function() {\n            var self    = this,\n                target  = null,\n                el      = null,\n                id      = '';\n\n            for (id in self.cache) {\n                target = self.cache[id];\n\n                el = target.render(target.data);\n\n                if (el !== target.dom.el) {\n                    // Update target element reference\n\n                    if (target.isInDom) {\n                        target.unbindEvents();\n\n                        self.dom.parent.replaceChild(el, target.dom.el);\n                    }\n\n                    if (!target.isShown) {\n                        el.style.display = 'none';\n                    }\n\n                    target.dom.el = el;\n\n                    if (target.isInDom) {\n                        target.bindEvents();\n                    }\n                }\n            }\n\n            self.state = self.buildState(self.lastOperation);\n        },\n\n        /**\n         * Removes vender functionality from the container, unbinds all control\n         * event handlers, and deletes the mixer instance from MixItUp's internal\n         * cache.\n         *\n         * This should be performed whenever a mixer's container is removed from\n         * the DOM, such as during a page change in a single page application,\n         * or React's `componentWillUnmount()`.\n         *\n         * @example\n         *\n         * .destroy([cleanUp])\n         *\n         * @example <caption>Example: Destroying the mixer before removing its container element</caption>\n         *\n         * mixer.destroy();\n         *\n         * containerEl.parentElement.removeChild(containerEl);\n         *\n         * @public\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   [cleanUp=false]\n         *     An optional boolean dictating whether or not to clean up any inline `display: none;` styling applied to hidden targets.\n         * @return  {void}\n         */\n\n        destroy: function(cleanUp) {\n            var self    = this,\n                control = null,\n                target  = null,\n                i       = 0;\n\n            self.callActions('beforeDestroy', arguments);\n\n            for (i = 0; control = self.controls[i]; i++) {\n                control.removeBinding(self);\n            }\n\n            for (i = 0; target = self.targets[i]; i++) {\n                if (cleanUp) {\n                    target.show();\n                }\n\n                target.unbindEvents();\n            }\n\n            if (self.dom.container.id.match(/^MixItUp/)) {\n                self.dom.container.removeAttribute('id');\n            }\n\n            delete mixitup.instances[self.id];\n\n            self.callActions('afterDestroy', arguments);\n        }\n    });\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.IMoveData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.posIn          = null;\n        this.posOut         = null;\n        this.operation      = null;\n        this.callback       = null;\n        this.statusChange   = '';\n        this.duration       = -1;\n        this.staggerIndex   = -1;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.IMoveData);\n\n    mixitup.IMoveData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.IMoveData.prototype.constructor = mixitup.IMoveData;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TargetDom = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.el = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TargetDom);\n\n    mixitup.TargetDom.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.TargetDom.prototype.constructor = mixitup.TargetDom;\n\n    /**\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Target = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.id         = '';\n        this.sortString = '';\n        this.mixer      = null;\n        this.callback   = null;\n        this.isShown    = false;\n        this.isBound    = false;\n        this.isExcluded = false;\n        this.isInDom    = false;\n        this.handler    = null;\n        this.operation  = null;\n        this.data       = null;\n        this.dom        = new mixitup.TargetDom();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Target);\n\n    mixitup.Target.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Target.prototype, {\n        constructor: mixitup.Target,\n\n        /**\n         * Initialises a newly instantiated Target.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {(Element|null)}    el\n         * @param   {object}            mixer\n         * @param   {object}            [data]\n         * @return  {void}\n         */\n\n        init: function(el, mixer, data) {\n            var self = this,\n                id   = '';\n\n            self.callActions('beforeInit', arguments);\n\n            self.mixer = mixer;\n\n            if (!el) {\n                // If no element is provided, render it\n\n                el = self.render(data);\n            }\n\n            self.cacheDom(el);\n\n            self.bindEvents();\n\n            if (self.dom.el.style.display !== 'none') {\n                self.isShown = true;\n            }\n\n            if (data && mixer.config.data.uidKey) {\n                if (typeof (id = data[mixer.config.data.uidKey]) === 'undefined' || id.toString().length < 1) {\n                    throw new TypeError(mixitup.messages.errorDatasetInvalidUidKey({\n                        uidKey: mixer.config.data.uidKey\n                    }));\n                }\n\n                self.id     = id;\n                self.data   = data;\n\n                mixer.cache[id] = self;\n            }\n\n            self.callActions('afterInit', arguments);\n        },\n\n        /**\n         * Renders the target element using a user-defined renderer function.\n         *\n         * @private\n         * @instance\n         * @since   3.1.4\n         * @param   {object} data\n         * @return  {void}\n         */\n\n        render: function(data) {\n            var self    = this,\n                render  = null,\n                el      = null,\n                temp    = null,\n                output  = '';\n\n            self.callActions('beforeRender', arguments);\n\n            render = self.callFilters('renderRender', self.mixer.config.render.target, arguments);\n\n            if (typeof render !== 'function') {\n                throw new TypeError(mixitup.messages.errorDatasetRendererNotSet());\n            }\n\n            output = render(data);\n\n            if (output && typeof output === 'object' && h.isElement(output)) {\n                el = output;\n            } else if (typeof output === 'string') {\n                temp = document.createElement('div');\n                temp.innerHTML = output;\n\n                el = temp.firstElementChild;\n            }\n\n            return self.callFilters('elRender', el, arguments);\n        },\n\n        /**\n         * Caches references of DOM elements neccessary for the target's functionality.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Element} el\n         * @return  {void}\n         */\n\n        cacheDom: function(el) {\n            var self = this;\n\n            self.callActions('beforeCacheDom', arguments);\n\n            self.dom.el = el;\n\n            self.callActions('afterCacheDom', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}    attributeName\n         * @return  {void}\n         */\n\n        getSortString: function(attributeName) {\n            var self    = this,\n                value   = self.dom.el.getAttribute('data-' + attributeName) || '';\n\n            self.callActions('beforeGetSortString', arguments);\n\n            value = isNaN(value * 1) ?\n                value.toLowerCase() :\n                value * 1;\n\n            self.sortString = value;\n\n            self.callActions('afterGetSortString', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        show: function() {\n            var self = this;\n\n            self.callActions('beforeShow', arguments);\n\n            if (!self.isShown) {\n                self.dom.el.style.display = '';\n\n                self.isShown = true;\n            }\n\n            self.callActions('afterShow', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        hide: function() {\n            var self = this;\n\n            self.callActions('beforeHide', arguments);\n\n            if (self.isShown) {\n                self.dom.el.style.display = 'none';\n\n                self.isShown = false;\n            }\n\n            self.callActions('afterHide', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        move: function(moveData) {\n            var self = this;\n\n            self.callActions('beforeMove', arguments);\n\n            if (!self.isExcluded) {\n                self.mixer.targetsMoved++;\n            }\n\n            self.applyStylesIn(moveData);\n\n            requestAnimationFrame(function() {\n                self.applyStylesOut(moveData);\n            });\n\n            self.callActions('afterMove', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}    posData\n         * @param   {number}    multiplier\n         * @return  {void}\n         */\n\n        applyTween: function(posData, multiplier) {\n            var self                    = this,\n                propertyName            = '',\n                tweenData               = null,\n                posIn                   = posData.posIn,\n                currentTransformValues  = [],\n                currentValues           = new mixitup.StyleData(),\n                i                       = -1;\n\n            self.callActions('beforeApplyTween', arguments);\n\n            currentValues.x     = posIn.x;\n            currentValues.y     = posIn.y;\n\n            if (multiplier === 0) {\n                self.hide();\n            } else if (!self.isShown) {\n                self.show();\n            }\n\n            for (i = 0; propertyName = mixitup.features.TWEENABLE[i]; i++) {\n                tweenData = posData.tweenData[propertyName];\n\n                if (propertyName === 'x') {\n                    if (!tweenData) continue;\n\n                    currentValues.x = posIn.x + (tweenData * multiplier);\n                } else if (propertyName === 'y') {\n                    if (!tweenData) continue;\n\n                    currentValues.y = posIn.y + (tweenData * multiplier);\n                } else if (tweenData instanceof mixitup.TransformData) {\n                    if (!tweenData.value) continue;\n\n                    currentValues[propertyName].value =\n                        posIn[propertyName].value + (tweenData.value * multiplier);\n\n                    currentValues[propertyName].unit  = tweenData.unit;\n\n                    currentTransformValues.push(\n                        propertyName + '(' + currentValues[propertyName].value + tweenData.unit + ')'\n                    );\n                } else {\n                    if (!tweenData) continue;\n\n                    currentValues[propertyName] = posIn[propertyName] + (tweenData * multiplier);\n\n                    self.dom.el.style[propertyName] = currentValues[propertyName];\n                }\n            }\n\n            if (currentValues.x || currentValues.y) {\n                currentTransformValues.unshift('translate(' + currentValues.x + 'px, ' + currentValues.y + 'px)');\n            }\n\n            if (currentTransformValues.length) {\n                self.dom.el.style[mixitup.features.transformProp] = currentTransformValues.join(' ');\n            }\n\n            self.callActions('afterApplyTween', arguments);\n        },\n\n        /**\n         * Applies the initial styling to a target element before any transition\n         * is applied.\n         *\n         * @private\n         * @instance\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        applyStylesIn: function(moveData) {\n            var self            = this,\n                posIn           = moveData.posIn,\n                isFading        = self.mixer.effectsIn.opacity !== 1,\n                transformValues = [];\n\n            self.callActions('beforeApplyStylesIn', arguments);\n\n            transformValues.push('translate(' + posIn.x + 'px, ' + posIn.y + 'px)');\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                if (moveData.statusChange !== 'show') {\n                    // Don't apply posIn width or height or showing, as will be 0\n\n                    self.dom.el.style.width  = posIn.width + 'px';\n                    self.dom.el.style.height = posIn.height + 'px';\n                }\n\n                self.dom.el.style.marginRight  = posIn.marginRight + 'px';\n                self.dom.el.style.marginBottom = posIn.marginBottom + 'px';\n            }\n\n            isFading && (self.dom.el.style.opacity = posIn.opacity);\n\n            if (moveData.statusChange === 'show') {\n                transformValues = transformValues.concat(self.mixer.transformIn);\n            }\n\n            self.dom.el.style[mixitup.features.transformProp] = transformValues.join(' ');\n\n            self.callActions('afterApplyStylesIn', arguments);\n        },\n\n        /**\n         * Applies a transition followed by the final styles for the element to\n         * transition towards.\n         *\n         * @private\n         * @instance\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        applyStylesOut: function(moveData) {\n            var self            = this,\n                transitionRules = [],\n                transformValues = [],\n                isResizing      = self.mixer.config.animation.animateResizeTargets,\n                isFading        = typeof self.mixer.effectsIn.opacity !== 'undefined';\n\n            self.callActions('beforeApplyStylesOut', arguments);\n\n            // Build the transition rules\n\n            transitionRules.push(self.writeTransitionRule(\n                mixitup.features.transformRule,\n                moveData.staggerIndex\n            ));\n\n            if (moveData.statusChange !== 'none') {\n                transitionRules.push(self.writeTransitionRule(\n                    'opacity',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n            }\n\n            if (isResizing) {\n                transitionRules.push(self.writeTransitionRule(\n                    'width',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n\n                transitionRules.push(self.writeTransitionRule(\n                    'height',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n\n                transitionRules.push(self.writeTransitionRule(\n                    'margin',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n            }\n\n            // If no callback was provided, the element will\n            // not transition in any way so tag it as \"immovable\"\n\n            if (!moveData.callback) {\n                self.mixer.targetsImmovable++;\n\n                if (self.mixer.targetsMoved === self.mixer.targetsImmovable) {\n                    // If the total targets moved is equal to the\n                    // number of immovable targets, the operation\n                    // should be considered finished\n\n                    self.mixer.cleanUp(moveData.operation);\n                }\n\n                return;\n            }\n\n            // If the target will transition in some fasion,\n            // assign a callback function\n\n            self.operation = moveData.operation;\n            self.callback = moveData.callback;\n\n            // As long as the target is not excluded, increment\n            // the total number of targets bound\n\n            !self.isExcluded && self.mixer.targetsBound++;\n\n            // Tag the target as bound to differentiate from transitionEnd\n            // events that may come from stylesheet driven effects\n\n            self.isBound = true;\n\n            // Apply the transition\n\n            self.applyTransition(transitionRules);\n\n            // Apply width, height and margin negation\n\n            if (isResizing && moveData.posOut.width > 0 && moveData.posOut.height > 0) {\n                self.dom.el.style.width        = moveData.posOut.width + 'px';\n                self.dom.el.style.height       = moveData.posOut.height + 'px';\n                self.dom.el.style.marginRight  = moveData.posOut.marginRight + 'px';\n                self.dom.el.style.marginBottom = moveData.posOut.marginBottom + 'px';\n            }\n\n            if (!self.mixer.config.animation.nudge && moveData.statusChange === 'hide') {\n                // If we're not nudging, the translation should be\n                // applied before any other transforms to prevent\n                // lateral movement\n\n                transformValues.push('translate(' + moveData.posOut.x + 'px, ' + moveData.posOut.y + 'px)');\n            }\n\n            // Apply fade\n\n            switch (moveData.statusChange) {\n                case 'hide':\n                    isFading && (self.dom.el.style.opacity = self.mixer.effectsOut.opacity);\n\n                    transformValues = transformValues.concat(self.mixer.transformOut);\n\n                    break;\n                case 'show':\n                    isFading && (self.dom.el.style.opacity = 1);\n            }\n\n            if (\n                self.mixer.config.animation.nudge ||\n                (!self.mixer.config.animation.nudge && moveData.statusChange !== 'hide')\n            ) {\n                // Opposite of above - apply translate after\n                // other transform\n\n                transformValues.push('translate(' + moveData.posOut.x + 'px, ' + moveData.posOut.y + 'px)');\n            }\n\n            // Apply transforms\n\n            self.dom.el.style[mixitup.features.transformProp] = transformValues.join(' ');\n\n            self.callActions('afterApplyStylesOut', arguments);\n        },\n\n        /**\n         * Combines the name of a CSS property with the appropriate duration and delay\n         * values to created a valid transition rule.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}    property\n         * @param   {number}    staggerIndex\n         * @param   {number}    duration\n         * @return  {string}\n         */\n\n        writeTransitionRule: function(property, staggerIndex, duration) {\n            var self  = this,\n                delay = self.getDelay(staggerIndex),\n                rule  = '';\n\n            rule = property + ' ' +\n                (duration > 0 ? duration : self.mixer.config.animation.duration) + 'ms ' +\n                delay + 'ms ' +\n                (property === 'opacity' ? 'linear' : self.mixer.config.animation.easing);\n\n            return self.callFilters('ruleWriteTransitionRule', rule, arguments);\n        },\n\n        /**\n         * Calculates the transition delay for each target element based on its index, if\n         * staggering is applied. If defined, A custom `animation.staggerSeqeuence`\n         * function can be used to manipulate the order of indices to produce custom\n         * stagger effects (e.g. for use in a grid with irregular row lengths).\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {number}    index\n         * @return  {number}\n         */\n\n        getDelay: function(index) {\n            var self    = this,\n                delay   = -1;\n\n            if (typeof self.mixer.config.animation.staggerSequence === 'function') {\n                index = self.mixer.config.animation.staggerSequence.call(self, index, self.state);\n            }\n\n            delay = !!self.mixer.staggerDuration ? index * self.mixer.staggerDuration : 0;\n\n            return self.callFilters('delayGetDelay', delay, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string[]}  rules\n         * @return  {void}\n         */\n\n        applyTransition: function(rules) {\n            var self                = this,\n                transitionString    = rules.join(', ');\n\n            self.callActions('beforeApplyTransition', arguments);\n\n            self.dom.el.style[mixitup.features.transitionProp] = transitionString;\n\n            self.callActions('afterApplyTransition', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Event} e\n         * @return  {void}\n         */\n\n        handleTransitionEnd: function(e) {\n            var self        = this,\n                propName    = e.propertyName,\n                canResize   = self.mixer.config.animation.animateResizeTargets;\n\n            self.callActions('beforeHandleTransitionEnd', arguments);\n\n            if (\n                self.isBound &&\n                e.target.matches(self.mixer.config.selectors.target) &&\n                (\n                    propName.indexOf('transform') > -1 ||\n                    propName.indexOf('opacity') > -1 ||\n                    canResize && propName.indexOf('height') > -1 ||\n                    canResize && propName.indexOf('width') > -1 ||\n                    canResize && propName.indexOf('margin') > -1\n                )\n            ) {\n                self.callback.call(self, self.operation);\n\n                self.isBound = false;\n                self.callback = null;\n                self.operation = null;\n            }\n\n            self.callActions('afterHandleTransitionEnd', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Event}     e\n         * @return  {void}\n         */\n\n        eventBus: function(e) {\n            var self = this;\n\n            self.callActions('beforeEventBus', arguments);\n\n            switch (e.type) {\n                case 'webkitTransitionEnd':\n                case 'transitionend':\n                    self.handleTransitionEnd(e);\n            }\n\n            self.callActions('afterEventBus', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        unbindEvents: function() {\n            var self = this;\n\n            self.callActions('beforeUnbindEvents', arguments);\n\n            h.off(self.dom.el, 'webkitTransitionEnd', self.handler);\n            h.off(self.dom.el, 'transitionend', self.handler);\n\n            self.callActions('afterUnbindEvents', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        bindEvents: function() {\n            var self                = this,\n                transitionEndEvent  = '';\n\n            self.callActions('beforeBindEvents', arguments);\n\n            transitionEndEvent = mixitup.features.transitionPrefix === 'webkit' ? 'webkitTransitionEnd' : 'transitionend';\n\n            self.handler = function(e) {\n                return self.eventBus(e);\n            };\n\n            h.on(self.dom.el, transitionEndEvent, self.handler);\n\n            self.callActions('afterBindEvents', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {boolean}   [getBox]\n         * @return  {PosData}\n         */\n\n        getPosData: function(getBox) {\n            var self    = this,\n                styles  = {},\n                rect    = null,\n                posData = new mixitup.StyleData();\n\n            self.callActions('beforeGetPosData', arguments);\n\n            posData.x = self.dom.el.offsetLeft;\n            posData.y = self.dom.el.offsetTop;\n\n            if (self.mixer.config.animation.animateResizeTargets || getBox) {\n                rect = self.dom.el.getBoundingClientRect();\n\n                posData.top     = rect.top;\n                posData.right   = rect.right;\n                posData.bottom  = rect.bottom;\n                posData.left    = rect.left;\n\n                posData.width  = rect.width;\n                posData.height = rect.height;\n            }\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                styles = window.getComputedStyle(self.dom.el);\n\n                posData.marginBottom = parseFloat(styles.marginBottom);\n                posData.marginRight  = parseFloat(styles.marginRight);\n            }\n\n            return self.callFilters('posDataGetPosData', posData, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since       3.0.0\n         * @return      {void}\n         */\n\n        cleanUp: function() {\n            var self = this;\n\n            self.callActions('beforeCleanUp', arguments);\n\n            self.dom.el.style[mixitup.features.transformProp]  = '';\n            self.dom.el.style[mixitup.features.transitionProp] = '';\n            self.dom.el.style.opacity                          = '';\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                self.dom.el.style.width        = '';\n                self.dom.el.style.height       = '';\n                self.dom.el.style.marginRight  = '';\n                self.dom.el.style.marginBottom = '';\n            }\n\n            self.callActions('afterCleanUp', arguments);\n        }\n    });\n\n    /**\n     * A jQuery-collection-like wrapper around one or more `vender.Mixer` instances\n     * allowing simultaneous control of said instances similar to the MixItUp 2 API.\n     *\n     * @example\n     * new vender.Collection(instances)\n     *\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     * @param       {mixitup.Mixer[]}   instances\n     */\n\n    mixitup.Collection = function(instances) {\n        var instance    = null,\n            i           = -1;\n\n        this.callActions('beforeConstruct');\n\n        for (i = 0; instance = instances[i]; i++) {\n            this[i] = instance;\n        }\n\n        this.length = instances.length;\n\n        this.callActions('afterConstruct');\n\n        h.freeze(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Collection);\n\n    mixitup.Collection.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Collection.prototype,\n    /** @lends mixitup.Collection */\n    {\n        constructor: mixitup.Collection,\n\n        /**\n         * Calls a method on all instances in the collection by passing the method\n         * name as a string followed by any applicable parameters to be curried into\n         * to the method.\n         *\n         * @example\n         * .vender(methodName[,arg1][,arg2..]);\n         *\n         * @example\n         * var collection = new Collection([mixer1, mixer2]);\n         *\n         * return collection.vender('filter', '.category-a')\n         *     .then(function(states) {\n         *         state.forEach(function(state) {\n         *             console.log(state.activeFilter.selector); // .category-a\n         *         });\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}  methodName\n         * @return      {Promise<Array<mixitup.State>>}\n         */\n\n        mixitup: function(methodName) {\n            var self        = this,\n                instance    = null,\n                args        = Array.prototype.slice.call(arguments),\n                tasks       = [],\n                i           = -1;\n\n            this.callActions('beforeMixitup');\n\n            args.shift();\n\n            for (i = 0; instance = self[i]; i++) {\n                tasks.push(instance[methodName].apply(instance, args));\n            }\n\n            return self.callFilters('promiseMixitup', h.all(tasks, mixitup.libraries), arguments);\n        }\n    });\n\n    /**\n     * `vender.Operation` objects contain all data neccessary to describe the full\n     * lifecycle of any MixItUp operation. They can be used to compute and store an\n     * operation for use at a later time (e.g. programmatic tweening).\n     *\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Operation = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.id                      = '';\n\n        this.args                    = [];\n        this.command                 = null;\n        this.showPosData             = [];\n        this.toHidePosData           = [];\n\n        this.startState              = null;\n        this.newState                = null;\n        this.docState                = null;\n\n        this.willSort                = false;\n        this.willChangeLayout        = false;\n        this.hasEffect               = false;\n        this.hasFailed               = false;\n\n        this.triggerElement          = null;\n\n        this.show                    = [];\n        this.hide                    = [];\n        this.matching                = [];\n        this.toShow                  = [];\n        this.toHide                  = [];\n        this.toMove                  = [];\n        this.toRemove                = [];\n        this.startOrder              = [];\n        this.newOrder                = [];\n        this.startSort               = null;\n        this.newSort                 = null;\n        this.startFilter             = null;\n        this.newFilter               = null;\n        this.startDataset            = null;\n        this.newDataset              = null;\n        this.viewportDeltaX          = 0;\n        this.viewportDeltaY          = 0;\n        this.startX                  = 0;\n        this.startY                  = 0;\n        this.startHeight             = 0;\n        this.startWidth              = 0;\n        this.newX                    = 0;\n        this.newY                    = 0;\n        this.newHeight               = 0;\n        this.newWidth                = 0;\n        this.startContainerClassName = '';\n        this.startDisplay            = '';\n        this.newContainerClassName   = '';\n        this.newDisplay              = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Operation);\n\n    mixitup.Operation.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Operation.prototype.constructor = mixitup.Operation;\n\n    /**\n     * `vender.State` objects expose various pieces of data detailing the state of\n     * a MixItUp instance. They are provided at the start and end of any operation via\n     * callbacks and events, with the most recent state stored between operations\n     * for retrieval at any time via the API.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    vender\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.State = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * The ID of the mixer instance.\n         *\n         * @name        id\n         * @memberof    vender.State\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.id = '';\n\n        /**\n         * The currently active filter command as set by a control click or API call.\n         *\n         * @name        activeFilter\n         * @memberof    vender.State\n         * @instance\n         * @type        {mixitup.CommandFilter}\n         * @default     null\n         */\n\n        this.activeFilter = null;\n\n        /**\n         * The currently active sort command as set by a control click or API call.\n         *\n         * @name        activeSort\n         * @memberof    vender.State\n         * @instance\n         * @type        {mixitup.CommandSort}\n         * @default     null\n         */\n\n        this.activeSort = null;\n\n        /**\n         * The current layout-specific container class name, if applied.\n         *\n         * @name        activeContainerClassName\n         * @memberof    vender.State\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.activeContainerClassName = '';\n\n        /**\n         * A reference to the container element that the mixer is instantiated on.\n         *\n         * @name        container\n         * @memberof    vender.State\n         * @instance\n         * @type        {Element}\n         * @default     null\n         */\n\n        this.container = null;\n\n        /**\n         * An array of all target elements indexed by the mixer.\n         *\n         * @name        targets\n         * @memberof    vender.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.targets = [];\n\n        /**\n         * An array of all target elements not matching the current filter.\n         *\n         * @name        hide\n         * @memberof    vender.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.hide = [];\n\n        /**\n         * An array of all target elements matching the current filter and any additional\n         * limits applied such as pagination.\n         *\n         * @name        show\n         * @memberof    vender.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.show = [];\n\n        /**\n         * An array of all target elements matching the current filter irrespective of\n         * any additional limits applied such as pagination.\n         *\n         * @name        matching\n         * @memberof    vender.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.matching = [];\n\n        /**\n         * An integer representing the total number of target elements indexed by the\n         * mixer. Equivalent to `state.targets.length`.\n         *\n         * @name        totalTargets\n         * @memberof    vender.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalTargets = -1;\n\n        /**\n         * An integer representing the total number of target elements matching the\n         * current filter and any additional limits applied such as pagination.\n         * Equivalent to `state.show.length`.\n         *\n         * @name        totalShow\n         * @memberof    vender.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalShow = -1;\n\n        /**\n         * An integer representing the total number of target elements not matching\n         * the current filter. Equivalent to `state.hide.length`.\n         *\n         * @name        totalHide\n         * @memberof    vender.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalHide = -1;\n\n        /**\n         * An integer representing the total number of target elements matching the\n         * current filter irrespective of any other limits applied such as pagination.\n         * Equivalent to `state.matching.length`.\n         *\n         * @name        totalMatching\n         * @memberof    vender.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalMatching = -1;\n\n        /**\n         * A boolean indicating whether the last operation \"failed\", i.e. no targets\n         * could be found matching the filter.\n         *\n         * @name        hasFailed\n         * @memberof    vender.State\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.hasFailed = false;\n\n        /**\n         * The DOM element that was clicked if the last operation was triggered by the\n         * clicking of a control and not an API call.\n         *\n         * @name        triggerElement\n         * @memberof    vender.State\n         * @instance\n         * @type        {Element|null}\n         * @default     null\n         */\n\n        this.triggerElement = null;\n\n        /**\n         * The currently active dataset underlying the rendered targets, if the\n         * dataset API is in use.\n         *\n         * @name        activeDataset\n         * @memberof    vender.State\n         * @instance\n         * @type        {Array.<object>}\n         * @default     null\n         */\n\n        this.activeDataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.State);\n\n    mixitup.State.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.State.prototype.constructor = mixitup.State;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.UserInstruction = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.command    = {};\n        this.animate    = false;\n        this.callback   = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.UserInstruction);\n\n    mixitup.UserInstruction.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.UserInstruction.prototype.constructor = mixitup.UserInstruction;\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Messages = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /* Errors\n        ----------------------------------------------------------------------------- */\n\n        this.ERROR_FACTORY_INVALID_CONTAINER =\n            '[MixItUp] An invalid selector or element reference was passed to the vender factory function';\n\n        this.ERROR_FACTORY_CONTAINER_NOT_FOUND =\n            '[MixItUp] The provided selector yielded no container element';\n\n        this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS =\n            '[MixItUp] Invalid value for `animation.effects`';\n\n        this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE =\n            '[MixItUp] Invalid value for `controls.scope`';\n\n        this.ERROR_CONFIG_INVALID_PROPERTY =\n            '[MixitUp] Invalid configuration object property \"${erroneous}\"${suggestion}';\n\n        this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION =\n            '. Did you mean \"${probableMatch}\"?';\n\n        this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET =\n            '[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`';\n\n        this.ERROR_DATASET_INVALID_UID_KEY =\n            '[MixItUp] The specified UID key \"${uidKey}\" is not present on one or more dataset items';\n\n        this.ERROR_DATASET_DUPLICATE_UID =\n            '[MixItUp] The UID \"${uid}\" was found on two or more dataset items. UIDs must be unique.';\n\n        this.ERROR_INSERT_INVALID_ARGUMENTS =\n            '[MixItUp] Please provider either an index or a sibling and position to insert, not both';\n\n        this.ERROR_INSERT_PREEXISTING_ELEMENT =\n            '[MixItUp] An element to be inserted already exists in the container';\n\n        this.ERROR_FILTER_INVALID_ARGUMENTS =\n            '[MixItUp] Please provide either a selector or collection `.filter()`, not both';\n\n        this.ERROR_DATASET_NOT_SET =\n            '[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`';\n\n        this.ERROR_DATASET_PRERENDERED_MISMATCH =\n            '[MixItUp] `load.dataset` does not match pre-rendered targets';\n\n        this.ERROR_DATASET_RENDERER_NOT_SET =\n            '[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`';\n\n        /* Warnings\n        ----------------------------------------------------------------------------- */\n\n        this.WARNING_FACTORY_PREEXISTING_INSTANCE =\n            '[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored.' +\n            ' If you wish to perform additional methods on this instance, please create a reference.';\n\n        this.WARNING_INSERT_NO_ELEMENTS =\n            '[MixItUp] WARNING: No valid elements were passed to `.insert()`';\n\n        this.WARNING_REMOVE_NO_ELEMENTS =\n            '[MixItUp] WARNING: No valid elements were passed to `.remove()`';\n\n        this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL =\n            '[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the ' +\n            'queue is full or queuing is disabled.';\n\n        this.WARNING_GET_OPERATION_INSTANCE_BUSY =\n            '[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.';\n\n        this.WARNING_NO_PROMISE_IMPLEMENTATION =\n            '[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install' +\n            ' an ES6 Promise polyfill.';\n\n        this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES =\n            '[MixItUp] WARNING: The requested sorting data attribute \"${attribute}\" was not present on one or more target elements' +\n            ' which may product unexpected sort output';\n\n        this.callActions('afterConstruct');\n\n        this.compileTemplates();\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Messages);\n\n    mixitup.Messages.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Messages.prototype.constructor = mixitup.Messages;\n\n    /**\n     * @return {void}\n     */\n\n    mixitup.Messages.prototype.compileTemplates = function() {\n        var errorKey        = '';\n        var errorMessage    = '';\n\n        for (errorKey in this) {\n            if (typeof (errorMessage = this[errorKey]) !== 'string') continue;\n\n            this[h.camelCase(errorKey)] = h.template(errorMessage);\n        }\n    };\n\n    mixitup.messages = new mixitup.Messages();\n\n    /**\n     * @constructor\n     * @memberof    vender\n     * @private\n     * @since       3.0.0\n     * @param       {mixitup.Mixer} mixer\n     */\n\n    mixitup.Facade = function Mixer(mixer) {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct', arguments);\n\n        this.configure          = mixer.configure.bind(mixer);\n        this.show               = mixer.show.bind(mixer);\n        this.hide               = mixer.hide.bind(mixer);\n        this.filter             = mixer.filter.bind(mixer);\n        this.toggleOn           = mixer.toggleOn.bind(mixer);\n        this.toggleOff          = mixer.toggleOff.bind(mixer);\n        this.sort               = mixer.sort.bind(mixer);\n        this.changeLayout       = mixer.changeLayout.bind(mixer);\n        this.multimix           = mixer.multimix.bind(mixer);\n        this.dataset            = mixer.dataset.bind(mixer);\n        this.tween              = mixer.tween.bind(mixer);\n        this.insert             = mixer.insert.bind(mixer);\n        this.insertBefore       = mixer.insertBefore.bind(mixer);\n        this.insertAfter        = mixer.insertAfter.bind(mixer);\n        this.prepend            = mixer.prepend.bind(mixer);\n        this.append             = mixer.append.bind(mixer);\n        this.remove             = mixer.remove.bind(mixer);\n        this.destroy            = mixer.destroy.bind(mixer);\n        this.forceRefresh       = mixer.forceRefresh.bind(mixer);\n        this.forceRender        = mixer.forceRender.bind(mixer);\n        this.isMixing           = mixer.isMixing.bind(mixer);\n        this.getOperation       = mixer.getOperation.bind(mixer);\n        this.getConfig          = mixer.getConfig.bind(mixer);\n        this.getState           = mixer.getState.bind(mixer);\n\n        this.callActions('afterConstruct', arguments);\n\n        h.freeze(this);\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Facade);\n\n    mixitup.Facade.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Facade.prototype.constructor = mixitup.Facade;\n\n    if (typeof exports === 'object' && typeof module === 'object') {\n        module.exports = mixitup;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return mixitup;\n        });\n    } else if (typeof window.mixitup === 'undefined' || typeof window.mixitup !== 'function') {\n        window.mixitup = mixitup;\n    }\n    mixitup.BaseStatic.call(mixitup.constructor);\n\n    mixitup.NAME = 'mixitup';\n    mixitup.CORE_VERSION = '3.2.2';\n})(window);"]}